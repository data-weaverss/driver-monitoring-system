{"cells":[{"cell_type":"code","execution_count":2,"metadata":{"executionInfo":{"elapsed":41,"status":"ok","timestamp":1742229799237,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"},"user_tz":-540},"id":"J68SdBzNjphV"},"outputs":[],"source":["# from google.colab import drive\n","# drive.mount('/content/drive/')"]},{"cell_type":"markdown","metadata":{"id":"wUDOtyCzmZth"},"source":["## **학습 & 테스트 프로세스 요약**\n","| 단계 | 학습 (Train) | 테스트 (Test) |\n","|------|------------|-------------|\n","| **1. 데이터 입력** | CSV 파일 (이미 추출된 특징값) | 동영상 |\n","| **2. 특징 추출** | CSV에서 불러오기 | 동영상 → 프레임 추출 → 12개 묶음 → 특징 추출 |\n","| **3. 데이터 변환** | `(배치, 12, 5)` 형태로 변환 | `(1, 12, 5)` 형태로 변환 |\n","| **4. 모델 학습/예측** | LSTM 모델 학습 | LSTM 모델을 이용해 예측 |\n","| **5. 결과 저장** | `.pth` 파일로 저장 | 예측값 출력 |\n"]},{"cell_type":"markdown","metadata":{"id":"Fk84YrSckNTx"},"source":["# 1. 학습"]},{"cell_type":"markdown","metadata":{"id":"QJKfO0xhkSSz"},"source":["1. 추출된 feature 로드 및 병합\n","2. LSTM Input 형식으로 변환\n","3. LSTM 학습"]},{"cell_type":"markdown","source":["## 라이브러리 임포트"],"metadata":{"id":"FJuBF9S3WK2y"}},{"cell_type":"code","source":["# !pip install koreanize-matplotlib"],"metadata":{"id":"RUcDoYl9WKdi","executionInfo":{"status":"ok","timestamp":1742229812381,"user_tz":-540,"elapsed":2,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","execution_count":5,"metadata":{"id":"qtMzGHiCkMEO","executionInfo":{"status":"ok","timestamp":1742229831660,"user_tz":-540,"elapsed":16676,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}}},"outputs":[],"source":["import os\n","import datetime\n","from tqdm import tqdm\n","import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import confusion_matrix, classification_report\n","from collections import Counter\n","import koreanize_matplotlib\n","\n","import torch\n","import torch.nn as nn\n","import torch.nn.functional as F\n","import torchvision.models as models\n","import torchvision.transforms as transforms\n","from torch.utils.data import DataLoader, TensorDataset\n","import torch.utils.data as data\n","import torch.optim as optim\n","import torchvision\n","from torch.autograd import Variable\n","\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.metrics import accuracy_score\n","from PIL import Image\n","\n","import warnings\n","warnings.filterwarnings('ignore')"]},{"cell_type":"markdown","metadata":{"id":"1Srd-RY9pcZE"},"source":["## 1-2. LSTM Input 형식으로 변환"]},{"cell_type":"markdown","metadata":{"id":"JwkJmAOOFgDF"},"source":["### Config 설정"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"J0uHHAFSEwCH","executionInfo":{"status":"ok","timestamp":1742229838910,"user_tz":-540,"elapsed":4,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}}},"outputs":[],"source":["config = {\n","    # RNN 설정\n","    \"RNN_hidden_layers\": 3,  # LSTM Layer 개수\n","    \"RNN_hidden_nodes\": 512,  # RNN Hidden State 크기\n","    \"RNN_FC_dim\": 256,  # RNN 최종 FC Layer 뉴런 개수\n","    \"dropout_p\": 0.2,  # 드롭아웃 비율\n","\n","    # 학습 설정\n","    \"k\": 4,  # 클래스 개수 (normal, yawn, phonecall, text)\n","    \"feature_num\": 5, # gaze_pitch, gaze_yaw, EAR, MAR, phone_detected\n","    \"timestep\": 12,\n","    \"epochs\": 100,  # 총 학습 횟수\n","    \"batch_size\": 32,  # 배치 크기\n","    \"learning_rate\": 5e-5,  # 학습률\n","    \"log_interval\": 5,  # 몇 번의 배치마다 로그 출력할지\n","\n","    \"action_names\": [\"normal\", \"phonecall\", \"text\", \"yawn\"],  # 분류할 행동 리스트\n","\n","    \"use_cuda\": torch.cuda.is_available(),\n","    \"device\": torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\"),  # GPU 사용 가능 여부에 따라 설정\n","    \"early_stopping_patience\": 5,  # Early Stopping 기준 Epoch\n","    \"reduce_lr_factor\": 0.5,  # Learning Rate 감소 비율\n","    \"reduce_lr_patience\": 3,  # Learning Rate 감소 기준 Epoch\n","\n","    # 모델 결과 저장 경로\n","    \"model_save_path\": \"/content/drive/MyDrive/DMS/data/model_results/031716_baseline_test\",\n","    \"train_result_path\": \"/content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results\",\n","}"]},{"cell_type":"markdown","source":["## 데이터 로드"],"metadata":{"id":"pRHMOaLpW7Y2"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"3MXMQC38jyny"},"outputs":[],"source":["# 하이퍼파라미터\n","BATCH_SIZE = config['batch_size']\n","TIMESTEP = config['timestep']\n","FEATURE_DIM = config['feature_num'] # Pitch, Yaw, EAR, MAR (Phone_YN)\n","NUM_CLASSES = config['k']  # normal, phonecall, text, yawn\n","\n","# CSV에서 추출된 feature 불러오기\n","def load_features(df):\n","    # 데이터 정렬\n","    df = df.sort_values(by=[\"label\", \"video_name\", \"frame\"]) # 내림차순 정렬\n","\n","    # 특징값만 추출\n","    features = df[[\"gaze_pitch\", \"gaze_yaw\", \"EAR\", \"MAR\", \"phone_detected\"]].values  # (104652, 5)\n","\n","    # label 인코딩\n","    label_mapping = {\"normal\": 0, \"phonecall\": 1, \"text\": 2, \"yawn\": 3}\n","    labels = df[\"label\"].map(label_mapping).values\n","\n","    # LSTM Input 형식 변환\n","    num_samples = len(features) // TIMESTEP  # 전체 샘플 개수 = 8721\n","    # 데이터가 12프레임에 맞아 떨어지지 않는 경우 처리\n","    features = features[: num_samples * TIMESTEP]  # TIMESTEP에 맞게 자르기\n","    features = features.reshape(num_samples, TIMESTEP, FEATURE_DIM)  # (전체 샘플 개수, TIMESTEP, 4)\n","\n","    labels = labels[:num_samples * TIMESTEP:TIMESTEP]  # 한 시퀀스 당 하나의 레이블 선택\n","\n","    # pytorch tensor 변환\n","    return torch.tensor(features, dtype=torch.float32), torch.tensor(labels, dtype=torch.float32)"]},{"cell_type":"markdown","source":["### create_sequences"],"metadata":{"id":"sfW1xu5IGAqQ"}},{"cell_type":"code","source":["# 하이퍼파라미터\n","BATCH_SIZE = config['batch_size']\n","TIMESTEP = config['timestep']\n","FEATURE_DIM = config['feature_num']\n","NUM_CLASSES = config['k']  # normal, phonecall, text, yawn\n","\n","def create_sequences(df):\n","    \"\"\"\n","    video_clip을 기준으로 TIMESTEP 프레임 단위로 묶어 시퀀스를 생성하는 함수\n","    \"\"\"\n","    # 데이터 정렬\n","    df = df.sort_values(by=[\"label\", \"video_name\", \"frame\"]) # 내림차순 정렬\n","\n","    # label 인코딩\n","    label_mapping = {\"normal\": 0, \"phonecall\": 1, \"text\": 2, \"yawn\": 3}\n","    df[\"label\"] = df[\"label\"].map(label_mapping).values\n","\n","    # 비디오 클립별 그룹화 -> timestep 만큼 feature추출\n","    features = [\"gaze_pitch\", \"gaze_yaw\", \"EAR\", \"MAR\", \"phone_detected\"]\n","    grouped = df.groupby([\"label\", \"video_clip\"])\n","\n","    skip_cnt = [0] * config['k']\n","    X, y = [], []\n","\n","    for _, group in grouped:\n","        group = group.sort_values(by=\"frame\")  # 프레임 순서 정렬\n","        feature_values = group[features].values\n","        labels = group[\"label\"].values\n","\n","        num_samples = len(feature_values) // TIMESTEP  # 가능한 샘플 개수\n","        if num_samples == 0:\n","            # print(f\"⚠ Warning: Skipping video_clip (not enough frames: {len(feature_values)})\")\n","            skip_cnt[labels[0]] += 1\n","            continue # 샘플이 없으면 건너뛰기\n","        elif len(feature_values) % TIMESTEP != 0: # 24 로 나누어 떨어지지 않음\n","            skip_cnt[labels[0]] += 1\n","\n","        feature_values = feature_values[:num_samples * TIMESTEP]  # timestep 단위로 자르기\n","        labels = labels[:num_samples * TIMESTEP]  # 라벨도 동일하게 자르기\n","        feature_values = feature_values.reshape(num_samples, TIMESTEP, -1) # (전체 샘플 개수, TIMESTEP, FEATURES_DIM)\n","\n","        for i in range(num_samples):\n","            X.append(feature_values[i])\n","            y.append(labels[i*TIMESTEP])\n","\n","    print(f\"Number of video clips skipped: {skip_cnt}\")\n","\n","    return torch.tensor(X, dtype=torch.float32), torch.tensor(y, dtype=torch.long)"],"metadata":{"id":"t5wP6X9N6qmA","executionInfo":{"status":"ok","timestamp":1742229854936,"user_tz":-540,"elapsed":6,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["train = pd.read_csv(\"/content/drive/MyDrive/DMS/data/EDA/train_processed.csv\")\n","test = pd.read_csv(\"/content/drive/MyDrive/DMS/data/EDA/test_processed.csv\")"],"metadata":{"id":"0MtVH9Hmst3C","executionInfo":{"status":"ok","timestamp":1742229871302,"user_tz":-540,"elapsed":9617,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}}},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":["### Vaildation split"],"metadata":{"id":"9z7u2SqiZfPz"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","# Step 1: 사람별 ID 추출\n","def get_person_id(video_name):\n","    \"\"\"\n","    video_name에서 사람별 ID를 추출합니다.\n","    \"\"\"\n","    return video_name.split(\"_\")[0]  # 예: \"dash#\", \"mirror#\", \"gA#\" 등\n","\n","# Step 2: 사람별로 train과 validation 세트 나누기\n","def split_by_person(data, test_size=0.2, random_state=42):\n","    \"\"\"\n","    사람별로 데이터를 train과 validation 세트로 나눕니다.\n","\n","    Args:\n","        data (pd.DataFrame): 전체 데이터프레임.\n","        test_size (float): validation 세트 비율.\n","        random_state (int): 랜덤 시드 값.\n","\n","    Returns:\n","        train_data (pd.DataFrame): Train 데이터프레임.\n","        validation_data (pd.DataFrame): Validation 데이터프레임.\n","    \"\"\"\n","    # 고유한 person_id 목록 추출\n","    unique_person_ids = data['person_id'].unique()\n","\n","    # person_id를 기준으로 train/validation 분리\n","    train_ids, validation_ids = train_test_split(unique_person_ids, test_size=test_size, random_state=random_state)\n","\n","    # train/validation 데이터프레임 생성\n","    train_data = data[data['person_id'].isin(train_ids)]\n","    validation_data = data[data['person_id'].isin(validation_ids)]\n","\n","    return train_data, validation_data\n","\n","# Step 3: 라벨별 비율 확인 함수\n","def check_label_distribution(data, label_column='label'):\n","    \"\"\"\n","    데이터에서 라벨별 비율을 계산합니다.\n","\n","    Args:\n","        data (pd.DataFrame): 입력 데이터프레임.\n","        label_column (str): 라벨 컬럼 이름.\n","\n","    Returns:\n","        pd.Series: 라벨별 비율.\n","    \"\"\"\n","    label_counts = data[label_column].value_counts(normalize=True) * 100  # 비율 계산 (%)\n","    return label_counts\n","\n","# 데이터에 person_id 열 추가\n","train['person_id'] = train['video_name'].apply(get_person_id)\n","# Train/Validation 분리\n","train_data_origin, validation_data_origin = split_by_person(train)\n","\n","# Train/Validation의 라벨별 비율 확인\n","train_label_distribution = check_label_distribution(train_data_origin)\n","validation_label_distribution = check_label_distribution(validation_data_origin)\n","\n","# 결과 출력\n","print(\"Train Label Distribution (%):\")\n","print(train_label_distribution)\n","\n","print(\"\\nValidation Label Distribution (%):\")\n","print(validation_label_distribution)\n","\n","# Train/Validation 데이터 크기 확인\n","print(f\"\\nTrain Data: {len(train_data_origin)} rows\")\n","print(f\"Validation Data: {len(validation_data_origin)} rows\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"etw_SX3GZd-R","executionInfo":{"status":"ok","timestamp":1742229890925,"user_tz":-540,"elapsed":146,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}},"outputId":"1e98144b-6376-47e6-9b3b-d9bf0cc4f6ff"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Train Label Distribution (%):\n","label\n","normal       62.678311\n","phonecall    24.133916\n","text          8.922853\n","yawn          4.264920\n","Name: proportion, dtype: float64\n","\n","Validation Label Distribution (%):\n","label\n","normal       60.106667\n","phonecall    24.000000\n","text         11.946667\n","yawn          3.946667\n","Name: proportion, dtype: float64\n","\n","Train Data: 82440 rows\n","Validation Data: 22500 rows\n"]}]},{"cell_type":"code","source":["sort_key = [\"label\", \"video_name\", \"frame\", \"video_clip\"]\n","features = [\"gaze_pitch\", \"gaze_yaw\", \"EAR\", \"MAR\", \"phone_detected\"]\n","train = train_data_origin[sort_key + features]\n","valid = validation_data_origin[sort_key + features]\n","test = test[sort_key + features]"],"metadata":{"id":"aa1CqJW8L2Zh","executionInfo":{"status":"ok","timestamp":1742229909039,"user_tz":-540,"elapsed":4,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["train = train.dropna()\n","valid = valid.dropna()\n","test = test.dropna()\n","print(\"학습 데이터: \", train.shape)\n","print(\"검증 데이터: \", valid.shape)\n","print(\"테스트 데이터: \", test.shape)"],"metadata":{"id":"_pbbb2LsMcK3","executionInfo":{"status":"ok","timestamp":1742229911286,"user_tz":-540,"elapsed":18,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"0955c035-c877-47d9-be48-3550b1fa3895"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["학습 데이터:  (82188, 9)\n","검증 데이터:  (22464, 9)\n","테스트 데이터:  (23544, 9)\n"]}]},{"cell_type":"code","source":["train_count = train_data_origin.groupby('label')['label'].count().reset_index(name='frame_count')\n","train_count['clip_count'] = train_count['frame_count'] // config['timestep']\n","train_count['ratio'] = round(train_count['clip_count'] / train_count['clip_count'].sum() * 100, 1) # 비율 계산\n","print(\"-----------Train-----------\")\n","display(train_count)\n","print(\"-----------Validation-----------\")\n","val_count = validation_data_origin.groupby('label')['label'].count().reset_index(name='frame_count')\n","val_count['clip_count'] = val_count['frame_count'] // config['timestep']\n","val_count['ratio'] = round(val_count['clip_count'] / val_count['clip_count'].sum() * 100, 1) # 비율 계산\n","display(val_count)\n","print(\"-----------Test-----------\")\n","test_count = test.groupby('label')['label'].count().reset_index(name='frame_count')\n","test_count['clip_count'] = test_count['frame_count'] // config['timestep']\n","test_count['ratio'] = round(test_count['clip_count'] / test_count['clip_count'].sum() * 100, 1) # 비율 계산\n","display(test_count)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"_SY28qiApEWa","executionInfo":{"status":"ok","timestamp":1742229922375,"user_tz":-540,"elapsed":97,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}},"outputId":"c3083d5a-6eed-4231-bc9a-10f29c252f50"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["-----------Train-----------\n"]},{"output_type":"display_data","data":{"text/plain":["       label  frame_count  clip_count  ratio\n","0     normal        51672        4306   62.7\n","1  phonecall        19896        1658   24.1\n","2       text         7356         613    8.9\n","3       yawn         3516         293    4.3"],"text/html":["\n","  <div id=\"df-8b8af94d-bcc9-427d-a396-85f560fcbc07\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>frame_count</th>\n","      <th>clip_count</th>\n","      <th>ratio</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>normal</td>\n","      <td>51672</td>\n","      <td>4306</td>\n","      <td>62.7</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>phonecall</td>\n","      <td>19896</td>\n","      <td>1658</td>\n","      <td>24.1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>text</td>\n","      <td>7356</td>\n","      <td>613</td>\n","      <td>8.9</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>yawn</td>\n","      <td>3516</td>\n","      <td>293</td>\n","      <td>4.3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b8af94d-bcc9-427d-a396-85f560fcbc07')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8b8af94d-bcc9-427d-a396-85f560fcbc07 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8b8af94d-bcc9-427d-a396-85f560fcbc07');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2aa22e4e-2be9-48e5-855e-96290404d38a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2aa22e4e-2be9-48e5-855e-96290404d38a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2aa22e4e-2be9-48e5-855e-96290404d38a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_58ac5e9f-4135-48c4-a4a2-f3aaa7df281f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('train_count')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_58ac5e9f-4135-48c4-a4a2-f3aaa7df281f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('train_count');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_count","summary":"{\n  \"name\": \"train_count\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"phonecall\",\n          \"yawn\",\n          \"normal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"frame_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21857,\n        \"min\": 3516,\n        \"max\": 51672,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          19896,\n          3516,\n          51672\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clip_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1821,\n        \"min\": 293,\n        \"max\": 4306,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1658,\n          293,\n          4306\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ratio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.519175452239587,\n        \"min\": 4.3,\n        \"max\": 62.7,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          24.1,\n          4.3,\n          62.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["-----------Validation-----------\n"]},{"output_type":"display_data","data":{"text/plain":["       label  frame_count  clip_count  ratio\n","0     normal        13524        1127   60.1\n","1  phonecall         5400         450   24.0\n","2       text         2688         224   11.9\n","3       yawn          888          74    3.9"],"text/html":["\n","  <div id=\"df-5771c5dd-9910-4df9-b05f-e09915380b72\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>frame_count</th>\n","      <th>clip_count</th>\n","      <th>ratio</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>normal</td>\n","      <td>13524</td>\n","      <td>1127</td>\n","      <td>60.1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>phonecall</td>\n","      <td>5400</td>\n","      <td>450</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>text</td>\n","      <td>2688</td>\n","      <td>224</td>\n","      <td>11.9</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>yawn</td>\n","      <td>888</td>\n","      <td>74</td>\n","      <td>3.9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5771c5dd-9910-4df9-b05f-e09915380b72')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5771c5dd-9910-4df9-b05f-e09915380b72 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5771c5dd-9910-4df9-b05f-e09915380b72');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cdd8b728-eddf-4d8b-8bca-9fd5a8bfafa0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cdd8b728-eddf-4d8b-8bca-9fd5a8bfafa0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cdd8b728-eddf-4d8b-8bca-9fd5a8bfafa0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_851e9030-bcd0-40c0-b26e-917e5b09d837\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('val_count')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_851e9030-bcd0-40c0-b26e-917e5b09d837 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('val_count');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"val_count","summary":"{\n  \"name\": \"val_count\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"phonecall\",\n          \"yawn\",\n          \"normal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"frame_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5583,\n        \"min\": 888,\n        \"max\": 13524,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5400,\n          888,\n          13524\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clip_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 465,\n        \"min\": 74,\n        \"max\": 1127,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          450,\n          74,\n          1127\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ratio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24.831616271734443,\n        \"min\": 3.9,\n        \"max\": 60.1,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          24.0,\n          3.9,\n          60.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["-----------Test-----------\n"]},{"output_type":"display_data","data":{"text/plain":["       label  frame_count  clip_count  ratio\n","0     normal        14100        1175   59.9\n","1  phonecall         5664         472   24.1\n","2       text         2568         214   10.9\n","3       yawn         1212         101    5.1"],"text/html":["\n","  <div id=\"df-4fc885fb-d1e7-4964-a9cd-3796de04b872\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>frame_count</th>\n","      <th>clip_count</th>\n","      <th>ratio</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>normal</td>\n","      <td>14100</td>\n","      <td>1175</td>\n","      <td>59.9</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>phonecall</td>\n","      <td>5664</td>\n","      <td>472</td>\n","      <td>24.1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>text</td>\n","      <td>2568</td>\n","      <td>214</td>\n","      <td>10.9</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>yawn</td>\n","      <td>1212</td>\n","      <td>101</td>\n","      <td>5.1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4fc885fb-d1e7-4964-a9cd-3796de04b872')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4fc885fb-d1e7-4964-a9cd-3796de04b872 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4fc885fb-d1e7-4964-a9cd-3796de04b872');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-03dfaf11-154d-4df6-bc28-1f02c032262b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-03dfaf11-154d-4df6-bc28-1f02c032262b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-03dfaf11-154d-4df6-bc28-1f02c032262b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_837c6d90-7a43-4f78-b637-c4eced64c085\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('test_count')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_837c6d90-7a43-4f78-b637-c4eced64c085 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('test_count');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test_count","summary":"{\n  \"name\": \"test_count\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"phonecall\",\n          \"yawn\",\n          \"normal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"frame_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5784,\n        \"min\": 1212,\n        \"max\": 14100,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5664,\n          1212,\n          14100\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clip_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 482,\n        \"min\": 101,\n        \"max\": 1175,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          472,\n          101,\n          1175\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ratio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24.587530715113843,\n        \"min\": 5.1,\n        \"max\": 59.9,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          24.1,\n          5.1,\n          59.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["# Train, Valid, Test dataset\n","train_features, train_labels = create_sequences(train)\n","valid_features, valid_labels = create_sequences(valid)\n","test_features, test_labels = create_sequences(test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NSCn6cj2FJeJ","executionInfo":{"status":"ok","timestamp":1742229946051,"user_tz":-540,"elapsed":2207,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}},"outputId":"d006acdc-7a4d-4380-9c00-17d1d836e8c2"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of video clips skipped: [0, 0, 0, 0]\n","Number of video clips skipped: [0, 0, 0, 0]\n","Number of video clips skipped: [0, 0, 0, 0]\n"]}]},{"cell_type":"code","source":["label_mapping_inverse = {\n","    0: \"normal\",\n","    1: \"phonecall\",\n","    2: \"text\",\n","    3: \"yawn\"\n","}\n","\n","# 레이블 개수 및 비율 계산\n","label_counts = pd.Series(train_labels).value_counts()\n","label_ratios = pd.Series(train_labels).value_counts(normalize=True) * 100  # 비율 계산 (백분율)\n","\n","# 매핑된 결과 출력\n","print(\"레이블 분포:\")\n","print(\"-----------Train-----------\")\n","for label, count in label_counts.items():\n","    print(f\"{label_mapping_inverse[label]}: {count}개 ({label_ratios[label]:.2f}%)\")\n","\n","# 레이블 개수 및 비율 계산\n","label_counts = pd.Series(valid_labels).value_counts()\n","label_ratios = pd.Series(valid_labels).value_counts(normalize=True) * 100  # 비율 계산 (백분율)\n","\n","# 매핑된 결과 출력\n","print(\"레이블 분포:\")\n","print(\"-----------Valid-----------\")\n","for label, count in label_counts.items():\n","    print(f\"{label_mapping_inverse[label]}: {count}개 ({label_ratios[label]:.2f}%)\")\n","\n","# 레이블 개수 및 비율 계산\n","label_counts = pd.Series(test_labels).value_counts()\n","label_ratios = pd.Series(test_labels).value_counts(normalize=True) * 100  # 비율 계산 (백분율)\n","\n","print(\"-----------Test-----------\")\n","for label, count in label_counts.items():\n","    print(f\"{label_mapping_inverse[label]}: {count}개 ({label_ratios[label]:.2f}%)\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2wjlaK3ZqNN8","executionInfo":{"status":"ok","timestamp":1742229948670,"user_tz":-540,"elapsed":8,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}},"outputId":"a51cbdb8-fc21-4bd1-b6e0-179a4b9a75d1"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["레이블 분포:\n","-----------Train-----------\n","normal: 4285개 (62.56%)\n","phonecall: 1658개 (24.21%)\n","text: 613개 (8.95%)\n","yawn: 293개 (4.28%)\n","레이블 분포:\n","-----------Valid-----------\n","normal: 1126개 (60.15%)\n","phonecall: 448개 (23.93%)\n","text: 224개 (11.97%)\n","yawn: 74개 (3.95%)\n","-----------Test-----------\n","normal: 1175개 (59.89%)\n","phonecall: 472개 (24.06%)\n","text: 214개 (10.91%)\n","yawn: 101개 (5.15%)\n"]}]},{"cell_type":"code","source":["train_features.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JTeQkvJZiwGH","executionInfo":{"status":"ok","timestamp":1742207524788,"user_tz":-540,"elapsed":6,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}},"outputId":"899b9011-a0cf-46fe-ecb1-10e0de9e40ff"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.Size([6849, 12, 5])"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["print(torch.bincount(train_labels))\n","print(torch.bincount(valid_labels))\n","print(torch.bincount(test_labels))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"019w311Gs-yj","executionInfo":{"status":"ok","timestamp":1742207543858,"user_tz":-540,"elapsed":20,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}},"outputId":"bb16b74a-bcb3-4e88-fdd1-25c5b7594a58"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([4285, 1658,  613,  293])\n","tensor([1126,  448,  224,   74])\n","tensor([1175,  472,  214,  101])\n"]}]},{"cell_type":"code","source":["cnt = pd.Series(train_labels).value_counts().reset_index()\n","cnt['frames'] = cnt['count']*config['timestep']\n","cnt"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"A06CRwSFuOPb","executionInfo":{"status":"ok","timestamp":1742205476807,"user_tz":-540,"elapsed":46,"user":{"displayName":"심소민","userId":"13422866620659141828"}},"outputId":"8a5a5cb1-3254-4bb5-8c71-40b5c2f574a7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   index  count  frames\n","0      0   4285   51420\n","1      1   1658   19896\n","2      2    613    7356\n","3      3    293    3516"],"text/html":["\n","  <div id=\"df-37fe974b-2e5a-46d4-b699-eb02bf95f789\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>count</th>\n","      <th>frames</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>4285</td>\n","      <td>51420</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1658</td>\n","      <td>19896</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>613</td>\n","      <td>7356</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>293</td>\n","      <td>3516</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-37fe974b-2e5a-46d4-b699-eb02bf95f789')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-37fe974b-2e5a-46d4-b699-eb02bf95f789 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-37fe974b-2e5a-46d4-b699-eb02bf95f789');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b816824f-1bb8-4267-8d8c-7c3b52f0d39d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b816824f-1bb8-4267-8d8c-7c3b52f0d39d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b816824f-1bb8-4267-8d8c-7c3b52f0d39d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a254a1ab-16df-4487-b8ab-729ebe67ddd1\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cnt')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a254a1ab-16df-4487-b8ab-729ebe67ddd1 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cnt');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cnt","summary":"{\n  \"name\": \"cnt\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          3,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1811,\n        \"min\": 293,\n        \"max\": 4285,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1658,\n          293,\n          4285\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"frames\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21738,\n        \"min\": 3516,\n        \"max\": 51420,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          19896,\n          3516,\n          51420\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["cnt = pd.Series(valid_labels).value_counts().reset_index()\n","cnt['frames'] = cnt['count']*config['timestep']\n","cnt"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"eCJy6tkHUjUr","executionInfo":{"status":"ok","timestamp":1742205479609,"user_tz":-540,"elapsed":83,"user":{"displayName":"심소민","userId":"13422866620659141828"}},"outputId":"3ecdefad-49c1-4983-e2e8-ce24f4474ab5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   index  count  frames\n","0      0   1126   13512\n","1      1    448    5376\n","2      2    224    2688\n","3      3     74     888"],"text/html":["\n","  <div id=\"df-45d028cf-078f-40cc-98d9-89426d45c485\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>count</th>\n","      <th>frames</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1126</td>\n","      <td>13512</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>448</td>\n","      <td>5376</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>224</td>\n","      <td>2688</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>74</td>\n","      <td>888</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-45d028cf-078f-40cc-98d9-89426d45c485')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-45d028cf-078f-40cc-98d9-89426d45c485 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-45d028cf-078f-40cc-98d9-89426d45c485');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a932302e-95b7-4ef5-a4d6-60576b829e33\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a932302e-95b7-4ef5-a4d6-60576b829e33')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a932302e-95b7-4ef5-a4d6-60576b829e33 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_32e299ef-ace3-468a-83d9-96d87cdae815\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cnt')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_32e299ef-ace3-468a-83d9-96d87cdae815 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cnt');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cnt","summary":"{\n  \"name\": \"cnt\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          3,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 464,\n        \"min\": 74,\n        \"max\": 1126,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          448,\n          74,\n          1126\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"frames\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5577,\n        \"min\": 888,\n        \"max\": 13512,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5376,\n          888,\n          13512\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["cnt = pd.Series(test_labels).value_counts().reset_index()\n","cnt['frames'] = cnt['count']*config['timestep']\n","cnt"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"Vy2OAtdFUpfd","executionInfo":{"status":"ok","timestamp":1742205481658,"user_tz":-540,"elapsed":45,"user":{"displayName":"심소민","userId":"13422866620659141828"}},"outputId":"e7f44e48-7750-49f7-a089-2c96fd3029b2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   index  count  frames\n","0      0   1175   14100\n","1      1    472    5664\n","2      2    214    2568\n","3      3    101    1212"],"text/html":["\n","  <div id=\"df-02e21163-bedf-4335-b6bb-348129e599c0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>count</th>\n","      <th>frames</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1175</td>\n","      <td>14100</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>472</td>\n","      <td>5664</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>214</td>\n","      <td>2568</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>101</td>\n","      <td>1212</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-02e21163-bedf-4335-b6bb-348129e599c0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-02e21163-bedf-4335-b6bb-348129e599c0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-02e21163-bedf-4335-b6bb-348129e599c0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f02b5074-4f19-4511-b9db-25ab008eb142\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f02b5074-4f19-4511-b9db-25ab008eb142')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f02b5074-4f19-4511-b9db-25ab008eb142 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d5ab8a8f-0788-4ef5-83be-44d5aa67b4bf\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cnt')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d5ab8a8f-0788-4ef5-83be-44d5aa67b4bf button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cnt');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cnt","summary":"{\n  \"name\": \"cnt\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          3,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 482,\n        \"min\": 101,\n        \"max\": 1175,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          472,\n          101,\n          1175\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"frames\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5784,\n        \"min\": 1212,\n        \"max\": 14100,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5664,\n          1212,\n          14100\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","metadata":{"id":"ZljfCD-_tY9q"},"source":["### 데이터 둘러보기 - 시각화\n","- 훈련 데이터 개수\n","- 테스트 데이터 개수\n","- 타겟값 분포"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2gu3WnqW66eg"},"outputs":[],"source":["def visualize_data_distribution(train_df, test_df):\n","    \"\"\"\n","    훈련/테스트 데이터 개수 및 타겟값 분포를 시각화하는 함수\n","    \"\"\"\n","    # 데이터 개수 확인\n","    class_names = list(train_df['label'].unique())\n","    train_label_counts = train_df['label'].value_counts()\n","    test_label_counts = test_df['label'].value_counts()\n","\n","    print(f\"📌 훈련 데이터 개수: {len(train_df)}\")\n","    print(f\"📌 테스트 데이터 개수: {len(test_df)}\")\n","\n","    # 클래스별 개수 정렬\n","    train_counts_sorted = [train_label_counts[class_name] for class_name in class_names]\n","    test_counts_sorted = [test_label_counts[class_name] for class_name in class_names]\n","\n","    # 시각화\n","    fig, axes = plt.subplots(1, 2, figsize=(12, 5))\n","\n","    # (왼쪽) Bar Chart - 클래스별 샘플 개수 비교\n","    x = np.arange(len(class_names))\n","    width = 0.4\n","\n","    axes[0].bar(x - width / 2, train_counts_sorted, width, label=\"Train\", alpha=0.7)\n","    axes[0].bar(x + width / 2, test_counts_sorted, width, label=\"Test\", alpha=0.7)\n","    axes[0].set_xticks(x)\n","    axes[0].set_xticklabels(class_names, rotation=45)\n","    axes[0].set_ylabel(\"샘플 개수\")\n","    axes[0].set_title(\"클래스별 데이터 분포\")\n","    axes[0].legend()\n","\n","    # (오른쪽) Pie Chart - 전체 데이터 비율\n","    total_counts = np.array(\n","        [\n","            train_label_counts[class_name] + test_label_counts[class_name]\n","            for class_name in class_names\n","        ]\n","    )\n","    axes[1].pie(\n","        total_counts,\n","        labels=class_names,\n","        autopct=\"%1.1f%%\",\n","        startangle=140,\n","        colors=plt.cm.Paired.colors,\n","    )\n","    axes[1].set_title(\"클래스별 전체 데이터 비율\")\n","\n","    plt.tight_layout()\n","    plt.show()"]},{"cell_type":"code","source":["visualize_data_distribution(train, test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"Rpi6NveXaid-","executionInfo":{"status":"ok","timestamp":1742205484914,"user_tz":-540,"elapsed":520,"user":{"displayName":"심소민","userId":"13422866620659141828"}},"outputId":"a55df3fb-ee81-4b8d-ee53-38006bd9058c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["📌 훈련 데이터 개수: 82188\n","📌 테스트 데이터 개수: 23544\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"iGaRQUVjFDPA"},"source":["### DataLoader"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"safri8zEE8Qs","executionInfo":{"status":"ok","timestamp":1742229979824,"user_tz":-540,"elapsed":40,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}}},"outputs":[],"source":["# DataLoader 설정\n","params = {\n","    \"batch_size\": config[\"batch_size\"],\n","    \"shuffle\": True,\n","    \"num_workers\": 4,\n","    \"pin_memory\": True,\n","    \"persistent_workers\": True,\n","    \"prefetch_factor\": 2,\n","} if config[\"use_cuda\"] else {}"]},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":538,"status":"ok","timestamp":1742229987507,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"},"user_tz":-540},"id":"kkBxlRECyZZs","outputId":"bb5e73e4-d7c2-4485-bd1b-47ea2c2ec0f7"},"outputs":[{"output_type":"stream","name":"stdout","text":["Batch Shape: torch.Size([32, 12, 5]) torch.Size([32])\n","Batch Shape: torch.Size([32, 12, 5]) torch.Size([32])\n","Batch Shape: torch.Size([32, 12, 5]) torch.Size([32])\n"]}],"source":["# DataLoader 생성 (배치 단위로 데이터를 나누기 위해 사용)\n","train_dataset = TensorDataset(train_features, train_labels)\n","valid_dataset = TensorDataset(valid_features, valid_labels)\n","test_dataset = TensorDataset(test_features, test_labels)\n","\n","train_loader = DataLoader(train_dataset, **params)\n","valid_loader = DataLoader(valid_dataset, **params)\n","test_loader = DataLoader(test_dataset, **params)\n","\n","# 배치 단위 확인\n","for x_batch, y_batch in train_loader:\n","    print(\"Batch Shape:\", x_batch.shape, y_batch.shape)  # (batch_size, timestep, feature), (batch_size,)\n","    break  # 한 배치만 확인\n","\n","for x_batch, y_batch in valid_loader:\n","    print(\"Batch Shape:\", x_batch.shape, y_batch.shape)  # (batch_size, timestep, feature), (batch_size,)\n","    break  # 한 배치만 확인\n","\n","for x_batch, y_batch in test_loader:\n","    print(\"Batch Shape:\", x_batch.shape, y_batch.shape)  # (batch_size, timestep, feature), (batch_size,)\n","    break  # 한 배치만 확인"]},{"cell_type":"code","source":["# Train, Test 라벨별 개수 확인\n","labels = train_labels.to(torch.long)#  Long 타입으로 변환\n","counts = torch.bincount(labels)\n","print(counts)\n","\n","labels = valid_labels.to(torch.long)#  Long 타입으로 변환\n","counts = torch.bincount(labels)\n","print(counts)\n","\n","labels = test_labels.to(torch.long)\n","counts = torch.bincount(labels)\n","print(counts)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4ysNu39ArKqk","executionInfo":{"status":"ok","timestamp":1742230034202,"user_tz":-540,"elapsed":18,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}},"outputId":"2796033e-f9f8-4fee-903d-4b4d2f1c960f"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([4285, 1658,  613,  293])\n","tensor([1126,  448,  224,   74])\n","tensor([1175,  472,  214,  101])\n"]}]},{"cell_type":"markdown","metadata":{"id":"fROYd8X1zYa7"},"source":["## 1-3. LSTM 학습"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"AOK3mN2xHwtt","executionInfo":{"status":"ok","timestamp":1742230041150,"user_tz":-540,"elapsed":35,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}}},"outputs":[],"source":["# LSTM 모델 정의\n","class DecoderRNN(nn.Module):\n","    def __init__(self, config):\n","        super(DecoderRNN, self).__init__()\n","\n","        self.RNN_input_size = config['feature_num']  # 특징 개수\n","        self.h_RNN_layers = config[\"RNN_hidden_layers\"]\n","        self.h_RNN = config[\"RNN_hidden_nodes\"]\n","        self.h_FC_dim = config[\"RNN_FC_dim\"]\n","        self.drop_p = config[\"dropout_p\"]\n","        self.num_classes = config[\"k\"]\n","\n","        self.LSTM = nn.LSTM(\n","            input_size=self.RNN_input_size,\n","            hidden_size=self.h_RNN,\n","            num_layers=self.h_RNN_layers,\n","            batch_first=True,\n","        )\n","\n","        self.fc1 = nn.Linear(self.h_RNN, self.h_FC_dim)\n","        self.fc2 = nn.Linear(self.h_FC_dim, self.num_classes)\n","        self.dropout = nn.Dropout(p=self.drop_p)\n","\n","    def forward(self, x_RNN):\n","        self.LSTM.flatten_parameters()\n","        RNN_out, _ = self.LSTM(x_RNN, None)\n","\n","        # FC layers\n","        x = self.fc1(RNN_out[:, -1, :])  # 마지막 타임스텝a 사용\n","        x = F.relu(x)\n","        x = self.dropout(x)\n","        x = self.fc2(x)\n","\n","        return x  # CrossEntropyLoss 사용 (Softmax 없음)"]},{"cell_type":"markdown","source":["### optimizer"],"metadata":{"id":"RXocvVKtkOMG"}},{"cell_type":"code","execution_count":19,"metadata":{"id":"OSxelQ6XHRQx","executionInfo":{"status":"ok","timestamp":1742230043254,"user_tz":-540,"elapsed":9,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}}},"outputs":[],"source":["device = config[\"device\"]"]},{"cell_type":"code","execution_count":20,"metadata":{"id":"4JqX0gXTL27g","executionInfo":{"status":"ok","timestamp":1742230044462,"user_tz":-540,"elapsed":2,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}}},"outputs":[],"source":["def get_optimizer(model, config):\n","    return optim.Adam(model.parameters(), lr=config[\"learning_rate\"])\n","criterion = nn.CrossEntropyLoss()"]},{"cell_type":"markdown","metadata":{"id":"WWOn6C4y5sMZ"},"source":["### 학습률 감소 스케줄러 설정\n","Test Loss 기준\n","- factor: 0.5, 학습률 50% 감소\n","- verbose: True, 감소된 경우 로그 출력"]},{"cell_type":"code","execution_count":21,"metadata":{"id":"zbIGMSLu5sMd","executionInfo":{"status":"ok","timestamp":1742230045933,"user_tz":-540,"elapsed":21,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}}},"outputs":[],"source":["def get_scheduler(optimizer, config):\n","    return optim.lr_scheduler.ReduceLROnPlateau(\n","        optimizer,\n","        mode=\"min\",\n","        factor=config[\"reduce_lr_factor\"],\n","        patience=config[\"reduce_lr_patience\"],\n","    )"]},{"cell_type":"markdown","metadata":{"id":"ne6SnCpE5sMd"},"source":["### Early Stopping 설정"]},{"cell_type":"code","execution_count":22,"metadata":{"id":"X1hqAAHW5sMd","executionInfo":{"status":"ok","timestamp":1742230047535,"user_tz":-540,"elapsed":2,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}}},"outputs":[],"source":["early_stopping_patience = config[\"early_stopping_patience\"]\n","best_loss = np.inf\n","patience_counter = 0"]},{"cell_type":"markdown","metadata":{"id":"0XTNDoMjMh0Q"},"source":["## 학습 진행"]},{"cell_type":"markdown","metadata":{"id":"uX8o8vwQMlXU"},"source":["- Mixed Precision Training 유지 (torch.cuda.amp.autocast() + GradScaler())\n","-  Gradient Clipping 추가 (torch.nn.utils.clip_grad_norm_()) → 폭발적인 기울기(Gradient Explosion) 방지\n","- 모델 저장 기능 추가 (torch.save()) → Best Loss 갱신 시 자동 저장\n","- 학습률 스케줄러 로깅 추가 → ReduceLROnPlateau가 작동했는지 확인 가능"]},{"cell_type":"code","execution_count":23,"metadata":{"id":"0R88mx_dea0I","executionInfo":{"status":"ok","timestamp":1742230050922,"user_tz":-540,"elapsed":2,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}}},"outputs":[],"source":["def save_best_model(model, optimizer, epoch, best_loss, save_path):\n","    \"\"\"Validation Loss가 가장 낮을 때만 모델을 저장하는 함수\"\"\"\n","    today_date = datetime.datetime.now().strftime(\"%Y-%m-%d\")  # 날짜 가져오기\n","    model_filename = f\"{save_path}/best_model_{today_date}.pth\"  # 저장 파일명\n","\n","    # 기존 최적 모델 삭제 (이전 모델 유지 안 함)\n","    if os.path.exists(model_filename):\n","        os.remove(model_filename)\n","\n","    torch.save({\n","        'epoch': epoch,\n","        'model_state_dict': model.state_dict(),\n","        'optimizer_state_dict': optimizer.state_dict(),\n","        'best_loss': best_loss\n","    }, model_filename)\n","\n","    print(f\"💾 Best Model Updated! Saved at {model_filename} (Loss: {best_loss:.4f})\")\n","\n","def save_training_results(\n","        epoch_train_losses,\n","        epoch_train_scores,\n","        epoch_test_losses,\n","        epoch_test_scores,\n","        save_path=\"./\",\n","        ):\n","    \"\"\"\n","    학습 과정의 손실(loss)과 정확도(score)를 저장하는 함수\n","    \"\"\"\n","    os.makedirs(save_path, exist_ok=True)\n","\n","    np.save(\n","        os.path.join(save_path, \"LSTM_epoch_training_losses.npy\"),\n","        np.array(epoch_train_losses),\n","    )\n","    np.save(\n","        os.path.join(save_path, \"LSTM_epoch_tsave_path, raining_scores.npy\"),\n","        np.array(epoch_train_scores),\n","    )\n","    np.save(\n","        os.path.join(save_path, \"LSTM_epoch_test_loss.npy\"), np.array(epoch_test_losses)\n","    )\n","    np.save(\n","        os.path.join(save_path, \"LSTM_epoch_test_score.npy\"),\n","        np.array(epoch_test_scores),\n","    )"]},{"cell_type":"markdown","source":["### Train Dataset 평가\n","- 다음 기술을 적용하는 기준: Train data Loss\n","    - Early Stopping\n","    - 학습률 감소 스케줄러\n","    - 모델 저장 (Best Loss 갱신 시)"],"metadata":{"id":"B3TL3Dy7bxnt"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"O1T-ks0Dy0Bu"},"outputs":[],"source":["# Mixed Precision Training을 위한 GradScaler 설정\n","scaler = torch.amp.GradScaler()\n","\n","def train_model(model, train_loader, valid_loader, optimizer, criterion, scheduler, config):\n","    \"\"\"\n","    Mixed Precision Training & Early Stopping 적용 학습 함수\n","    \"\"\"\n","    model.to(config[\"device\"])\n","\n","    best_loss = np.inf  # Best Loss 초기화\n","    patience_counter = 0  # Early Stopping 카운터\n","    epoch_losses, epoch_scores = [], []  # Loss 및 Accuracy 저장용 리스트\n","\n","    for epoch in range(config[\"epochs\"]):\n","        model.train()\n","        losses, scores = [], []\n","        total_samples = 0\n","\n","        # tqdm을 사용하여 학습 진행률 표시\n","        progress_bar = tqdm(train_loader, desc=f\"Epoch {epoch+1}/{config['epochs']}\", leave=True)\n","\n","        for batch_idx, (X, y) in enumerate(progress_bar):\n","            X, y = X.to(config[\"device\"]), y.to(config[\"device\"]).long()\n","\n","            # Mixed Precision Training 적용\n","            total_samples += X.size(0)\n","            optimizer.zero_grad(set_to_none=True)\n","\n","            with torch.amp.autocast('cuda'): # 자동 Mixed Precision 사용\n","                output = model(X)  # LSTM 모델 Forward Pass\n","                loss = criterion(output, y)\n","\n","            scaler.scale(loss).backward()  # Mixed Precision Backpropagation\n","            scaler.step(optimizer)  # 옵티마이저 업데이트\n","            scaler.update()  # Scaler 업데이트\n","\n","            losses.append(loss.item())\n","\n","            # 정확도 계산\n","            y_pred = torch.argmax(output, dim=1)\n","            acc = accuracy_score(y.cpu().numpy(), y_pred.cpu().numpy())\n","            scores.append(acc)\n","\n","        avg_loss = sum(losses) / len(losses)\n","        avg_acc = sum(scores) / len(scores) * 100\n","\n","        print(f\"✅ Epoch {epoch+1} Finished - Avg Loss: {avg_loss:.4f}, Avg Acc: {avg_acc:.2f}%\")\n","\n","        # Loss 및 Accuracy 저장\n","        epoch_losses.append(avg_loss)\n","        epoch_scores.append(avg_acc)\n","\n","        # 학습률 감소 스케줄러 업데이트 (`ReduceLROnPlateau` 사용 시 `min` 모드 적용)\n","        scheduler.step(avg_loss)\n","        if optimizer.param_groups[0][\"lr\"] != config[\"learning_rate\"]:\n","            print(f\"📉 Learning Rate Reduced: {optimizer.param_groups[0]['lr']:.6e}\")\n","\n","        # 모델 저장 (Best Loss 갱신 시)\n","        if avg_loss < best_loss:\n","            best_loss = avg_loss\n","            patience_counter = 0  # Early Stopping Counter 초기화\n","            save_best_model(model, optimizer, epoch, best_loss, config[\"model_save_path\"])\n","            print(f\"💾 Model Saved! New Best Loss: {best_loss:.4f}\")\n","        else:\n","            patience_counter += 1\n","\n","        # Early Stopping 체크\n","        if patience_counter >= early_stopping_patience:\n","            print(f\"🚨 Early Stopping Triggered! Best Loss: {best_loss:.4f}\")\n","            break\n","\n","    return epoch_losses, epoch_scores"]},{"cell_type":"code","execution_count":24,"metadata":{"id":"JtljyZujXycx","executionInfo":{"status":"ok","timestamp":1742230085199,"user_tz":-540,"elapsed":24,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}}},"outputs":[],"source":["def ensure_directory_exists(path):\n","    \"\"\"주어진 경로의 폴더가 없으면 생성하는 함수\"\"\"\n","    if not os.path.exists(path):\n","        os.makedirs(path)\n","        print(f\"📂 Directory created: {path}\")"]},{"cell_type":"code","execution_count":25,"metadata":{"executionInfo":{"elapsed":554,"status":"ok","timestamp":1742230087152,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"},"user_tz":-540},"id":"YmTiOWzGXpVy","colab":{"base_uri":"https://localhost:8080/"},"outputId":"cc554c05-ed8f-479e-f6ef-d4fe849bb8f6"},"outputs":[{"output_type":"stream","name":"stdout","text":["📂 Directory created: /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test\n","📂 Directory created: /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results\n"]}],"source":["# ✅ 경로 자동 생성 (존재하지 않으면 생성)\n","ensure_directory_exists(config[\"model_save_path\"]) # 모델 저장 폴더\n","ensure_directory_exists(config[\"train_result_path\"])  # 학습 결과 폴더"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":344627,"status":"ok","timestamp":1742100417462,"user":{"displayName":"심소민","userId":"13422866620659141828"},"user_tz":-540},"id":"imEpVw8XTY0w","outputId":"fb73965c-17df-4772-b3ac-04004ea5ff46"},"outputs":[{"output_type":"stream","name":"stderr","text":["Epoch 1/100: 100%|██████████| 273/273 [00:03<00:00, 90.10it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 1 Finished - Avg Loss: 0.9549, Avg Acc: 63.06%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.9549)\n","💾 Model Saved! New Best Loss: 0.9549\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 2/100: 100%|██████████| 273/273 [00:04<00:00, 65.41it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 2 Finished - Avg Loss: 0.6382, Avg Acc: 76.46%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.6382)\n","💾 Model Saved! New Best Loss: 0.6382\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 3/100: 100%|██████████| 273/273 [00:02<00:00, 92.57it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 3 Finished - Avg Loss: 0.6053, Avg Acc: 79.07%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.6053)\n","💾 Model Saved! New Best Loss: 0.6053\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 4/100: 100%|██████████| 273/273 [00:02<00:00, 92.32it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 4 Finished - Avg Loss: 0.5689, Avg Acc: 80.96%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.5689)\n","💾 Model Saved! New Best Loss: 0.5689\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 5/100: 100%|██████████| 273/273 [00:03<00:00, 90.40it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 5 Finished - Avg Loss: 0.5474, Avg Acc: 81.40%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.5474)\n","💾 Model Saved! New Best Loss: 0.5474\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 6/100: 100%|██████████| 273/273 [00:04<00:00, 66.20it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 6 Finished - Avg Loss: 0.5396, Avg Acc: 81.52%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.5396)\n","💾 Model Saved! New Best Loss: 0.5396\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 7/100: 100%|██████████| 273/273 [00:02<00:00, 93.74it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 7 Finished - Avg Loss: 0.5276, Avg Acc: 81.63%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.5276)\n","💾 Model Saved! New Best Loss: 0.5276\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 8/100: 100%|██████████| 273/273 [00:02<00:00, 93.99it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 8 Finished - Avg Loss: 0.5102, Avg Acc: 81.94%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.5102)\n","💾 Model Saved! New Best Loss: 0.5102\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 9/100: 100%|██████████| 273/273 [00:02<00:00, 93.83it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 9 Finished - Avg Loss: 0.5015, Avg Acc: 82.24%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.5015)\n","💾 Model Saved! New Best Loss: 0.5015\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 10/100: 100%|██████████| 273/273 [00:03<00:00, 68.47it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 10 Finished - Avg Loss: 0.4893, Avg Acc: 82.87%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4893)\n","💾 Model Saved! New Best Loss: 0.4893\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 11/100: 100%|██████████| 273/273 [00:02<00:00, 95.09it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 11 Finished - Avg Loss: 0.4812, Avg Acc: 83.07%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4812)\n","💾 Model Saved! New Best Loss: 0.4812\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 12/100: 100%|██████████| 273/273 [00:02<00:00, 93.37it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 12 Finished - Avg Loss: 0.4762, Avg Acc: 83.52%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4762)\n","💾 Model Saved! New Best Loss: 0.4762\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 13/100: 100%|██████████| 273/273 [00:03<00:00, 88.66it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 13 Finished - Avg Loss: 0.4696, Avg Acc: 83.72%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4696)\n","💾 Model Saved! New Best Loss: 0.4696\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 14/100: 100%|██████████| 273/273 [00:04<00:00, 67.07it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 14 Finished - Avg Loss: 0.4666, Avg Acc: 83.41%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4666)\n","💾 Model Saved! New Best Loss: 0.4666\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 15/100: 100%|██████████| 273/273 [00:02<00:00, 93.25it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 15 Finished - Avg Loss: 0.4601, Avg Acc: 83.61%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4601)\n","💾 Model Saved! New Best Loss: 0.4601\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 16/100: 100%|██████████| 273/273 [00:02<00:00, 92.89it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 16 Finished - Avg Loss: 0.4534, Avg Acc: 83.79%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4534)\n","💾 Model Saved! New Best Loss: 0.4534\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 17/100: 100%|██████████| 273/273 [00:02<00:00, 94.40it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 17 Finished - Avg Loss: 0.4497, Avg Acc: 83.95%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4497)\n","💾 Model Saved! New Best Loss: 0.4497\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 18/100: 100%|██████████| 273/273 [00:04<00:00, 67.99it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 18 Finished - Avg Loss: 0.4467, Avg Acc: 84.11%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4467)\n","💾 Model Saved! New Best Loss: 0.4467\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 19/100: 100%|██████████| 273/273 [00:02<00:00, 93.17it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 19 Finished - Avg Loss: 0.4417, Avg Acc: 84.39%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4417)\n","💾 Model Saved! New Best Loss: 0.4417\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 20/100: 100%|██████████| 273/273 [00:02<00:00, 92.61it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 20 Finished - Avg Loss: 0.4402, Avg Acc: 84.31%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4402)\n","💾 Model Saved! New Best Loss: 0.4402\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 21/100: 100%|██████████| 273/273 [00:02<00:00, 92.48it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 21 Finished - Avg Loss: 0.4374, Avg Acc: 84.58%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4374)\n","💾 Model Saved! New Best Loss: 0.4374\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 22/100: 100%|██████████| 273/273 [00:04<00:00, 68.13it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 22 Finished - Avg Loss: 0.4350, Avg Acc: 84.33%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4350)\n","💾 Model Saved! New Best Loss: 0.4350\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 23/100: 100%|██████████| 273/273 [00:02<00:00, 92.08it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 23 Finished - Avg Loss: 0.4298, Avg Acc: 84.33%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4298)\n","💾 Model Saved! New Best Loss: 0.4298\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 24/100: 100%|██████████| 273/273 [00:02<00:00, 92.75it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 24 Finished - Avg Loss: 0.4243, Avg Acc: 84.73%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4243)\n","💾 Model Saved! New Best Loss: 0.4243\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 25/100: 100%|██████████| 273/273 [00:02<00:00, 93.17it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 25 Finished - Avg Loss: 0.4214, Avg Acc: 84.87%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4214)\n","💾 Model Saved! New Best Loss: 0.4214\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 26/100: 100%|██████████| 273/273 [00:03<00:00, 69.76it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 26 Finished - Avg Loss: 0.4148, Avg Acc: 85.03%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4148)\n","💾 Model Saved! New Best Loss: 0.4148\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 27/100: 100%|██████████| 273/273 [00:02<00:00, 93.44it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 27 Finished - Avg Loss: 0.4148, Avg Acc: 85.01%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4148)\n","💾 Model Saved! New Best Loss: 0.4148\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 28/100: 100%|██████████| 273/273 [00:02<00:00, 92.80it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 28 Finished - Avg Loss: 0.4091, Avg Acc: 85.68%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4091)\n","💾 Model Saved! New Best Loss: 0.4091\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 29/100: 100%|██████████| 273/273 [00:02<00:00, 93.70it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 29 Finished - Avg Loss: 0.4083, Avg Acc: 85.29%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4083)\n","💾 Model Saved! New Best Loss: 0.4083\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 30/100: 100%|██████████| 273/273 [00:03<00:00, 69.78it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 30 Finished - Avg Loss: 0.4043, Avg Acc: 85.28%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4043)\n","💾 Model Saved! New Best Loss: 0.4043\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 31/100: 100%|██████████| 273/273 [00:02<00:00, 94.88it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 31 Finished - Avg Loss: 0.4003, Avg Acc: 85.75%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.4003)\n","💾 Model Saved! New Best Loss: 0.4003\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 32/100: 100%|██████████| 273/273 [00:02<00:00, 92.68it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 32 Finished - Avg Loss: 0.3946, Avg Acc: 85.76%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3946)\n","💾 Model Saved! New Best Loss: 0.3946\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 33/100: 100%|██████████| 273/273 [00:02<00:00, 93.95it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 33 Finished - Avg Loss: 0.3921, Avg Acc: 85.90%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3921)\n","💾 Model Saved! New Best Loss: 0.3921\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 34/100: 100%|██████████| 273/273 [00:03<00:00, 68.33it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 34 Finished - Avg Loss: 0.3917, Avg Acc: 86.00%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3917)\n","💾 Model Saved! New Best Loss: 0.3917\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 35/100: 100%|██████████| 273/273 [00:02<00:00, 95.33it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 35 Finished - Avg Loss: 0.3846, Avg Acc: 86.16%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3846)\n","💾 Model Saved! New Best Loss: 0.3846\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 36/100: 100%|██████████| 273/273 [00:02<00:00, 95.05it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 36 Finished - Avg Loss: 0.3861, Avg Acc: 86.15%\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 37/100: 100%|██████████| 273/273 [00:02<00:00, 91.84it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 37 Finished - Avg Loss: 0.3813, Avg Acc: 86.20%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3813)\n","💾 Model Saved! New Best Loss: 0.3813\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 38/100: 100%|██████████| 273/273 [00:04<00:00, 68.06it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 38 Finished - Avg Loss: 0.3811, Avg Acc: 86.27%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3811)\n","💾 Model Saved! New Best Loss: 0.3811\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 39/100: 100%|██████████| 273/273 [00:02<00:00, 91.90it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 39 Finished - Avg Loss: 0.3737, Avg Acc: 86.20%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3737)\n","💾 Model Saved! New Best Loss: 0.3737\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 40/100: 100%|██████████| 273/273 [00:02<00:00, 93.52it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 40 Finished - Avg Loss: 0.3757, Avg Acc: 86.39%\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 41/100: 100%|██████████| 273/273 [00:02<00:00, 94.16it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 41 Finished - Avg Loss: 0.3716, Avg Acc: 86.24%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3716)\n","💾 Model Saved! New Best Loss: 0.3716\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 42/100: 100%|██████████| 273/273 [00:04<00:00, 68.22it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 42 Finished - Avg Loss: 0.3712, Avg Acc: 86.55%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3712)\n","💾 Model Saved! New Best Loss: 0.3712\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 43/100: 100%|██████████| 273/273 [00:02<00:00, 93.36it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 43 Finished - Avg Loss: 0.3654, Avg Acc: 86.55%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3654)\n","💾 Model Saved! New Best Loss: 0.3654\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 44/100: 100%|██████████| 273/273 [00:02<00:00, 94.42it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 44 Finished - Avg Loss: 0.3656, Avg Acc: 86.53%\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 45/100: 100%|██████████| 273/273 [00:03<00:00, 72.60it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 45 Finished - Avg Loss: 0.3578, Avg Acc: 86.85%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3578)\n","💾 Model Saved! New Best Loss: 0.3578\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 46/100: 100%|██████████| 273/273 [00:05<00:00, 46.91it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 46 Finished - Avg Loss: 0.3596, Avg Acc: 86.85%\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 47/100: 100%|██████████| 273/273 [00:03<00:00, 89.66it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 47 Finished - Avg Loss: 0.3558, Avg Acc: 86.84%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3558)\n","💾 Model Saved! New Best Loss: 0.3558\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 48/100: 100%|██████████| 273/273 [00:02<00:00, 95.12it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 48 Finished - Avg Loss: 0.3537, Avg Acc: 86.90%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3537)\n","💾 Model Saved! New Best Loss: 0.3537\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 49/100: 100%|██████████| 273/273 [00:03<00:00, 78.40it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 49 Finished - Avg Loss: 0.3528, Avg Acc: 87.00%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3528)\n","💾 Model Saved! New Best Loss: 0.3528\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 50/100: 100%|██████████| 273/273 [00:03<00:00, 80.29it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 50 Finished - Avg Loss: 0.3463, Avg Acc: 87.18%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3463)\n","💾 Model Saved! New Best Loss: 0.3463\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 51/100: 100%|██████████| 273/273 [00:02<00:00, 94.08it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 51 Finished - Avg Loss: 0.3449, Avg Acc: 87.04%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3449)\n","💾 Model Saved! New Best Loss: 0.3449\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 52/100: 100%|██████████| 273/273 [00:02<00:00, 94.41it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 52 Finished - Avg Loss: 0.3455, Avg Acc: 87.20%\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 53/100: 100%|██████████| 273/273 [00:03<00:00, 83.93it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 53 Finished - Avg Loss: 0.3463, Avg Acc: 87.01%\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 54/100: 100%|██████████| 273/273 [00:04<00:00, 60.80it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 54 Finished - Avg Loss: 0.3370, Avg Acc: 87.45%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3370)\n","💾 Model Saved! New Best Loss: 0.3370\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 55/100: 100%|██████████| 273/273 [00:04<00:00, 64.27it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 55 Finished - Avg Loss: 0.3372, Avg Acc: 87.43%\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 56/100: 100%|██████████| 273/273 [00:03<00:00, 75.04it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 56 Finished - Avg Loss: 0.3308, Avg Acc: 87.82%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3308)\n","💾 Model Saved! New Best Loss: 0.3308\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 57/100: 100%|██████████| 273/273 [00:03<00:00, 69.39it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 57 Finished - Avg Loss: 0.3318, Avg Acc: 87.45%\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 58/100: 100%|██████████| 273/273 [00:03<00:00, 86.45it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 58 Finished - Avg Loss: 0.3264, Avg Acc: 87.58%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3264)\n","💾 Model Saved! New Best Loss: 0.3264\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 59/100: 100%|██████████| 273/273 [00:02<00:00, 92.64it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 59 Finished - Avg Loss: 0.3229, Avg Acc: 87.94%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3229)\n","💾 Model Saved! New Best Loss: 0.3229\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 60/100: 100%|██████████| 273/273 [00:03<00:00, 86.61it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 60 Finished - Avg Loss: 0.3194, Avg Acc: 87.95%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3194)\n","💾 Model Saved! New Best Loss: 0.3194\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 61/100: 100%|██████████| 273/273 [00:03<00:00, 72.85it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 61 Finished - Avg Loss: 0.3176, Avg Acc: 88.39%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3176)\n","💾 Model Saved! New Best Loss: 0.3176\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 62/100: 100%|██████████| 273/273 [00:02<00:00, 93.10it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 62 Finished - Avg Loss: 0.3153, Avg Acc: 88.18%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3153)\n","💾 Model Saved! New Best Loss: 0.3153\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 63/100: 100%|██████████| 273/273 [00:02<00:00, 93.49it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 63 Finished - Avg Loss: 0.3142, Avg Acc: 88.17%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3142)\n","💾 Model Saved! New Best Loss: 0.3142\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 64/100: 100%|██████████| 273/273 [00:03<00:00, 88.58it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 64 Finished - Avg Loss: 0.3060, Avg Acc: 88.49%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3060)\n","💾 Model Saved! New Best Loss: 0.3060\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 65/100: 100%|██████████| 273/273 [00:03<00:00, 73.25it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 65 Finished - Avg Loss: 0.3058, Avg Acc: 88.55%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.3058)\n","💾 Model Saved! New Best Loss: 0.3058\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 66/100: 100%|██████████| 273/273 [00:02<00:00, 92.20it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 66 Finished - Avg Loss: 0.2985, Avg Acc: 88.63%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2985)\n","💾 Model Saved! New Best Loss: 0.2985\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 67/100: 100%|██████████| 273/273 [00:02<00:00, 91.87it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 67 Finished - Avg Loss: 0.3025, Avg Acc: 88.39%\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 68/100: 100%|██████████| 273/273 [00:03<00:00, 87.62it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 68 Finished - Avg Loss: 0.2931, Avg Acc: 88.93%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2931)\n","💾 Model Saved! New Best Loss: 0.2931\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 69/100: 100%|██████████| 273/273 [00:03<00:00, 72.20it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 69 Finished - Avg Loss: 0.2953, Avg Acc: 88.92%\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 70/100: 100%|██████████| 273/273 [00:02<00:00, 92.94it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 70 Finished - Avg Loss: 0.2879, Avg Acc: 89.30%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2879)\n","💾 Model Saved! New Best Loss: 0.2879\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 71/100: 100%|██████████| 273/273 [00:02<00:00, 93.48it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 71 Finished - Avg Loss: 0.2875, Avg Acc: 89.31%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2875)\n","💾 Model Saved! New Best Loss: 0.2875\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 72/100: 100%|██████████| 273/273 [00:03<00:00, 89.28it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 72 Finished - Avg Loss: 0.2797, Avg Acc: 89.37%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2797)\n","💾 Model Saved! New Best Loss: 0.2797\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 73/100: 100%|██████████| 273/273 [00:03<00:00, 71.06it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 73 Finished - Avg Loss: 0.2788, Avg Acc: 89.31%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2788)\n","💾 Model Saved! New Best Loss: 0.2788\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 74/100: 100%|██████████| 273/273 [00:02<00:00, 93.56it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 74 Finished - Avg Loss: 0.2771, Avg Acc: 89.54%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2771)\n","💾 Model Saved! New Best Loss: 0.2771\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 75/100: 100%|██████████| 273/273 [00:02<00:00, 91.97it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 75 Finished - Avg Loss: 0.2703, Avg Acc: 89.62%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2703)\n","💾 Model Saved! New Best Loss: 0.2703\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 76/100: 100%|██████████| 273/273 [00:03<00:00, 90.16it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 76 Finished - Avg Loss: 0.2709, Avg Acc: 89.48%\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 77/100: 100%|██████████| 273/273 [00:04<00:00, 67.03it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 77 Finished - Avg Loss: 0.2722, Avg Acc: 89.85%\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 78/100: 100%|██████████| 273/273 [00:03<00:00, 86.81it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 78 Finished - Avg Loss: 0.2666, Avg Acc: 89.76%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2666)\n","💾 Model Saved! New Best Loss: 0.2666\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 79/100: 100%|██████████| 273/273 [00:03<00:00, 89.00it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 79 Finished - Avg Loss: 0.2608, Avg Acc: 90.09%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2608)\n","💾 Model Saved! New Best Loss: 0.2608\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 80/100: 100%|██████████| 273/273 [00:03<00:00, 84.26it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 80 Finished - Avg Loss: 0.2568, Avg Acc: 90.20%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2568)\n","💾 Model Saved! New Best Loss: 0.2568\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 81/100: 100%|██████████| 273/273 [00:03<00:00, 71.30it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 81 Finished - Avg Loss: 0.2516, Avg Acc: 90.22%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2516)\n","💾 Model Saved! New Best Loss: 0.2516\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 82/100: 100%|██████████| 273/273 [00:03<00:00, 90.70it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 82 Finished - Avg Loss: 0.2470, Avg Acc: 90.45%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2470)\n","💾 Model Saved! New Best Loss: 0.2470\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 83/100: 100%|██████████| 273/273 [00:02<00:00, 94.56it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 83 Finished - Avg Loss: 0.2438, Avg Acc: 90.71%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2438)\n","💾 Model Saved! New Best Loss: 0.2438\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 84/100: 100%|██████████| 273/273 [00:03<00:00, 84.42it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 84 Finished - Avg Loss: 0.2404, Avg Acc: 90.74%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2404)\n","💾 Model Saved! New Best Loss: 0.2404\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 85/100: 100%|██████████| 273/273 [00:04<00:00, 65.55it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 85 Finished - Avg Loss: 0.2360, Avg Acc: 90.97%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2360)\n","💾 Model Saved! New Best Loss: 0.2360\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 86/100: 100%|██████████| 273/273 [00:02<00:00, 94.29it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 86 Finished - Avg Loss: 0.2305, Avg Acc: 90.95%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2305)\n","💾 Model Saved! New Best Loss: 0.2305\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 87/100: 100%|██████████| 273/273 [00:02<00:00, 91.71it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 87 Finished - Avg Loss: 0.2294, Avg Acc: 90.94%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2294)\n","💾 Model Saved! New Best Loss: 0.2294\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 88/100: 100%|██████████| 273/273 [00:03<00:00, 80.08it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 88 Finished - Avg Loss: 0.2223, Avg Acc: 91.42%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2223)\n","💾 Model Saved! New Best Loss: 0.2223\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 89/100: 100%|██████████| 273/273 [00:03<00:00, 77.38it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 89 Finished - Avg Loss: 0.2227, Avg Acc: 91.08%\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 90/100: 100%|██████████| 273/273 [00:03<00:00, 90.72it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 90 Finished - Avg Loss: 0.2191, Avg Acc: 91.43%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2191)\n","💾 Model Saved! New Best Loss: 0.2191\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 91/100: 100%|██████████| 273/273 [00:02<00:00, 93.21it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 91 Finished - Avg Loss: 0.2197, Avg Acc: 91.51%\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 92/100: 100%|██████████| 273/273 [00:03<00:00, 80.50it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 92 Finished - Avg Loss: 0.2074, Avg Acc: 91.99%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2074)\n","💾 Model Saved! New Best Loss: 0.2074\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 93/100: 100%|██████████| 273/273 [00:03<00:00, 72.77it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 93 Finished - Avg Loss: 0.2095, Avg Acc: 91.99%\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 94/100: 100%|██████████| 273/273 [00:03<00:00, 87.12it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 94 Finished - Avg Loss: 0.2036, Avg Acc: 91.98%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.2036)\n","💾 Model Saved! New Best Loss: 0.2036\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 95/100: 100%|██████████| 273/273 [00:02<00:00, 94.22it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 95 Finished - Avg Loss: 0.1913, Avg Acc: 92.80%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.1913)\n","💾 Model Saved! New Best Loss: 0.1913\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 96/100: 100%|██████████| 273/273 [00:03<00:00, 78.39it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 96 Finished - Avg Loss: 0.1962, Avg Acc: 92.60%\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 97/100: 100%|██████████| 273/273 [00:03<00:00, 77.54it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 97 Finished - Avg Loss: 0.1921, Avg Acc: 92.32%\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 98/100: 100%|██████████| 273/273 [00:03<00:00, 88.61it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 98 Finished - Avg Loss: 0.1802, Avg Acc: 93.04%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.1802)\n","💾 Model Saved! New Best Loss: 0.1802\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 99/100: 100%|██████████| 273/273 [00:02<00:00, 91.91it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 99 Finished - Avg Loss: 0.1787, Avg Acc: 93.01%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.1787)\n","💾 Model Saved! New Best Loss: 0.1787\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 100/100: 100%|██████████| 273/273 [00:03<00:00, 82.01it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Epoch 100 Finished - Avg Loss: 0.1727, Avg Acc: 93.36%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_ckpt/best_model_2025-03-16.pth (Loss: 0.1727)\n","💾 Model Saved! New Best Loss: 0.1727\n"]}],"source":["device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","\n","model = DecoderRNN(config)\n","model.to(device)  # 모델을 GPU로 이동\n","\n","optimizer = get_optimizer(model, config)\n","scheduler = get_scheduler(optimizer, config)\n","\n","epoch_losses, epoch_scores = train_model(model, train_loader, valid_loader, optimizer, criterion, scheduler, config)"]},{"cell_type":"markdown","metadata":{"id":"uQLzAyiggse9"},"source":["### Train, Validation Dataset 평가\n","- 다음 기술을 적용하는 기준: Test data Loss\n","    - Early Stopping\n","    - 학습률 감소 스케줄러\n","    - 모델 저장 (Best Loss 갱신 시)"]},{"cell_type":"code","execution_count":27,"metadata":{"id":"KNBRYMtxfgMy","executionInfo":{"status":"ok","timestamp":1742230164393,"user_tz":-540,"elapsed":10,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}}},"outputs":[],"source":["# Mixed Precision Training을 위한 GradScaler 설정\n","scaler = torch.amp.GradScaler()\n","\n","# 학습 결과 저장 함수\n","def save_training_results(epoch, train_losses, train_scores, test_losses, test_scores, save_path):\n","    \"\"\"학습 결과를 CSV 파일로 저장하는 함수\"\"\"\n","    results_df = pd.DataFrame({\n","        \"epoch\": list(range(1, epoch + 2)),\n","        \"train_loss\": train_losses,\n","        \"train_accuracy\": train_scores,\n","        \"test_loss\": test_losses,\n","        \"test_accuracy\": test_scores,\n","    })\n","\n","    results_df.to_csv(f\"{save_path}/training_results.csv\", index=False)\n","    print(f\"💾 Training results saved at {save_path}/training_results.csv\")\n","\n","# 학습 함수\n","def train(log_interval, model, device, train_loader, optimizer, criterion, epoch):\n","    model.train()\n","    losses, scores = [], []\n","    total_samples = 0\n","\n","    # tqdm을 사용하여 학습 진행률 표시\n","    progress_bar = tqdm(train_loader, desc=f\"Epoch {epoch+1}/{config['epochs']}\", leave=True)\n","\n","    for batch_idx, (X, y) in enumerate(progress_bar):\n","        X, y = X.to(device), y.to(device).long()\n","        total_samples += X.size(0)\n","\n","        optimizer.zero_grad(set_to_none=True)\n","\n","        with torch.amp.autocast(device_type='cuda'):\n","            output = model(X)\n","            loss = criterion(output, y)\n","\n","        scaler.scale(loss).backward()\n","        torch.nn.utils.clip_grad_norm_(model.parameters(), max_norm=1.0)  #  Gradient Clipping\n","        scaler.step(optimizer)\n","        scaler.update()\n","\n","        losses.append(loss.item())\n","\n","        # 정확도 계산\n","        y_pred = torch.argmax(output, dim=1)\n","        acc = accuracy_score(y.cpu().numpy(), y_pred.cpu().numpy())\n","        scores.append(acc)\n","\n","    avg_loss = sum(losses) / len(losses)\n","    avg_acc = sum(scores) / len(scores) * 100\n","\n","    print(f\"✅ Train Epoch {epoch+1} Finished - Avg Loss: {avg_loss:.4f}, Avg Acc: {avg_acc:.2f}%\")\n","\n","    return avg_loss, avg_acc  # 학습 Loss 및 Accuracy 반환\n","\n","# 검증 함수\n","def validate(model, device, criterion, test_loader):\n","    model.eval()\n","    losses, scores = [], []\n","\n","    with torch.no_grad():\n","        for X, y in test_loader:\n","            X, y = X.to(device), y.to(device).long()\n","\n","            with torch.amp.autocast(device_type='cuda'):\n","                output = model(X)\n","                loss = criterion(output, y)\n","\n","            losses.append(loss.item())\n","\n","            # 정확도 계산\n","            y_pred = torch.argmax(output, dim=1)\n","            acc = accuracy_score(y.cpu().numpy(), y_pred.cpu().numpy())\n","            scores.append(acc)\n","\n","    avg_loss = sum(losses) / len(losses)\n","    avg_acc = sum(scores) / len(scores) * 100\n","\n","    print(f\"✅ Validation Finished - Avg Loss: {avg_loss:.4f}, Avg Acc: {avg_acc:.2f}%\")\n","\n","    return avg_loss, avg_acc  # 검증 Loss 및 Accuracy 반환\n"]},{"cell_type":"code","execution_count":28,"metadata":{"id":"g1P_6KyAg2_M","executionInfo":{"status":"ok","timestamp":1742230177879,"user_tz":-540,"elapsed":7,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}}},"outputs":[],"source":["# 전체 학습 실행 코드\n","def train_and_validate(model, train_loader, valid_loader, optimizer, criterion, scheduler, config):\n","    best_loss = np.inf  # Best Loss 초기화\n","    patience_counter = 0  # Early Stopping 카운터\n","\n","    epoch_train_losses, epoch_train_scores = [], []\n","    epoch_valid_losses, epoch_valid_scores = [], []\n","    config['early_stopping_patience'] = 10\n","\n","    for epoch in range(config[\"epochs\"]):\n","        # 학습 단계\n","        epoch_train_loss, epoch_train_score = train(\n","            config[\"log_interval\"], model, config[\"device\"], train_loader, optimizer, criterion, epoch\n","        )\n","\n","        # 검증 단계\n","        epoch_valid_loss, epoch_valid_score = validate(\n","            model, config[\"device\"], criterion, valid_loader\n","        )\n","\n","        # 결과 저장\n","        epoch_train_losses.append(epoch_train_loss)\n","        epoch_train_scores.append(epoch_train_score)\n","        epoch_valid_losses.append(epoch_valid_loss)\n","        epoch_valid_scores.append(epoch_valid_score)\n","\n","        # 학습률 감소 적용\n","        scheduler.step(epoch_valid_loss)\n","\n","        # Early Stopping 체크\n","        if epoch_valid_loss < best_loss:\n","            best_loss = epoch_valid_loss\n","            patience_counter = 0  # 개선되었으므로 patience 초기화\n","\n","            save_best_model(model, optimizer, epoch, best_loss, config[\"model_save_path\"])\n","            print(f\"💾 Model Saved! New Best Loss: {best_loss:.4f}\")\n","        else:\n","            patience_counter += 1\n","            print(f\"⏳ Early stopping 대기 카운트: {patience_counter}/{config['early_stopping_patience']}\")\n","\n","        # 설정된 patience 횟수만큼 개선되지 않으면 학습 중단\n","        if patience_counter >= config[\"early_stopping_patience\"]:\n","            print(\"⏹️ Early stopping 적용됨. 학습 종료.\")\n","            break  # 학습 중단\n","\n","        # 학습 결과 저장\n","        save_training_results(\n","            epoch,\n","            epoch_train_losses,\n","            epoch_train_scores,\n","            epoch_valid_losses,\n","            epoch_valid_scores,\n","            save_path=config[\"train_result_path\"],\n","        )\n","\n","    return epoch_train_losses, epoch_train_scores, epoch_valid_losses, epoch_valid_scores"]},{"cell_type":"code","execution_count":29,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BitDOBQ1hF6a","executionInfo":{"status":"ok","timestamp":1742230311346,"user_tz":-540,"elapsed":127428,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}},"outputId":"72f35c95-36e5-42c7-979f-a27ab7de5449"},"outputs":[{"output_type":"stream","name":"stderr","text":["Epoch 1/100: 100%|██████████| 215/215 [00:04<00:00, 44.76it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 1 Finished - Avg Loss: 1.3015, Avg Acc: 50.07%\n","✅ Validation Finished - Avg Loss: 1.1177, Avg Acc: 60.22%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/best_model_2025-03-17.pth (Loss: 1.1177)\n","💾 Model Saved! New Best Loss: 1.1177\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 2/100: 100%|██████████| 215/215 [00:02<00:00, 85.20it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 2 Finished - Avg Loss: 0.9980, Avg Acc: 62.28%\n","✅ Validation Finished - Avg Loss: 1.0255, Avg Acc: 60.17%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/best_model_2025-03-17.pth (Loss: 1.0255)\n","💾 Model Saved! New Best Loss: 1.0255\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 3/100: 100%|██████████| 215/215 [00:02<00:00, 84.87it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 3 Finished - Avg Loss: 0.9583, Avg Acc: 62.30%\n","✅ Validation Finished - Avg Loss: 0.9204, Avg Acc: 62.18%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/best_model_2025-03-17.pth (Loss: 0.9204)\n","💾 Model Saved! New Best Loss: 0.9204\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 4/100: 100%|██████████| 215/215 [00:02<00:00, 85.98it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 4 Finished - Avg Loss: 0.8033, Avg Acc: 71.32%\n","✅ Validation Finished - Avg Loss: 0.7860, Avg Acc: 74.21%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/best_model_2025-03-17.pth (Loss: 0.7860)\n","💾 Model Saved! New Best Loss: 0.7860\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 5/100: 100%|██████████| 215/215 [00:03<00:00, 63.61it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 5 Finished - Avg Loss: 0.7151, Avg Acc: 75.15%\n","✅ Validation Finished - Avg Loss: 0.7582, Avg Acc: 72.99%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/best_model_2025-03-17.pth (Loss: 0.7582)\n","💾 Model Saved! New Best Loss: 0.7582\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 6/100: 100%|██████████| 215/215 [00:02<00:00, 88.84it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 6 Finished - Avg Loss: 0.6910, Avg Acc: 75.68%\n","✅ Validation Finished - Avg Loss: 0.7110, Avg Acc: 75.53%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/best_model_2025-03-17.pth (Loss: 0.7110)\n","💾 Model Saved! New Best Loss: 0.7110\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 7/100: 100%|██████████| 215/215 [00:02<00:00, 89.39it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 7 Finished - Avg Loss: 0.6357, Avg Acc: 78.15%\n","✅ Validation Finished - Avg Loss: 0.6283, Avg Acc: 79.93%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/best_model_2025-03-17.pth (Loss: 0.6283)\n","💾 Model Saved! New Best Loss: 0.6283\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 8/100: 100%|██████████| 215/215 [00:02<00:00, 87.77it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 8 Finished - Avg Loss: 0.5536, Avg Acc: 81.09%\n","✅ Validation Finished - Avg Loss: 0.6608, Avg Acc: 77.65%\n","⏳ Early stopping 대기 카운트: 1/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 9/100: 100%|██████████| 215/215 [00:02<00:00, 77.14it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 9 Finished - Avg Loss: 0.5450, Avg Acc: 81.35%\n","✅ Validation Finished - Avg Loss: 0.6210, Avg Acc: 79.50%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/best_model_2025-03-17.pth (Loss: 0.6210)\n","💾 Model Saved! New Best Loss: 0.6210\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 10/100: 100%|██████████| 215/215 [00:03<00:00, 57.72it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 10 Finished - Avg Loss: 0.5467, Avg Acc: 81.13%\n","✅ Validation Finished - Avg Loss: 0.5874, Avg Acc: 81.09%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/best_model_2025-03-17.pth (Loss: 0.5874)\n","💾 Model Saved! New Best Loss: 0.5874\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 11/100: 100%|██████████| 215/215 [00:02<00:00, 89.13it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 11 Finished - Avg Loss: 0.5352, Avg Acc: 81.80%\n","✅ Validation Finished - Avg Loss: 0.5829, Avg Acc: 81.09%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/best_model_2025-03-17.pth (Loss: 0.5829)\n","💾 Model Saved! New Best Loss: 0.5829\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 12/100: 100%|██████████| 215/215 [00:02<00:00, 89.39it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 12 Finished - Avg Loss: 0.5358, Avg Acc: 81.31%\n","✅ Validation Finished - Avg Loss: 0.5759, Avg Acc: 81.67%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/best_model_2025-03-17.pth (Loss: 0.5759)\n","💾 Model Saved! New Best Loss: 0.5759\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 13/100: 100%|██████████| 215/215 [00:02<00:00, 75.64it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 13 Finished - Avg Loss: 0.5426, Avg Acc: 81.26%\n","✅ Validation Finished - Avg Loss: 0.5855, Avg Acc: 80.77%\n","⏳ Early stopping 대기 카운트: 1/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 14/100: 100%|██████████| 215/215 [00:03<00:00, 63.06it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 14 Finished - Avg Loss: 0.5293, Avg Acc: 81.86%\n","✅ Validation Finished - Avg Loss: 0.5863, Avg Acc: 80.83%\n","⏳ Early stopping 대기 카운트: 2/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 15/100: 100%|██████████| 215/215 [00:02<00:00, 83.59it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 15 Finished - Avg Loss: 0.5298, Avg Acc: 81.42%\n","✅ Validation Finished - Avg Loss: 0.5723, Avg Acc: 81.09%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/best_model_2025-03-17.pth (Loss: 0.5723)\n","💾 Model Saved! New Best Loss: 0.5723\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 16/100: 100%|██████████| 215/215 [00:02<00:00, 84.59it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 16 Finished - Avg Loss: 0.5231, Avg Acc: 82.03%\n","✅ Validation Finished - Avg Loss: 0.5857, Avg Acc: 80.61%\n","⏳ Early stopping 대기 카운트: 1/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 17/100: 100%|██████████| 215/215 [00:02<00:00, 86.67it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 17 Finished - Avg Loss: 0.5235, Avg Acc: 82.06%\n","✅ Validation Finished - Avg Loss: 0.5788, Avg Acc: 81.09%\n","⏳ Early stopping 대기 카운트: 2/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 18/100: 100%|██████████| 215/215 [00:03<00:00, 60.05it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 18 Finished - Avg Loss: 0.5216, Avg Acc: 82.14%\n","✅ Validation Finished - Avg Loss: 0.5934, Avg Acc: 79.93%\n","⏳ Early stopping 대기 카운트: 3/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 19/100: 100%|██████████| 215/215 [00:02<00:00, 80.49it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 19 Finished - Avg Loss: 0.5178, Avg Acc: 82.02%\n","✅ Validation Finished - Avg Loss: 0.5545, Avg Acc: 81.73%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/best_model_2025-03-17.pth (Loss: 0.5545)\n","💾 Model Saved! New Best Loss: 0.5545\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 20/100: 100%|██████████| 215/215 [00:02<00:00, 84.74it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 20 Finished - Avg Loss: 0.5150, Avg Acc: 82.02%\n","✅ Validation Finished - Avg Loss: 0.5776, Avg Acc: 80.83%\n","⏳ Early stopping 대기 카운트: 1/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 21/100: 100%|██████████| 215/215 [00:02<00:00, 86.64it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 21 Finished - Avg Loss: 0.5155, Avg Acc: 82.12%\n","✅ Validation Finished - Avg Loss: 0.5699, Avg Acc: 81.09%\n","⏳ Early stopping 대기 카운트: 2/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 22/100: 100%|██████████| 215/215 [00:03<00:00, 62.18it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 22 Finished - Avg Loss: 0.5157, Avg Acc: 82.08%\n","✅ Validation Finished - Avg Loss: 0.5538, Avg Acc: 81.78%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/best_model_2025-03-17.pth (Loss: 0.5538)\n","💾 Model Saved! New Best Loss: 0.5538\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 23/100: 100%|██████████| 215/215 [00:02<00:00, 82.52it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 23 Finished - Avg Loss: 0.5160, Avg Acc: 81.93%\n","✅ Validation Finished - Avg Loss: 0.5557, Avg Acc: 81.73%\n","⏳ Early stopping 대기 카운트: 1/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 24/100: 100%|██████████| 215/215 [00:02<00:00, 88.93it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 24 Finished - Avg Loss: 0.5130, Avg Acc: 81.99%\n","✅ Validation Finished - Avg Loss: 0.6113, Avg Acc: 79.45%\n","⏳ Early stopping 대기 카운트: 2/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 25/100: 100%|██████████| 215/215 [00:02<00:00, 83.24it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 25 Finished - Avg Loss: 0.5124, Avg Acc: 82.08%\n","✅ Validation Finished - Avg Loss: 0.5538, Avg Acc: 81.73%\n","⏳ Early stopping 대기 카운트: 3/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 26/100: 100%|██████████| 215/215 [00:02<00:00, 76.05it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 26 Finished - Avg Loss: 0.5111, Avg Acc: 82.22%\n","✅ Validation Finished - Avg Loss: 0.5621, Avg Acc: 81.09%\n","⏳ Early stopping 대기 카운트: 4/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 27/100: 100%|██████████| 215/215 [00:03<00:00, 57.51it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 27 Finished - Avg Loss: 0.5073, Avg Acc: 82.12%\n","✅ Validation Finished - Avg Loss: 0.5562, Avg Acc: 81.57%\n","⏳ Early stopping 대기 카운트: 5/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 28/100: 100%|██████████| 215/215 [00:02<00:00, 88.95it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 28 Finished - Avg Loss: 0.5105, Avg Acc: 82.31%\n","✅ Validation Finished - Avg Loss: 0.5681, Avg Acc: 80.99%\n","⏳ Early stopping 대기 카운트: 6/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 29/100: 100%|██████████| 215/215 [00:02<00:00, 87.34it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 29 Finished - Avg Loss: 0.5073, Avg Acc: 82.24%\n","✅ Validation Finished - Avg Loss: 0.5470, Avg Acc: 82.04%\n","💾 Best Model Updated! Saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/best_model_2025-03-17.pth (Loss: 0.5470)\n","💾 Model Saved! New Best Loss: 0.5470\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 30/100: 100%|██████████| 215/215 [00:03<00:00, 57.64it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 30 Finished - Avg Loss: 0.5169, Avg Acc: 81.79%\n","✅ Validation Finished - Avg Loss: 0.5536, Avg Acc: 81.83%\n","⏳ Early stopping 대기 카운트: 1/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 31/100: 100%|██████████| 215/215 [00:03<00:00, 68.63it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 31 Finished - Avg Loss: 0.5075, Avg Acc: 82.19%\n","✅ Validation Finished - Avg Loss: 0.5561, Avg Acc: 81.94%\n","⏳ Early stopping 대기 카운트: 2/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 32/100: 100%|██████████| 215/215 [00:02<00:00, 86.70it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 32 Finished - Avg Loss: 0.5089, Avg Acc: 82.22%\n","✅ Validation Finished - Avg Loss: 0.5493, Avg Acc: 81.94%\n","⏳ Early stopping 대기 카운트: 3/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 33/100: 100%|██████████| 215/215 [00:02<00:00, 78.48it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 33 Finished - Avg Loss: 0.5078, Avg Acc: 82.28%\n","✅ Validation Finished - Avg Loss: 0.5671, Avg Acc: 80.83%\n","⏳ Early stopping 대기 카운트: 4/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 34/100: 100%|██████████| 215/215 [00:02<00:00, 88.52it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 34 Finished - Avg Loss: 0.5039, Avg Acc: 82.43%\n","✅ Validation Finished - Avg Loss: 0.5648, Avg Acc: 81.20%\n","⏳ Early stopping 대기 카운트: 5/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 35/100: 100%|██████████| 215/215 [00:03<00:00, 62.05it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 35 Finished - Avg Loss: 0.5043, Avg Acc: 82.35%\n","✅ Validation Finished - Avg Loss: 0.5684, Avg Acc: 80.83%\n","⏳ Early stopping 대기 카운트: 6/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 36/100: 100%|██████████| 215/215 [00:02<00:00, 87.74it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 36 Finished - Avg Loss: 0.5040, Avg Acc: 82.38%\n","✅ Validation Finished - Avg Loss: 0.5606, Avg Acc: 81.20%\n","⏳ Early stopping 대기 카운트: 7/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 37/100: 100%|██████████| 215/215 [00:02<00:00, 88.01it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 37 Finished - Avg Loss: 0.5041, Avg Acc: 82.33%\n","✅ Validation Finished - Avg Loss: 0.5517, Avg Acc: 81.67%\n","⏳ Early stopping 대기 카운트: 8/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 38/100: 100%|██████████| 215/215 [00:02<00:00, 87.73it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 38 Finished - Avg Loss: 0.5026, Avg Acc: 82.38%\n","✅ Validation Finished - Avg Loss: 0.5598, Avg Acc: 81.30%\n","⏳ Early stopping 대기 카운트: 9/10\n","💾 Training results saved at /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.csv\n"]},{"output_type":"stream","name":"stderr","text":["Epoch 39/100: 100%|██████████| 215/215 [00:02<00:00, 74.95it/s]\n"]},{"output_type":"stream","name":"stdout","text":["✅ Train Epoch 39 Finished - Avg Loss: 0.5044, Avg Acc: 82.25%\n","✅ Validation Finished - Avg Loss: 0.5569, Avg Acc: 81.62%\n","⏳ Early stopping 대기 카운트: 10/10\n","⏹️ Early stopping 적용됨. 학습 종료.\n"]}],"source":["device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","\n","model = DecoderRNN(config)\n","model.to(device)  # 모델을 GPU로 이동\n","\n","optimizer = get_optimizer(model, config)\n","scheduler = get_scheduler(optimizer, config)\n","\n","epoch_train_losses, epoch_train_scores, epoch_valid_losses, epoch_valid_scores = train_and_validate(model, train_loader, valid_loader, optimizer, criterion, scheduler, config)\n","# RuntimeError: DataLoader worker -> dataloader 재실행"]},{"cell_type":"markdown","metadata":{"id":"HGuUoHMge_Ln"},"source":["## 결과 시각화"]},{"cell_type":"code","execution_count":30,"metadata":{"id":"oyXugdIMf1lg","executionInfo":{"status":"ok","timestamp":1742230320071,"user_tz":-540,"elapsed":12,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}}},"outputs":[],"source":["# Train 성능 평가만 할 경우\n","def plot_train_results(epoch_losses, epoch_scores, save_path=\"./\"):\n","    \"\"\"\n","    학습 과정의 Loss 및 Accuracy를 시각화하는 함수 (Train만).\n","    \"\"\"\n","    os.makedirs(save_path, exist_ok=True)\n","\n","    A = np.array(epoch_losses)\n","    B = np.array(epoch_scores)\n","\n","    fig = plt.figure(figsize=(10, 4))\n","\n","    # Loss 그래프\n","    plt.subplot(121)\n","    plt.plot(np.arange(1, len(A) + 1), A, marker=\"o\", markersize=2, linestyle=\"-\", label=\"Train Loss\")\n","    plt.title(\"Model Loss\")\n","    plt.xlabel(\"Epochs\")\n","    plt.ylabel(\"Loss\")\n","    plt.legend(loc=\"upper left\")\n","    # plt.ylim((0, max(2, max(A)))) # Y축 범위 설정\n","\n","    # Accuracy 그래프\n","    plt.subplot(122)\n","    plt.plot(np.arange(1, len(B) + 1), B, marker=\"o\", markersize=2, linestyle=\"-\", label=\"Train Accuracy\")\n","    plt.title(\"Training Accuracy\")\n","    plt.xlabel(\"Epochs\")\n","    plt.ylabel(\"Accuracy (%)\")\n","    plt.legend(loc=\"upper left\")\n","    # plt.ylim((0, 100))\n","\n","    # 그래프 저장\n","    plot_save_path = os.path.join(save_path, \"train_results.png\")\n","    plt.savefig(plot_save_path, dpi=600)\n","    plt.show()\n","\n","    print(f\"\\n✅ 학습 그래프 저장 완료 ({plot_save_path})\\n\")\n","\n","# Train - Test 성능 평가 (Train + Validation)\n","def plot_train_test_results(\n","    epoch_train_losses,\n","    epoch_train_scores,\n","    epoch_test_losses,\n","    epoch_test_scores,\n","    save_path=\"./\"\n","    ):\n","    \"\"\"\n","    학습 및 검증 과정의 Loss 및 Accuracy를 시각화하는 함수 (Train + Test).\n","    \"\"\"\n","    os.makedirs(save_path, exist_ok=True)\n","\n","    A = np.array(epoch_train_losses)\n","    B = np.array(epoch_train_scores)\n","    C = np.array(epoch_test_losses)\n","    D = np.array(epoch_test_scores)\n","\n","    fig = plt.figure(figsize=(10, 4))\n","\n","    # Loss 그래프\n","    plt.subplot(121)\n","    plt.plot(np.arange(1, len(A) + 1), A, marker=\"o\", markersize=2, linestyle=\"-\", label=\"Train Loss\")\n","    plt.plot(np.arange(1, len(C) + 1), C, marker=\"s\", markersize=2, linestyle=\"--\", label=\"Test Loss\")\n","    plt.title(\"Model Loss\")\n","    plt.xlabel(\"Epochs\")\n","    plt.ylabel(\"Loss\")\n","    plt.legend(loc=\"upper left\")\n","    # plt.ylim((0, max(2, max(A), max(C))))\n","\n","    # Accuracy 그래프\n","    plt.subplot(122)\n","    plt.plot(np.arange(1, len(B) + 1), B, marker=\"o\", markersize=2, linestyle=\"-\", label=\"Train Accuracy\")\n","    plt.plot(np.arange(1, len(D) + 1), D, marker=\"s\", markersize=2, linestyle=\"-\", label=\"Test Accuracy\")\n","    plt.title(\"Training vs Validation Accuracy\")\n","    plt.xlabel(\"Epochs\")\n","    plt.ylabel(\"Accuracy (%)\")\n","    plt.legend(loc=\"upper left\")\n","    # plt.ylim((0, 100))\n","\n","    # 그래프 저장\n","    plot_save_path = os.path.join(save_path, \"training_results.png\")\n","    plt.savefig(plot_save_path, dpi=600)\n","    plt.show()\n","\n","    print(f\"\\n✅ 학습 및 검증 그래프 저장 완료 ({plot_save_path})\\n\")"]},{"cell_type":"code","source":["plot_train_results(epoch_losses, epoch_scores, config[\"train_result_path\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":415},"id":"SWOKDUDEgqp2","executionInfo":{"status":"ok","timestamp":1742100550145,"user_tz":-540,"elapsed":1861,"user":{"displayName":"심소민","userId":"13422866620659141828"}},"outputId":"de4eb84f-7471-492f-bb7a-1057fcc61b48"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x400 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","✅ 학습 그래프 저장 완료 (/content/drive/MyDrive/DMS/test_LSTM/baseline_lstm_results/train_results.png)\n","\n"]}]},{"cell_type":"code","execution_count":31,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":459},"executionInfo":{"elapsed":1939,"status":"ok","timestamp":1742230324070,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"},"user_tz":-540},"id":"4Bj0jCj6NFtV","outputId":"a9bed07d-1e1e-4002-a00c-134f8d89dd1d"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x400 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","✅ 학습 및 검증 그래프 저장 완료 (/content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/train_results/training_results.png)\n","\n"]}],"source":["plot_train_test_results(\n","    epoch_train_losses,\n","    epoch_train_scores,\n","    epoch_valid_losses,\n","    epoch_valid_scores,\n","    save_path=config[\"train_result_path\"],\n",")"]},{"cell_type":"markdown","metadata":{"id":"BGwWEbn41ywD"},"source":["### 마지막 학습률 확인"]},{"cell_type":"code","execution_count":32,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1742230331322,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"},"user_tz":-540},"id":"U6DXplnheHnS","outputId":"e3f8bc72-c321-4ba3-eea4-538b84aadb50"},"outputs":[{"output_type":"stream","name":"stdout","text":["🚀 현재 Learning Rate: [6.25e-06]\n"]}],"source":["def get_current_lr(optimizer):\n","    return [param_group[\"lr\"] for param_group in optimizer.param_groups]\n","\n","current_lr = get_current_lr(optimizer)\n","print(f\"🚀 현재 Learning Rate: {current_lr}\")"]},{"cell_type":"code","execution_count":33,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1742230335258,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"},"user_tz":-540},"id":"iEaX4EQ9f6w4","outputId":"cae34fc2-77e6-4e6b-fa94-ff3037010eef"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[6.25e-06]"]},"metadata":{},"execution_count":33}],"source":["scheduler.get_last_lr()"]},{"cell_type":"markdown","metadata":{"id":"RvogPajT106l"},"source":["### confusion matrix 시각화"]},{"cell_type":"code","execution_count":34,"metadata":{"id":"PgKzQHFH84m0","executionInfo":{"status":"ok","timestamp":1742230337753,"user_tz":-540,"elapsed":55,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}}},"outputs":[],"source":["# 모델 로드 함수\n","def load_model(model, model_save_path, device):\n","    \"\"\"저장된 모델을 불러오는 함수\"\"\"\n","    checkpoint = torch.load(model_save_path, map_location=device)\n","    model.load_state_dict(checkpoint[\"model_state_dict\"])\n","    model.to(device)\n","    model.eval()\n","    print(f\"✅ Model Loaded from {model_save_path}\")\n","    return model\n","\n","# Confusion Matrix 시각화 함수\n","def plot_confusion_matrix(y_true, y_pred, class_names):\n","    \"\"\"\n","    Confusion Matrix를 그리는 함수\n","    \"\"\"\n","    cm = confusion_matrix(y_true, y_pred)\n","    plt.figure(figsize=(6, 6))\n","    sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=class_names, yticklabels=class_names)\n","    plt.xlabel(\"Predicted Label\")\n","    plt.ylabel(\"True Label\")\n","    plt.title(\"Confusion Matrix\")\n","    plt.show()\n","\n","    print(\"\\n🔹 Classification Report:\")\n","    print(classification_report(y_true, y_pred, target_names=class_names))\n","\n","# 학습 데이터에서 Confusion Matrix 계산\n","def evaluate_model(model, data_loader, class_names):\n","    \"\"\"\n","    모델을 평가하고 Confusion Matrix를 출력하는 함수\n","    \"\"\"\n","    model.eval()\n","    all_preds = []\n","    all_labels = []\n","\n","    with torch.no_grad():\n","        for x_batch, y_batch in data_loader:\n","            x_batch, y_batch = x_batch.to(\"cuda\"), y_batch.to(\"cuda\")\n","\n","            y_pred = model(x_batch)  # (batch_size, num_classes)\n","            y_pred_classes = torch.argmax(y_pred, dim=1)  # 가장 높은 확률을 가진 클래스를 예측값으로 선택\n","\n","            all_preds.extend(y_pred_classes.cpu().numpy())\n","            all_labels.extend(y_batch.cpu().numpy())\n","\n","    # Confusion Matrix 출력\n","    plot_confusion_matrix(all_labels, all_preds, class_names)"]},{"cell_type":"code","source":["model_path = \"/content/drive/MyDrive/DMS/LSTM_baseline/save_model/best_model_2025-03-17.pth\"\n","model = load_model(model, model_path, device)\n","class_names = config['action_names']\n","evaluate_model(model, train_loader, class_names)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":804},"id":"ovzf9lwoCB1O","executionInfo":{"status":"ok","timestamp":1742230569824,"user_tz":-540,"elapsed":6585,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}},"outputId":"1e4ebd88-820c-4593-c425-648cd668ca33"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["✅ Model Loaded from /content/drive/MyDrive/DMS/LSTM_baseline/save_model/best_model_2025-03-17.pth\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","🔹 Classification Report:\n","              precision    recall  f1-score   support\n","\n","      normal       0.85      0.92      0.88      4285\n","   phonecall       0.81      0.79      0.80      1658\n","        text       0.67      0.67      0.67       613\n","        yawn       0.00      0.00      0.00       293\n","\n","    accuracy                           0.82      6849\n","   macro avg       0.58      0.59      0.59      6849\n","weighted avg       0.79      0.82      0.80      6849\n","\n"]}]},{"cell_type":"code","execution_count":35,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":804},"executionInfo":{"elapsed":1600,"status":"ok","timestamp":1742230389371,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"},"user_tz":-540},"id":"8k3Iqhh99WBD","outputId":"3abb050e-13e1-4f82-a080-6d4f7ccb1811"},"outputs":[{"output_type":"stream","name":"stdout","text":["✅ Model Loaded from /content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/best_model_2025-03-17.pth\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 2 Axes>"],"image/png":"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\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","🔹 Classification Report:\n","              precision    recall  f1-score   support\n","\n","      normal       0.85      0.91      0.88      4285\n","   phonecall       0.80      0.79      0.80      1658\n","        text       0.68      0.65      0.66       613\n","        yawn       0.00      0.00      0.00       293\n","\n","    accuracy                           0.82      6849\n","   macro avg       0.58      0.59      0.58      6849\n","weighted avg       0.78      0.82      0.80      6849\n","\n"]}],"source":["model_path = \"/content/drive/MyDrive/DMS/data/model_results/031716_baseline_test/best_model_2025-03-17.pth\"\n","model = load_model(model, model_path, device)\n","class_names = config['action_names']\n","evaluate_model(model, train_loader, class_names)"]},{"cell_type":"code","execution_count":36,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":787},"executionInfo":{"elapsed":736,"status":"ok","timestamp":1742230394491,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"},"user_tz":-540},"id":"PHssvdxb9X9f","outputId":"d921712e-1ca6-4b60-e8a6-9e144e472ec5"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","🔹 Classification Report:\n","              precision    recall  f1-score   support\n","\n","      normal       0.87      0.88      0.87      1126\n","   phonecall       0.78      0.88      0.83       448\n","        text       0.66      0.66      0.66       224\n","        yawn       0.00      0.00      0.00        74\n","\n","    accuracy                           0.82      1872\n","   macro avg       0.58      0.60      0.59      1872\n","weighted avg       0.79      0.82      0.80      1872\n","\n"]}],"source":["evaluate_model(model, valid_loader, class_names)"]},{"cell_type":"code","source":["evaluate_model(model, test_loader, class_names)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":787},"id":"yOEhxN_cfFOV","executionInfo":{"status":"ok","timestamp":1742230402399,"user_tz":-540,"elapsed":496,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}},"outputId":"87be82ae-cd1f-4eb8-bdc4-fa030691989a"},"execution_count":37,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","🔹 Classification Report:\n","              precision    recall  f1-score   support\n","\n","      normal       0.87      0.92      0.89      1175\n","   phonecall       0.85      0.96      0.90       472\n","        text       0.56      0.52      0.54       214\n","        yawn       0.00      0.00      0.00       101\n","\n","    accuracy                           0.84      1962\n","   macro avg       0.57      0.60      0.58      1962\n","weighted avg       0.79      0.84      0.81      1962\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"uNtx9wDFmpxW"},"source":["# 2. 테스트 코드\n","1. **동영상에서 프레임 추출**\n","2. **12개씩 프레임 묶음 (시퀀스 단위)**\n","3. **특징 추출 (Pitch, Yaw, EAR, MAR, Phone 사용 여부)**\n","4. **특징값 병합**\n","5. **LSTM Input 형식 변환**\n","6. **LSTM 모델 예측 (테스트 수행)**"]},{"cell_type":"markdown","source":["# 24frame 4초로 데이터 로드"],"metadata":{"id":"wQt9VR1i6VGS"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"KG7B-UNymv0B"},"outputs":[],"source":["import os\n","import numpy as np\n","\n","def merge_video_parts_to_24frames(data_dir, save_dir):\n","    \"\"\"\n","    한 비디오의 여러 `part-*` 파일들을 순서대로 합쳐 24프레임씩 묶어 저장하는 함수.\n","\n","    Args:\n","        data_dir (str): 기존 12프레임 묶음 데이터가 저장된 디렉토리.\n","        save_dir (str): 24프레임으로 변환된 데이터를 저장할 디렉토리.\n","    \"\"\"\n","    os.makedirs(save_dir, exist_ok=True)  # 저장할 디렉토리 생성\n","\n","    # ✅ 12프레임 묶음 파일 리스트 가져오기\n","    all_files = sorted(os.listdir(data_dir))  # 파일 이름 기준 정렬\n","    video_dict = {}\n","\n","    # ✅ 비디오별로 `part-*`를 그룹화\n","    for file in all_files:\n","        if not file.endswith(\".npz\"):  # ✅ npz 파일이 아니면 스킵\n","            continue\n","        video_name, part = file.rsplit(\"_\", 1)  # ✅ 비디오 이름과 `part-*` 분리\n","        video_dict.setdefault(video_name, []).append(file)\n","\n","    # ✅ 각 비디오별로 `part-*`들을 24프레임 단위로 묶어서 저장\n","    for video_name, parts in video_dict.items():\n","        parts.sort()  # ✅ part 순서대로 정렬\n","        merged_features = []\n","        merged_labels = []\n","        part_count = 0\n","\n","        for part_file in parts:\n","            part_data = np.load(os.path.join(data_dir, part_file), allow_pickle=True)\n","\n","            # ✅ 기존 12프레임 데이터 추가\n","            merged_features.append(part_data[\"features\"])\n","            merged_labels.append(part_data[\"labels\"])\n","\n","            # ✅ 24프레임이 채워졌을 경우 저장\n","            if len(merged_features) == 2:  # 12프레임 x 2 = 24프레임\n","                full_features = np.concatenate(merged_features, axis=0)\n","                full_labels = np.concatenate(merged_labels, axis=0)\n","\n","                # ✅ 저장할 파일명 생성\n","                merged_file_name = f\"{video_name}_merged-{part_count}.npz\"\n","                save_path = os.path.join(save_dir, merged_file_name)\n","\n","                # ✅ 데이터 저장\n","                np.savez_compressed(save_path, features=full_features, labels=full_labels)\n","                print(f\"✅ Saved: {save_path}\")\n","\n","                # ✅ 초기화\n","                merged_features = []\n","                merged_labels = []\n","                part_count += 1\n","\n","        # ✅ 남은 데이터(12프레임 미만)도 저장\n","        if merged_features:\n","            remaining_features = np.concatenate(merged_features, axis=0)\n","            remaining_labels = np.concatenate(merged_labels, axis=0)\n","\n","            remaining_file_name = f\"{video_name}_merged-{part_count}.npz\"\n","            save_path = os.path.join(save_dir, remaining_file_name)\n","            np.savez_compressed(save_path, features=remaining_features, labels=remaining_labels)\n","            print(f\"✅ Saved (Remaining): {save_path}\")\n","\n","    print(\"🎉 모든 비디오의 `part-*`를 24프레임 단위로 변환 완료!\")\n","\n","# ✅ 변환 실행 예제\n","data_dir = \"/content/drive/MyDrive/DMS/12_frame_batches\"\n","save_dir = \"/content/drive/MyDrive/DMS/24_frame_batches\"\n","\n","merge_video_parts_to_24frames(data_dir, save_dir)\n"]},{"cell_type":"code","source":["train.head(50)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"wKTTWKFGdf1m","executionInfo":{"status":"ok","timestamp":1742037252954,"user_tz":-540,"elapsed":60,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"da9bce0d-f30d-4cd1-8865-cef2e6bb159b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     label                                         video_name  \\\n","0   normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...   \n","1   normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...   \n","2   normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...   \n","3   normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...   \n","4   normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...   \n","5   normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...   \n","6   normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...   \n","7   normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...   \n","8   normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...   \n","9   normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...   \n","10  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...   \n","11  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...   \n","12  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","13  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","14  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","15  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","16  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","17  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","18  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","19  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","20  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","21  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","22  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","23  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","24  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","25  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","26  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","27  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","28  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","29  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","30  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","31  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","32  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","33  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","34  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","35  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","36  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","37  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","38  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","39  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","40  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","41  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","42  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","43  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","44  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","45  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","46  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","47  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","48  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","49  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","\n","              frame     pitch       yaw   avg_EAR       MAR part  \n","0   frame000000.jpg -0.802380 -0.178544  0.188577  0.152621    1  \n","1   frame000001.jpg -0.258022 -0.444779  0.115461  0.098821    1  \n","2   frame000002.jpg  0.173530 -0.746606  0.101308  0.080448    1  \n","3   frame000003.jpg -0.022168 -0.725515  0.101270  0.099019    1  \n","4   frame000004.jpg -0.187156 -0.672688  0.110530  0.118148    1  \n","5   frame000005.jpg -0.081897 -0.417988  0.106606  0.104334    1  \n","6   frame000006.jpg -0.057508 -0.357123  0.107029  0.078543    1  \n","7   frame000007.jpg -0.095150 -0.293449  0.127666  0.199588    1  \n","8   frame000008.jpg -0.029999 -0.322888  0.131944  0.162603    1  \n","9   frame000009.jpg -0.083665 -0.351652  0.128290  0.163139    1  \n","10  frame000010.jpg -0.114005 -0.262549  0.127316  0.131742    1  \n","11  frame000011.jpg  0.198813 -0.426702  0.119545  0.105003    1  \n","12  frame000000.jpg -0.162547  0.383138  0.135221  0.035636    1  \n","13  frame000001.jpg -0.106020  0.386174  0.133314  0.044391    1  \n","14  frame000002.jpg -0.169882  0.375745  0.136033  0.035499    1  \n","15  frame000003.jpg -0.045397  0.037967  0.110734  0.053587    1  \n","16  frame000004.jpg -0.010141  0.035154  0.122045  0.045255    1  \n","17  frame000005.jpg -0.028454  0.423624  0.137005  0.026838    1  \n","18  frame000006.jpg  0.003078  0.327934  0.142475  0.047690    1  \n","19  frame000007.jpg -0.124906  0.338268  0.140268  0.037378    1  \n","20  frame000008.jpg -0.474184  0.133306  0.144544  0.047267    1  \n","21  frame000009.jpg -0.705404  0.108137  0.163965  0.035382    1  \n","22  frame000010.jpg -0.690933  0.116257  0.156006  0.039635    1  \n","23  frame000011.jpg -0.238112  0.213462  0.136346  0.053967    1  \n","24  frame000012.jpg -0.237376  0.338889  0.142157  0.025646    2  \n","25  frame000013.jpg -0.241783  0.256069  0.137999  0.035989    2  \n","26  frame000014.jpg -0.305443  0.313501  0.135850  0.025056    2  \n","27  frame000015.jpg -0.215230  0.310252  0.136343  0.029065    2  \n","28  frame000016.jpg -0.168923  0.303076  0.156912  0.026932    2  \n","29  frame000017.jpg -0.160947  0.366042  0.154081  0.018471    2  \n","30  frame000018.jpg -0.052580  0.374844  0.154908  0.024776    2  \n","31  frame000019.jpg -0.100234  0.440876  0.158147  0.016030    2  \n","32  frame000020.jpg -0.079458  0.393935  0.151836  0.016320    2  \n","33  frame000021.jpg -0.142750  0.448007  0.145698  0.027477    2  \n","34  frame000022.jpg -0.308564  0.359894  0.141501  0.026589    2  \n","35  frame000023.jpg -0.088927  0.421641  0.151272  0.027405    2  \n","36  frame000024.jpg -0.007779  0.370038  0.144192  0.026231    3  \n","37  frame000025.jpg -0.106378  0.396011  0.147885  0.028965    3  \n","38  frame000026.jpg  0.120003  0.335273  0.133535  0.032796    3  \n","39  frame000027.jpg  0.452410  0.393298  0.133358  0.028248    3  \n","40  frame000028.jpg  0.593531  0.352122  0.133461  0.033316    3  \n","41  frame000029.jpg  0.193713  0.383158  0.138256  0.035188    3  \n","42  frame000030.jpg  0.729767  0.155420  0.119810  0.040889    3  \n","43  frame000031.jpg  0.712527  0.178428  0.160353  0.040049    3  \n","44  frame000032.jpg  0.796942  0.188987  0.169003  0.051361    3  \n","45  frame000033.jpg  0.877117  0.171944  0.170352  0.042549    3  \n","46  frame000034.jpg  0.974329  0.117801  0.160819  0.049181    3  \n","47  frame000035.jpg  0.874859  0.162654  0.168107  0.049233    3  \n","48  frame000036.jpg  0.994950  0.095650  0.161302  0.047066    4  \n","49  frame000037.jpg  1.079914  0.083795  0.167735  0.051302    4  "],"text/html":["\n","  <div id=\"df-a7983773-db69-4e42-b250-4af296a92853\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>video_name</th>\n","      <th>frame</th>\n","      <th>pitch</th>\n","      <th>yaw</th>\n","      <th>avg_EAR</th>\n","      <th>MAR</th>\n","      <th>part</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...</td>\n","      <td>frame000000.jpg</td>\n","      <td>-0.802380</td>\n","      <td>-0.178544</td>\n","      <td>0.188577</td>\n","      <td>0.152621</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...</td>\n","      <td>frame000001.jpg</td>\n","      <td>-0.258022</td>\n","      <td>-0.444779</td>\n","      <td>0.115461</td>\n","      <td>0.098821</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...</td>\n","      <td>frame000002.jpg</td>\n","      <td>0.173530</td>\n","      <td>-0.746606</td>\n","      <td>0.101308</td>\n","      <td>0.080448</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...</td>\n","      <td>frame000003.jpg</td>\n","      <td>-0.022168</td>\n","      <td>-0.725515</td>\n","      <td>0.101270</td>\n","      <td>0.099019</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...</td>\n","      <td>frame000004.jpg</td>\n","      <td>-0.187156</td>\n","      <td>-0.672688</td>\n","      <td>0.110530</td>\n","      <td>0.118148</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...</td>\n","      <td>frame000005.jpg</td>\n","      <td>-0.081897</td>\n","      <td>-0.417988</td>\n","      <td>0.106606</td>\n","      <td>0.104334</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...</td>\n","      <td>frame000006.jpg</td>\n","      <td>-0.057508</td>\n","      <td>-0.357123</td>\n","      <td>0.107029</td>\n","      <td>0.078543</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...</td>\n","      <td>frame000007.jpg</td>\n","      <td>-0.095150</td>\n","      <td>-0.293449</td>\n","      <td>0.127666</td>\n","      <td>0.199588</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...</td>\n","      <td>frame000008.jpg</td>\n","      <td>-0.029999</td>\n","      <td>-0.322888</td>\n","      <td>0.131944</td>\n","      <td>0.162603</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...</td>\n","      <td>frame000009.jpg</td>\n","      <td>-0.083665</td>\n","      <td>-0.351652</td>\n","      <td>0.128290</td>\n","      <td>0.163139</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...</td>\n","      <td>frame000010.jpg</td>\n","      <td>-0.114005</td>\n","      <td>-0.262549</td>\n","      <td>0.127316</td>\n","      <td>0.131742</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_0...</td>\n","      <td>frame000011.jpg</td>\n","      <td>0.198813</td>\n","      <td>-0.426702</td>\n","      <td>0.119545</td>\n","      <td>0.105003</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000000.jpg</td>\n","      <td>-0.162547</td>\n","      <td>0.383138</td>\n","      <td>0.135221</td>\n","      <td>0.035636</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000001.jpg</td>\n","      <td>-0.106020</td>\n","      <td>0.386174</td>\n","      <td>0.133314</td>\n","      <td>0.044391</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000002.jpg</td>\n","      <td>-0.169882</td>\n","      <td>0.375745</td>\n","      <td>0.136033</td>\n","      <td>0.035499</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000003.jpg</td>\n","      <td>-0.045397</td>\n","      <td>0.037967</td>\n","      <td>0.110734</td>\n","      <td>0.053587</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000004.jpg</td>\n","      <td>-0.010141</td>\n","      <td>0.035154</td>\n","      <td>0.122045</td>\n","      <td>0.045255</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000005.jpg</td>\n","      <td>-0.028454</td>\n","      <td>0.423624</td>\n","      <td>0.137005</td>\n","      <td>0.026838</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000006.jpg</td>\n","      <td>0.003078</td>\n","      <td>0.327934</td>\n","      <td>0.142475</td>\n","      <td>0.047690</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000007.jpg</td>\n","      <td>-0.124906</td>\n","      <td>0.338268</td>\n","      <td>0.140268</td>\n","      <td>0.037378</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000008.jpg</td>\n","      <td>-0.474184</td>\n","      <td>0.133306</td>\n","      <td>0.144544</td>\n","      <td>0.047267</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000009.jpg</td>\n","      <td>-0.705404</td>\n","      <td>0.108137</td>\n","      <td>0.163965</td>\n","      <td>0.035382</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000010.jpg</td>\n","      <td>-0.690933</td>\n","      <td>0.116257</td>\n","      <td>0.156006</td>\n","      <td>0.039635</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000011.jpg</td>\n","      <td>-0.238112</td>\n","      <td>0.213462</td>\n","      <td>0.136346</td>\n","      <td>0.053967</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000012.jpg</td>\n","      <td>-0.237376</td>\n","      <td>0.338889</td>\n","      <td>0.142157</td>\n","      <td>0.025646</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000013.jpg</td>\n","      <td>-0.241783</td>\n","      <td>0.256069</td>\n","      <td>0.137999</td>\n","      <td>0.035989</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000014.jpg</td>\n","      <td>-0.305443</td>\n","      <td>0.313501</td>\n","      <td>0.135850</td>\n","      <td>0.025056</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000015.jpg</td>\n","      <td>-0.215230</td>\n","      <td>0.310252</td>\n","      <td>0.136343</td>\n","      <td>0.029065</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000016.jpg</td>\n","      <td>-0.168923</td>\n","      <td>0.303076</td>\n","      <td>0.156912</td>\n","      <td>0.026932</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000017.jpg</td>\n","      <td>-0.160947</td>\n","      <td>0.366042</td>\n","      <td>0.154081</td>\n","      <td>0.018471</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000018.jpg</td>\n","      <td>-0.052580</td>\n","      <td>0.374844</td>\n","      <td>0.154908</td>\n","      <td>0.024776</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000019.jpg</td>\n","      <td>-0.100234</td>\n","      <td>0.440876</td>\n","      <td>0.158147</td>\n","      <td>0.016030</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000020.jpg</td>\n","      <td>-0.079458</td>\n","      <td>0.393935</td>\n","      <td>0.151836</td>\n","      <td>0.016320</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000021.jpg</td>\n","      <td>-0.142750</td>\n","      <td>0.448007</td>\n","      <td>0.145698</td>\n","      <td>0.027477</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000022.jpg</td>\n","      <td>-0.308564</td>\n","      <td>0.359894</td>\n","      <td>0.141501</td>\n","      <td>0.026589</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000023.jpg</td>\n","      <td>-0.088927</td>\n","      <td>0.421641</td>\n","      <td>0.151272</td>\n","      <td>0.027405</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000024.jpg</td>\n","      <td>-0.007779</td>\n","      <td>0.370038</td>\n","      <td>0.144192</td>\n","      <td>0.026231</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000025.jpg</td>\n","      <td>-0.106378</td>\n","      <td>0.396011</td>\n","      <td>0.147885</td>\n","      <td>0.028965</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000026.jpg</td>\n","      <td>0.120003</td>\n","      <td>0.335273</td>\n","      <td>0.133535</td>\n","      <td>0.032796</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000027.jpg</td>\n","      <td>0.452410</td>\n","      <td>0.393298</td>\n","      <td>0.133358</td>\n","      <td>0.028248</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000028.jpg</td>\n","      <td>0.593531</td>\n","      <td>0.352122</td>\n","      <td>0.133461</td>\n","      <td>0.033316</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000029.jpg</td>\n","      <td>0.193713</td>\n","      <td>0.383158</td>\n","      <td>0.138256</td>\n","      <td>0.035188</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000030.jpg</td>\n","      <td>0.729767</td>\n","      <td>0.155420</td>\n","      <td>0.119810</td>\n","      <td>0.040889</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000031.jpg</td>\n","      <td>0.712527</td>\n","      <td>0.178428</td>\n","      <td>0.160353</td>\n","      <td>0.040049</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000032.jpg</td>\n","      <td>0.796942</td>\n","      <td>0.188987</td>\n","      <td>0.169003</td>\n","      <td>0.051361</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000033.jpg</td>\n","      <td>0.877117</td>\n","      <td>0.171944</td>\n","      <td>0.170352</td>\n","      <td>0.042549</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000034.jpg</td>\n","      <td>0.974329</td>\n","      <td>0.117801</td>\n","      <td>0.160819</td>\n","      <td>0.049181</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000035.jpg</td>\n","      <td>0.874859</td>\n","      <td>0.162654</td>\n","      <td>0.168107</td>\n","      <td>0.049233</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000036.jpg</td>\n","      <td>0.994950</td>\n","      <td>0.095650</td>\n","      <td>0.161302</td>\n","      <td>0.047066</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000037.jpg</td>\n","      <td>1.079914</td>\n","      <td>0.083795</td>\n","      <td>0.167735</td>\n","      <td>0.051302</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a7983773-db69-4e42-b250-4af296a92853')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a7983773-db69-4e42-b250-4af296a92853 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a7983773-db69-4e42-b250-4af296a92853');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1df13292-5214-4af2-9863-2fe4c14c89c4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1df13292-5214-4af2-9863-2fe4c14c89c4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1df13292-5214-4af2-9863-2fe4c14c89c4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train"}},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["train.video_name[23]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"ZSRBnn0Idgey","executionInfo":{"status":"ok","timestamp":1742037282823,"user_tz":-540,"elapsed":5,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"97ff78d6-ce58-419e-eda9-5aafa27fbdf2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1.avi_part1'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["train.video_name[24]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"bW70sh5ifViM","executionInfo":{"status":"ok","timestamp":1742037280720,"user_tz":-540,"elapsed":12,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"9167a902-9847-4199-c376-deee4aa932c5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1.avi_part2'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["video_names = train['video_name']\n","video_clip = []\n","parts = []\n","for video_name in video_names:\n","    splited = video_name.split('_')\n","    part = splited[-1][4:]\n","    parts.append(part)\n","    video_clip.append(''.join(splited[:-1]))\n","train['part'] = parts\n","train['video_clip'] = video_clip"],"metadata":{"id":"fgvsbWn9fv6Z"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XGAzqlyogL8G","executionInfo":{"status":"ok","timestamp":1742037466490,"user_tz":-540,"elapsed":23,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"2ca7ca18-2e80-4fdf-9549-8de076697036"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 104652 entries, 0 to 104939\n","Data columns (total 9 columns):\n"," #   Column      Non-Null Count   Dtype  \n","---  ------      --------------   -----  \n"," 0   label       104652 non-null  object \n"," 1   video_name  104652 non-null  object \n"," 2   frame       104652 non-null  object \n"," 3   pitch       104652 non-null  float64\n"," 4   yaw         104652 non-null  float64\n"," 5   avg_EAR     104652 non-null  float64\n"," 6   MAR         104652 non-null  float64\n"," 7   part        104652 non-null  object \n"," 8   video_clip  104652 non-null  object \n","dtypes: float64(4), object(5)\n","memory usage: 12.0+ MB\n"]}]},{"cell_type":"code","source":["train[20:30]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"tAoyw5-_gbaP","executionInfo":{"status":"ok","timestamp":1742037489170,"user_tz":-540,"elapsed":79,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"a808e2b8-a0f4-4f14-ef22-3c92ad9fba0f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     label                                         video_name  \\\n","20  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","21  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","22  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","23  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","24  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","25  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","26  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","27  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","28  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","29  normal  gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...   \n","\n","              frame     pitch       yaw   avg_EAR       MAR part  \\\n","20  frame000008.jpg -0.474184  0.133306  0.144544  0.047267    1   \n","21  frame000009.jpg -0.705404  0.108137  0.163965  0.035382    1   \n","22  frame000010.jpg -0.690933  0.116257  0.156006  0.039635    1   \n","23  frame000011.jpg -0.238112  0.213462  0.136346  0.053967    1   \n","24  frame000012.jpg -0.237376  0.338889  0.142157  0.025646    2   \n","25  frame000013.jpg -0.241783  0.256069  0.137999  0.035989    2   \n","26  frame000014.jpg -0.305443  0.313501  0.135850  0.025056    2   \n","27  frame000015.jpg -0.215230  0.310252  0.136343  0.029065    2   \n","28  frame000016.jpg -0.168923  0.303076  0.156912  0.026932    2   \n","29  frame000017.jpg -0.160947  0.366042  0.154081  0.018471    2   \n","\n","                                     video_clip  \n","20  gB-10(File10)s1face2019-03-11-152454101.avi  \n","21  gB-10(File10)s1face2019-03-11-152454101.avi  \n","22  gB-10(File10)s1face2019-03-11-152454101.avi  \n","23  gB-10(File10)s1face2019-03-11-152454101.avi  \n","24  gB-10(File10)s1face2019-03-11-152454101.avi  \n","25  gB-10(File10)s1face2019-03-11-152454101.avi  \n","26  gB-10(File10)s1face2019-03-11-152454101.avi  \n","27  gB-10(File10)s1face2019-03-11-152454101.avi  \n","28  gB-10(File10)s1face2019-03-11-152454101.avi  \n","29  gB-10(File10)s1face2019-03-11-152454101.avi  "],"text/html":["\n","  <div id=\"df-a0c29c29-468d-43b2-87df-9528ffc99395\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>video_name</th>\n","      <th>frame</th>\n","      <th>pitch</th>\n","      <th>yaw</th>\n","      <th>avg_EAR</th>\n","      <th>MAR</th>\n","      <th>part</th>\n","      <th>video_clip</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>20</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000008.jpg</td>\n","      <td>-0.474184</td>\n","      <td>0.133306</td>\n","      <td>0.144544</td>\n","      <td>0.047267</td>\n","      <td>1</td>\n","      <td>gB-10(File10)s1face2019-03-11-152454101.avi</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000009.jpg</td>\n","      <td>-0.705404</td>\n","      <td>0.108137</td>\n","      <td>0.163965</td>\n","      <td>0.035382</td>\n","      <td>1</td>\n","      <td>gB-10(File10)s1face2019-03-11-152454101.avi</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000010.jpg</td>\n","      <td>-0.690933</td>\n","      <td>0.116257</td>\n","      <td>0.156006</td>\n","      <td>0.039635</td>\n","      <td>1</td>\n","      <td>gB-10(File10)s1face2019-03-11-152454101.avi</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000011.jpg</td>\n","      <td>-0.238112</td>\n","      <td>0.213462</td>\n","      <td>0.136346</td>\n","      <td>0.053967</td>\n","      <td>1</td>\n","      <td>gB-10(File10)s1face2019-03-11-152454101.avi</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000012.jpg</td>\n","      <td>-0.237376</td>\n","      <td>0.338889</td>\n","      <td>0.142157</td>\n","      <td>0.025646</td>\n","      <td>2</td>\n","      <td>gB-10(File10)s1face2019-03-11-152454101.avi</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000013.jpg</td>\n","      <td>-0.241783</td>\n","      <td>0.256069</td>\n","      <td>0.137999</td>\n","      <td>0.035989</td>\n","      <td>2</td>\n","      <td>gB-10(File10)s1face2019-03-11-152454101.avi</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000014.jpg</td>\n","      <td>-0.305443</td>\n","      <td>0.313501</td>\n","      <td>0.135850</td>\n","      <td>0.025056</td>\n","      <td>2</td>\n","      <td>gB-10(File10)s1face2019-03-11-152454101.avi</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000015.jpg</td>\n","      <td>-0.215230</td>\n","      <td>0.310252</td>\n","      <td>0.136343</td>\n","      <td>0.029065</td>\n","      <td>2</td>\n","      <td>gB-10(File10)s1face2019-03-11-152454101.avi</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000016.jpg</td>\n","      <td>-0.168923</td>\n","      <td>0.303076</td>\n","      <td>0.156912</td>\n","      <td>0.026932</td>\n","      <td>2</td>\n","      <td>gB-10(File10)s1face2019-03-11-152454101.avi</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>normal</td>\n","      <td>gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1...</td>\n","      <td>frame000017.jpg</td>\n","      <td>-0.160947</td>\n","      <td>0.366042</td>\n","      <td>0.154081</td>\n","      <td>0.018471</td>\n","      <td>2</td>\n","      <td>gB-10(File10)s1face2019-03-11-152454101.avi</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a0c29c29-468d-43b2-87df-9528ffc99395')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a0c29c29-468d-43b2-87df-9528ffc99395 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a0c29c29-468d-43b2-87df-9528ffc99395');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9fd39ab1-e487-45fa-aecc-a4a295eb3bf6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9fd39ab1-e487-45fa-aecc-a4a295eb3bf6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9fd39ab1-e487-45fa-aecc-a4a295eb3bf6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"train[20:30]\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"normal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"video_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"gB-10(File10)_s1_face_2019-03-11-15_24_54_10_1.avi_part2\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"frame\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"frame000016.jpg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pitch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.20633886836637988,\n        \"min\": -0.7054043,\n        \"max\": -0.16094682,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          -0.16892299\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"yaw\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09699958494609799,\n        \"min\": 0.108136855,\n        \"max\": 0.36604246,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.30307573\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"avg_EAR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.010412858820759714,\n        \"min\": 0.1358498215060727,\n        \"max\": 0.1639647792867245,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.1569117558919599\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.01093861844152685,\n        \"min\": 0.0184714807436559,\n        \"max\": 0.0539670183954774,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.026931970150082\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"part\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"2\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"video_clip\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"gB-10(File10)s1face2019-03-11-152454101.avi\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["timestep = 24\n","\n","grouped = train.groupby(\"video_clip\")\n","sequences = []\n","\n","for _, group in grouped:\n","    group = group.sort_values(by=\"frame\")  # 프레임 순서 정렬\n","    features = group[[\"pitch\", \"yaw\", \"avg_EAR\", \"MAR\"]].values\n","    labels = group[\"label\"].values\n","\n","    num_samples = len(features) // timestep  # 가능한 샘플 개수\n","    features = features[:num_samples * timestep]  # 24 프레임 단위로 자르기\n","    labels = labels[:num_samples * timestep]  # 라벨도 동일하게 자르기\n","\n","    # (샘플 개수, 24, 특성 수) 형태로 변환\n","    features = features.reshape(num_samples, timestep, -1)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":216},"id":"WXLIURfJgiyn","executionInfo":{"status":"error","timestamp":1742038131818,"user_tz":-540,"elapsed":76,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"ae67ae2d-6ea6-4eb3-a3d5-258da8dde3cc"},"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"cannot reshape array of size 0 into shape (0,24,newaxis)","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-45-d832373b9a59>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m     \u001b[0;31m# (샘플 개수, 24, 특성 수) 형태로 변환\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 16\u001b[0;31m     \u001b[0mfeatures\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfeatures\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreshape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnum_samples\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimestep\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     17\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     18\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnum_samples\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: cannot reshape array of size 0 into shape (0,24,newaxis)"]}]},{"cell_type":"code","source":["sequences"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QnCYkG9ZkgzI","executionInfo":{"status":"ok","timestamp":1742038242079,"user_tz":-540,"elapsed":22,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"2bdfbd50-4f03-4fb9-eb74-3b9908c8727d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(array([[ 0.13482253, -0.0524254 ,  0.08242809,  0.15493202],\n","         [ 0.05477936,  0.05504221,  0.11030949,  0.17709492],\n","         [ 0.10956458,  0.07453336,  0.12162362,  0.09462981],\n","         [ 0.0704715 ,  0.07735764,  0.12705756,  0.09500459],\n","         [-0.07684498, -0.68677896,  0.0736597 ,  0.11221357],\n","         [ 0.07015593,  0.04702264,  0.10386647,  0.1325756 ],\n","         [ 0.09466739,  0.07578984,  0.12021892,  0.16898289],\n","         [ 0.07025819,  0.07453949,  0.1163146 ,  0.32163674],\n","         [ 0.05162298,  0.06797479,  0.11684658,  0.27434696],\n","         [ 0.06828292,  0.08553647,  0.125931  ,  0.4146161 ],\n","         [ 0.04754009,  0.08469092,  0.12707507,  0.43604702],\n","         [ 0.03346742,  0.07567506,  0.13568326,  0.40378463],\n","         [ 0.12589535,  0.03884487,  0.13286173,  0.42098365],\n","         [ 0.12262473,  0.00409062,  0.13692523,  0.37787256],\n","         [ 0.09037624,  0.06569326,  0.12425996,  0.30625247],\n","         [ 0.15921043,  0.0594801 ,  0.12676402,  0.42843683],\n","         [ 0.10968708,  0.15144145,  0.12898418,  0.46084708],\n","         [ 0.02264166,  0.06324741,  0.12215001,  0.51395692],\n","         [ 0.07616561,  0.05142245,  0.12886064,  0.51984369],\n","         [ 0.0287419 ,  0.06271665,  0.12452628,  0.49585261],\n","         [ 0.07319219,  0.05901592,  0.1268931 ,  0.49644844],\n","         [ 0.0853639 ,  0.01513395,  0.12318951,  0.47258561],\n","         [ 0.02914697,  0.01417947,  0.12159407,  0.40135453],\n","         [ 0.0571818 ,  0.01930153,  0.1172894 ,  0.3356464 ]]),\n","  'yawn'),\n"," (array([[ 0.08821562,  0.03570341,  0.11222307,  0.36762547],\n","         [ 0.01261646, -0.00659372,  0.11487556,  0.31515076],\n","         [ 0.02139903,  0.02731604,  0.11333195,  0.38306667],\n","         [ 0.02887559,  0.03625574,  0.1110757 ,  0.39856688],\n","         [-0.02037878,  0.05644836,  0.11579463,  0.45907503],\n","         [ 0.05659377,  0.03749198,  0.11623884,  0.3913737 ],\n","         [ 0.03584908,  0.02138785,  0.12134886,  0.43752054],\n","         [ 0.05863881,  0.0666552 ,  0.12046297,  0.41487722],\n","         [ 0.16711177,  0.06938813,  0.11766959,  0.35766215],\n","         [ 0.07237274,  0.07843249,  0.11371832,  0.38091579],\n","         [ 0.06089531,  0.05610215,  0.12437535,  0.36140091],\n","         [ 0.05797143,  0.06264394,  0.11923082,  0.34845381],\n","         [-0.00639265,  0.07686442,  0.11460022,  0.2504569 ],\n","         [-0.01379731,  0.06292757,  0.11549344,  0.26603646],\n","         [ 0.09616356,  0.05647606,  0.11928643,  0.28418438],\n","         [ 0.07263399,  0.05235109,  0.12249453,  0.26252653],\n","         [ 0.07950388,  0.06815216,  0.12145667,  0.24519246],\n","         [ 0.11722276,  0.0772639 ,  0.12163931,  0.24033889],\n","         [ 0.11978367,  0.06748317,  0.12223577,  0.24022847],\n","         [ 0.14541394,  0.2603091 ,  0.11770395,  0.22135928],\n","         [ 0.20716357,  0.19404592,  0.1311153 ,  0.22061981],\n","         [ 0.17466715,  0.22956929,  0.13061502,  0.16490637],\n","         [ 0.17425597,  0.13713148,  0.12163703,  0.20455465],\n","         [ 0.11451433,  0.07695018,  0.11626077,  0.22504004]]),\n","  'yawn'),\n"," (array([[ 0.05239583,  0.10521991,  0.1150278 ,  0.04075024],\n","         [ 0.05066238,  0.09854069,  0.11708143,  0.04181444],\n","         [ 0.03153982,  0.09014215,  0.11513971,  0.04251406],\n","         [ 0.04368277,  0.09246735,  0.11902751,  0.04022899],\n","         [ 0.03119228,  0.08472714,  0.12106986,  0.07128751],\n","         [ 0.04394189,  0.08491197,  0.11085643,  0.12806899],\n","         [ 0.04665379,  0.08639827,  0.12365503,  0.1723435 ],\n","         [ 0.03509301,  0.0831106 ,  0.12026951,  0.21101434],\n","         [ 0.03925526,  0.08471622,  0.12681372,  0.25796196],\n","         [ 0.0732593 ,  0.07517572,  0.13238945,  0.33387157],\n","         [-0.03244955,  0.06741047,  0.13839991,  0.41879571],\n","         [-0.01629002,  0.09323727,  0.11491613,  0.51028755],\n","         [ 0.04713716,  0.07357382,  0.12158134,  0.41066891],\n","         [ 0.03388047,  0.07294238,  0.13419894,  0.52163996],\n","         [ 0.05841777,  0.08086529,  0.13172173,  0.52019858],\n","         [ 0.06752605,  0.08376734,  0.13431404,  0.45691163],\n","         [ 0.07943411,  0.08518227,  0.13389719,  0.43639619],\n","         [ 0.05686994,  0.09321916,  0.13073125,  0.49114462],\n","         [ 0.03333532,  0.09666956,  0.12830628,  0.51142412],\n","         [ 0.00786565,  0.07827244,  0.12664796,  0.50235437],\n","         [ 0.04701624,  0.09035519,  0.12484175,  0.52409832],\n","         [-0.0010405 ,  0.07781943,  0.12205653,  0.60639445],\n","         [ 0.00615616,  0.07380126,  0.13006347,  0.60182663],\n","         [ 0.03371296,  0.07886846,  0.12534242,  0.60694263]]),\n","  'yawn'),\n"," (array([[0.07497944, 0.08408905, 0.13415488, 0.57891478],\n","         [0.06592815, 0.0831415 , 0.12516183, 0.5036751 ],\n","         [0.04970444, 0.07766683, 0.13341279, 0.49636596],\n","         [0.0719927 , 0.07021797, 0.1366563 , 0.52949035],\n","         [0.02600497, 0.07573284, 0.13231482, 0.49380628],\n","         [0.00413669, 0.06238402, 0.12434659, 0.48408765],\n","         [0.02967001, 0.07062411, 0.1238882 , 0.49519407],\n","         [0.04959978, 0.06950185, 0.12570615, 0.50634747],\n","         [0.02748808, 0.07280763, 0.12612746, 0.50202554],\n","         [0.03419632, 0.06865922, 0.12978896, 0.52382016],\n","         [0.03910746, 0.06637397, 0.12608152, 0.49549057],\n","         [0.056981  , 0.06995831, 0.13022564, 0.46882523],\n","         [0.03066737, 0.07623272, 0.12892052, 0.47439374],\n","         [0.01791615, 0.07787269, 0.12412942, 0.47638484],\n","         [0.02759275, 0.0688009 , 0.12125623, 0.36487112],\n","         [0.03252732, 0.07154396, 0.12054698, 0.15948326],\n","         [0.07262361, 0.08510877, 0.11960576, 0.09072707],\n","         [0.04455362, 0.08087727, 0.11884586, 0.0635191 ],\n","         [0.04102573, 0.08325734, 0.11898551, 0.06325512],\n","         [0.04572115, 0.0728039 , 0.11957834, 0.05923874],\n","         [0.02493704, 0.06803658, 0.1262543 , 0.05347597],\n","         [0.03634123, 0.05834188, 0.12370691, 0.04551105],\n","         [0.06101808, 0.07980909, 0.12294127, 0.03833942],\n","         [0.07891027, 0.092584  , 0.12760794, 0.03655642]]),\n","  'yawn'),\n"," (array([[-0.12329345,  0.27280995,  0.10209982,  0.04964743],\n","         [-0.10613336,  0.2817763 ,  0.10089273,  0.17651689],\n","         [-0.15977901,  0.48207477,  0.09334472,  0.19143656],\n","         [-0.23730844,  0.54674727,  0.08772722,  0.26259467],\n","         [-0.2942817 ,  0.56348735,  0.09392713,  0.32190522],\n","         [-0.35897627,  0.502465  ,  0.09419971,  0.44609043],\n","         [-0.37718832,  0.5429493 ,  0.07791629,  0.57288216],\n","         [-0.19900659,  0.58975065,  0.07054733,  0.63809181],\n","         [-0.3008219 ,  0.5336171 ,  0.06274463,  0.69051667],\n","         [-0.28891838,  0.45939878,  0.04966852,  0.64543869],\n","         [-0.29917258,  0.4217185 ,  0.05124665,  0.61660181],\n","         [-0.36142668,  0.41254684,  0.05168699,  0.64447024],\n","         [-0.11991735,  0.32795763,  0.05432783,  0.64386065],\n","         [-0.18369713,  0.44368663,  0.0510427 ,  0.54122326],\n","         [-0.21048906,  0.31329855,  0.05049507,  0.31846908],\n","         [-0.7141953 ,  0.29170936,  0.04558689,  0.46821929],\n","         [-0.33470556,  0.22580785,  0.03637769,  0.2950762 ],\n","         [-0.2510112 ,  0.24271944,  0.04670447,  0.33756716],\n","         [-0.28617105,  0.3922631 ,  0.06248556,  0.38073932],\n","         [-0.24934272,  0.35271412,  0.06228231,  0.2345755 ],\n","         [-0.29583433,  0.20987469,  0.05827527,  0.5697765 ],\n","         [-0.26166198,  0.24347153,  0.05742386,  0.56909248],\n","         [-0.39216697,  0.21875578,  0.04853147,  0.62920083],\n","         [-0.32792968,  0.34997585,  0.05077621,  0.64350771]]),\n","  'yawn'),\n"," (array([[-0.12417974,  0.30172232,  0.10962218,  0.26263095],\n","         [-0.04331339,  0.24468778,  0.09908951,  0.25666521],\n","         [-0.03164981,  0.21878082,  0.10683229,  0.26628309],\n","         [-0.06309535,  0.19945532,  0.10492704,  0.29882141],\n","         [-0.03729997,  0.34513822,  0.10162714,  0.37926308],\n","         [-0.11122107,  0.3231975 ,  0.09751995,  0.42174939],\n","         [-0.2409804 ,  0.44156596,  0.08068043,  0.54696968],\n","         [-0.09071553,  0.42581606,  0.06292781,  0.56887962],\n","         [-0.20264474,  0.40618455,  0.0677237 ,  0.60231052],\n","         [-0.34370306,  0.48408788,  0.075223  ,  0.62663252],\n","         [-0.27078807,  0.4427391 ,  0.07001803,  0.68663643],\n","         [-0.23998545,  0.4212178 ,  0.06750669,  0.66124492],\n","         [-0.25976208,  0.44563898,  0.05974957,  0.68816985],\n","         [ 0.00774128,  0.4333107 ,  0.04601464,  0.61802391],\n","         [-0.0895685 ,  0.3534305 ,  0.03167027,  0.62790171],\n","         [-0.0733131 ,  0.30669257,  0.03422682,  0.48401098],\n","         [-0.10915073,  0.31707436,  0.05206186,  0.40201846],\n","         [-0.20850582,  0.19516097,  0.04908917,  0.37237261],\n","         [-0.17842141,  0.18757203,  0.05037914,  0.31295184],\n","         [-0.18585776,  0.28727254,  0.05030372,  0.32335066],\n","         [-0.19391541,  0.27831233,  0.06029733,  0.19854981],\n","         [ 0.03622432,  0.2573615 ,  0.05422516,  0.31510228],\n","         [-0.0608543 ,  0.27758235,  0.05852985,  0.28274479],\n","         [-0.18540183,  0.18008296,  0.04102147,  0.31759662]]),\n","  'yawn'),\n"," (array([[-6.51666000e-01,  4.87723350e-02,  1.41007947e-01,\n","           1.13328334e-01],\n","         [-4.01379940e-01,  4.43645380e-02,  1.39583052e-01,\n","           2.13274477e-01],\n","         [ 3.54147180e-02,  5.47918800e-02,  1.31598609e-01,\n","           2.00116515e-01],\n","         [ 5.81421330e-02,  1.00078930e-01,  1.41703125e-01,\n","           2.87018198e-01],\n","         [ 3.12964060e-02,  1.04505640e-01,  1.33151717e-01,\n","           3.73932777e-01],\n","         [ 4.36284400e-02,  5.72092270e-02,  1.38488596e-01,\n","           4.16665590e-01],\n","         [ 9.95196700e-03,  1.29944410e-01,  1.35202361e-01,\n","           3.88938185e-01],\n","         [-3.96741780e-02,  1.71468970e-01,  1.45117808e-01,\n","           3.79952060e-01],\n","         [-4.83671870e-01, -1.36630820e-02,  1.35211205e-01,\n","           4.57519061e-01],\n","         [-6.53244400e-01,  5.47282300e-02,  1.40020723e-01,\n","           2.92974911e-01],\n","         [-7.08981160e-01,  3.66536200e-02,  1.38942125e-01,\n","           3.85812892e-01],\n","         [-3.58607440e-01, -1.80208120e-02,  1.40787965e-01,\n","           3.44100006e-01],\n","         [ 2.24110070e-01,  8.99099100e-02,  1.44752618e-01,\n","           4.49388528e-01],\n","         [ 2.08155620e-01,  1.29190200e-01,  1.44016288e-01,\n","           2.76619035e-01],\n","         [ 1.88653540e-01,  1.09604000e-01,  1.50306414e-01,\n","           2.81685687e-01],\n","         [ 5.99658640e-02,  1.05727500e-01,  1.40512699e-01,\n","           3.27824466e-01],\n","         [ 2.78034020e-02,  8.57988000e-02,  1.35760774e-01,\n","           3.03935386e-01],\n","         [ 2.40723140e-02,  1.17609985e-01,  1.35829078e-01,\n","           3.53411150e-01],\n","         [ 2.94697420e-02,  8.54810850e-02,  1.34597678e-01,\n","           3.48717990e-01],\n","         [-5.19409660e-01, -3.20173240e-02,  1.42154050e-01,\n","           3.46328262e-01],\n","         [-5.55342100e-01, -6.08977040e-02,  1.42519476e-01,\n","           1.71878545e-01],\n","         [-5.66024240e-01, -2.54917800e-03,  1.55578991e-01,\n","           1.33602617e-01],\n","         [-5.69047500e-01,  3.36623580e-04,  1.44722602e-01,\n","           2.54286329e-01],\n","         [-5.69227500e-01, -5.00538460e-02,  1.40983667e-01,\n","           3.56896327e-01]]),\n","  'yawn'),\n"," (array([[-0.46406648,  0.049738  ,  0.11737106,  0.07659925],\n","         [-0.6152813 ,  0.03197445,  0.13162581,  0.19140406],\n","         [-0.61557585,  0.02455887,  0.13254242,  0.26259932],\n","         [-0.60635734, -0.00239898,  0.12595008,  0.19983911],\n","         [-0.58992803,  0.01061776,  0.12514644,  0.18452719],\n","         [-0.56516755,  0.03139681,  0.12546096,  0.21817984],\n","         [-0.16705664,  0.11277688,  0.10299161,  0.2504345 ],\n","         [ 0.1765809 ,  0.05100273,  0.12298801,  0.23305953],\n","         [ 0.12478294,  0.08398412,  0.13780679,  0.26487389],\n","         [ 0.10926737,  0.09514437,  0.13455337,  0.24139691],\n","         [ 0.16960156,  0.192856  ,  0.14122493,  0.28991946],\n","         [ 0.12897716,  0.19237264,  0.1379654 ,  0.31646194],\n","         [ 0.12404019,  0.12777448,  0.14089091,  0.37185661],\n","         [ 0.0593094 ,  0.2323784 ,  0.14131094,  0.45931015],\n","         [-0.08732799,  0.10733631,  0.13337279,  0.37030725],\n","         [-0.5728087 , -0.09439361,  0.13906494,  0.25618918],\n","         [-0.7305336 , -0.04472433,  0.11713946,  0.46138303],\n","         [-0.65181106, -0.04458851,  0.12849448,  0.56400621],\n","         [-0.6168324 , -0.02005254,  0.10931329,  0.53215806],\n","         [-0.6312811 , -0.01293764,  0.10852563,  0.45005504],\n","         [-0.6373224 , -0.01937583,  0.1315362 ,  0.39948075],\n","         [-0.6227382 , -0.02426326,  0.13919649,  0.40115976],\n","         [-0.63778824, -0.00190789,  0.13464793,  0.34453061],\n","         [-0.60752594, -0.04438717,  0.13509488,  0.35006755]]),\n","  'yawn')]"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["group"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":426},"id":"RiWbJ4eukVkk","executionInfo":{"status":"ok","timestamp":1742038202591,"user_tz":-540,"elapsed":53,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"35421818-092a-4f15-f101-35d660a8c107"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       label                             video_name            frame  \\\n","100752  yawn  dash11-FemaleGlasses.avi-clip-0_part1  frame000000.jpg   \n","100753  yawn  dash11-FemaleGlasses.avi-clip-0_part1  frame000001.jpg   \n","100754  yawn  dash11-FemaleGlasses.avi-clip-0_part1  frame000002.jpg   \n","100755  yawn  dash11-FemaleGlasses.avi-clip-0_part1  frame000003.jpg   \n","100756  yawn  dash11-FemaleGlasses.avi-clip-0_part1  frame000004.jpg   \n","100757  yawn  dash11-FemaleGlasses.avi-clip-0_part1  frame000005.jpg   \n","100758  yawn  dash11-FemaleGlasses.avi-clip-0_part1  frame000006.jpg   \n","100759  yawn  dash11-FemaleGlasses.avi-clip-0_part1  frame000007.jpg   \n","100760  yawn  dash11-FemaleGlasses.avi-clip-0_part1  frame000008.jpg   \n","100761  yawn  dash11-FemaleGlasses.avi-clip-0_part1  frame000009.jpg   \n","100762  yawn  dash11-FemaleGlasses.avi-clip-0_part1  frame000010.jpg   \n","100763  yawn  dash11-FemaleGlasses.avi-clip-0_part1  frame000011.jpg   \n","\n","           pitch       yaw   avg_EAR       MAR part  \\\n","100752 -0.414229  0.458344  0.083193  0.281397    1   \n","100753 -0.589805  0.288127  0.075220  0.240167    1   \n","100754 -0.704458  0.007384  0.098824  0.093542    1   \n","100755 -0.713450 -0.037629  0.094461  0.274826    1   \n","100756 -0.473308  0.199544  0.097388  0.574758    1   \n","100757 -0.650152  0.132989  0.103213  0.531745    1   \n","100758 -0.684206  0.138696  0.090529  0.513216    1   \n","100759 -0.725110  0.087165  0.104358  0.469601    1   \n","100760 -0.695521  0.063659  0.102815  0.419084    1   \n","100761 -0.227653  0.073625  0.102726  0.421700    1   \n","100762 -0.219590  0.066527  0.108588  0.308604    1   \n","100763  0.257335  0.084346  0.112308  0.367750    1   \n","\n","                             video_clip  \n","100752  dash11-FemaleGlasses.avi-clip-0  \n","100753  dash11-FemaleGlasses.avi-clip-0  \n","100754  dash11-FemaleGlasses.avi-clip-0  \n","100755  dash11-FemaleGlasses.avi-clip-0  \n","100756  dash11-FemaleGlasses.avi-clip-0  \n","100757  dash11-FemaleGlasses.avi-clip-0  \n","100758  dash11-FemaleGlasses.avi-clip-0  \n","100759  dash11-FemaleGlasses.avi-clip-0  \n","100760  dash11-FemaleGlasses.avi-clip-0  \n","100761  dash11-FemaleGlasses.avi-clip-0  \n","100762  dash11-FemaleGlasses.avi-clip-0  \n","100763  dash11-FemaleGlasses.avi-clip-0  "],"text/html":["\n","  <div id=\"df-3535019f-cacd-42bc-ace8-d8dfd50aa741\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>video_name</th>\n","      <th>frame</th>\n","      <th>pitch</th>\n","      <th>yaw</th>\n","      <th>avg_EAR</th>\n","      <th>MAR</th>\n","      <th>part</th>\n","      <th>video_clip</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>100752</th>\n","      <td>yawn</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0_part1</td>\n","      <td>frame000000.jpg</td>\n","      <td>-0.414229</td>\n","      <td>0.458344</td>\n","      <td>0.083193</td>\n","      <td>0.281397</td>\n","      <td>1</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100753</th>\n","      <td>yawn</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0_part1</td>\n","      <td>frame000001.jpg</td>\n","      <td>-0.589805</td>\n","      <td>0.288127</td>\n","      <td>0.075220</td>\n","      <td>0.240167</td>\n","      <td>1</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100754</th>\n","      <td>yawn</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0_part1</td>\n","      <td>frame000002.jpg</td>\n","      <td>-0.704458</td>\n","      <td>0.007384</td>\n","      <td>0.098824</td>\n","      <td>0.093542</td>\n","      <td>1</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100755</th>\n","      <td>yawn</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0_part1</td>\n","      <td>frame000003.jpg</td>\n","      <td>-0.713450</td>\n","      <td>-0.037629</td>\n","      <td>0.094461</td>\n","      <td>0.274826</td>\n","      <td>1</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100756</th>\n","      <td>yawn</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0_part1</td>\n","      <td>frame000004.jpg</td>\n","      <td>-0.473308</td>\n","      <td>0.199544</td>\n","      <td>0.097388</td>\n","      <td>0.574758</td>\n","      <td>1</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100757</th>\n","      <td>yawn</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0_part1</td>\n","      <td>frame000005.jpg</td>\n","      <td>-0.650152</td>\n","      <td>0.132989</td>\n","      <td>0.103213</td>\n","      <td>0.531745</td>\n","      <td>1</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100758</th>\n","      <td>yawn</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0_part1</td>\n","      <td>frame000006.jpg</td>\n","      <td>-0.684206</td>\n","      <td>0.138696</td>\n","      <td>0.090529</td>\n","      <td>0.513216</td>\n","      <td>1</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100759</th>\n","      <td>yawn</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0_part1</td>\n","      <td>frame000007.jpg</td>\n","      <td>-0.725110</td>\n","      <td>0.087165</td>\n","      <td>0.104358</td>\n","      <td>0.469601</td>\n","      <td>1</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100760</th>\n","      <td>yawn</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0_part1</td>\n","      <td>frame000008.jpg</td>\n","      <td>-0.695521</td>\n","      <td>0.063659</td>\n","      <td>0.102815</td>\n","      <td>0.419084</td>\n","      <td>1</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100761</th>\n","      <td>yawn</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0_part1</td>\n","      <td>frame000009.jpg</td>\n","      <td>-0.227653</td>\n","      <td>0.073625</td>\n","      <td>0.102726</td>\n","      <td>0.421700</td>\n","      <td>1</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100762</th>\n","      <td>yawn</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0_part1</td>\n","      <td>frame000010.jpg</td>\n","      <td>-0.219590</td>\n","      <td>0.066527</td>\n","      <td>0.108588</td>\n","      <td>0.308604</td>\n","      <td>1</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100763</th>\n","      <td>yawn</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0_part1</td>\n","      <td>frame000011.jpg</td>\n","      <td>0.257335</td>\n","      <td>0.084346</td>\n","      <td>0.112308</td>\n","      <td>0.367750</td>\n","      <td>1</td>\n","      <td>dash11-FemaleGlasses.avi-clip-0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3535019f-cacd-42bc-ace8-d8dfd50aa741')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3535019f-cacd-42bc-ace8-d8dfd50aa741 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3535019f-cacd-42bc-ace8-d8dfd50aa741');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-09e22810-8c8a-4621-ac1b-01f5433b45e3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-09e22810-8c8a-4621-ac1b-01f5433b45e3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-09e22810-8c8a-4621-ac1b-01f5433b45e3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_10e6d65a-1f0e-4f10-8e8e-d70f81c8b23c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('group')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_10e6d65a-1f0e-4f10-8e8e-d70f81c8b23c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('group');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"group","summary":"{\n  \"name\": \"group\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"yawn\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"video_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"dash11-FemaleGlasses.avi-clip-0_part1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"frame\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"frame000010.jpg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pitch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.29742949984751554,\n        \"min\": -0.72510976,\n        \"max\": 0.2573346,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          -0.21959014\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"yaw\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.13361947643471642,\n        \"min\": -0.03762887,\n        \"max\": 0.45834413,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          0.06652736\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"avg_EAR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.010604595179032273,\n        \"min\": 0.0752203700936287,\n        \"max\": 0.1123084684020783,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          0.1085880797891426\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.14055212263595307,\n        \"min\": 0.0935419528578718,\n        \"max\": 0.5747575090074832,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          0.3086043507485652\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"part\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"video_clip\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"dash11-FemaleGlasses.avi-clip-0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["features"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c0mqrm2ekS1n","executionInfo":{"status":"ok","timestamp":1742038186726,"user_tz":-540,"elapsed":17,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"f678e175-0d34-411d-a216-9721f0c8bebe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([], shape=(0, 4), dtype=float64)"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["labels"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8HZ-o5N1ipwf","executionInfo":{"status":"ok","timestamp":1742037880275,"user_tz":-540,"elapsed":11,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"f08ed168-aa0e-4732-d0bb-2a95cd14fdc0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([['yawn', 'yawn', 'yawn', 'yawn', 'yawn', 'yawn', 'yawn', 'yawn',\n","        'yawn', 'yawn', 'yawn', 'yawn', 'yawn', 'yawn', 'yawn', 'yawn',\n","        'yawn', 'yawn', 'yawn', 'yawn', 'yawn', 'yawn', 'yawn', 'yawn'],\n","       ['yawn', 'yawn', 'yawn', 'yawn', 'yawn', 'yawn', 'yawn', 'yawn',\n","        'yawn', 'yawn', 'yawn', 'yawn', 'yawn', 'yawn', 'yawn', 'yawn',\n","        'yawn', 'yawn', 'yawn', 'yawn', 'yawn', 'yawn', 'yawn', 'yawn']],\n","      dtype=object)"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["group"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"D5oh5m5zjIz2","executionInfo":{"status":"ok","timestamp":1742037950594,"user_tz":-540,"elapsed":73,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"83e126fb-8634-479c-a3f6-ccc184d9a243"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       label                          video_name            frame     pitch  \\\n","100536  yawn  dash1-FemaleNoGlasses-clip-0_part1  frame000000.jpg  0.134823   \n","100537  yawn  dash1-FemaleNoGlasses-clip-0_part1  frame000001.jpg  0.054779   \n","100538  yawn  dash1-FemaleNoGlasses-clip-0_part1  frame000002.jpg  0.109565   \n","100539  yawn  dash1-FemaleNoGlasses-clip-0_part1  frame000003.jpg  0.070472   \n","100540  yawn  dash1-FemaleNoGlasses-clip-0_part1  frame000004.jpg -0.076845   \n","100541  yawn  dash1-FemaleNoGlasses-clip-0_part1  frame000005.jpg  0.070156   \n","100542  yawn  dash1-FemaleNoGlasses-clip-0_part1  frame000006.jpg  0.094667   \n","100543  yawn  dash1-FemaleNoGlasses-clip-0_part1  frame000007.jpg  0.070258   \n","100544  yawn  dash1-FemaleNoGlasses-clip-0_part1  frame000008.jpg  0.051623   \n","100545  yawn  dash1-FemaleNoGlasses-clip-0_part1  frame000009.jpg  0.068283   \n","100546  yawn  dash1-FemaleNoGlasses-clip-0_part1  frame000010.jpg  0.047540   \n","100547  yawn  dash1-FemaleNoGlasses-clip-0_part1  frame000011.jpg  0.033467   \n","100548  yawn  dash1-FemaleNoGlasses-clip-0_part2  frame000012.jpg  0.125895   \n","100549  yawn  dash1-FemaleNoGlasses-clip-0_part2  frame000013.jpg  0.122625   \n","100550  yawn  dash1-FemaleNoGlasses-clip-0_part2  frame000014.jpg  0.090376   \n","100551  yawn  dash1-FemaleNoGlasses-clip-0_part2  frame000015.jpg  0.159210   \n","100552  yawn  dash1-FemaleNoGlasses-clip-0_part2  frame000016.jpg  0.109687   \n","100553  yawn  dash1-FemaleNoGlasses-clip-0_part2  frame000017.jpg  0.022642   \n","100554  yawn  dash1-FemaleNoGlasses-clip-0_part2  frame000018.jpg  0.076166   \n","100555  yawn  dash1-FemaleNoGlasses-clip-0_part2  frame000019.jpg  0.028742   \n","100556  yawn  dash1-FemaleNoGlasses-clip-0_part2  frame000020.jpg  0.073192   \n","100557  yawn  dash1-FemaleNoGlasses-clip-0_part2  frame000021.jpg  0.085364   \n","100558  yawn  dash1-FemaleNoGlasses-clip-0_part2  frame000022.jpg  0.029147   \n","100559  yawn  dash1-FemaleNoGlasses-clip-0_part2  frame000023.jpg  0.057182   \n","100560  yawn  dash1-FemaleNoGlasses-clip-0_part3  frame000024.jpg  0.088216   \n","100561  yawn  dash1-FemaleNoGlasses-clip-0_part3  frame000025.jpg  0.012616   \n","100562  yawn  dash1-FemaleNoGlasses-clip-0_part3  frame000026.jpg  0.021399   \n","100563  yawn  dash1-FemaleNoGlasses-clip-0_part3  frame000027.jpg  0.028876   \n","100564  yawn  dash1-FemaleNoGlasses-clip-0_part3  frame000028.jpg -0.020379   \n","100565  yawn  dash1-FemaleNoGlasses-clip-0_part3  frame000029.jpg  0.056594   \n","100566  yawn  dash1-FemaleNoGlasses-clip-0_part3  frame000030.jpg  0.035849   \n","100567  yawn  dash1-FemaleNoGlasses-clip-0_part3  frame000031.jpg  0.058639   \n","100568  yawn  dash1-FemaleNoGlasses-clip-0_part3  frame000032.jpg  0.167112   \n","100569  yawn  dash1-FemaleNoGlasses-clip-0_part3  frame000033.jpg  0.072373   \n","100570  yawn  dash1-FemaleNoGlasses-clip-0_part3  frame000034.jpg  0.060895   \n","100571  yawn  dash1-FemaleNoGlasses-clip-0_part3  frame000035.jpg  0.057971   \n","100572  yawn  dash1-FemaleNoGlasses-clip-0_part4  frame000036.jpg -0.006393   \n","100573  yawn  dash1-FemaleNoGlasses-clip-0_part4  frame000037.jpg -0.013797   \n","100574  yawn  dash1-FemaleNoGlasses-clip-0_part4  frame000038.jpg  0.096164   \n","100575  yawn  dash1-FemaleNoGlasses-clip-0_part4  frame000039.jpg  0.072634   \n","100576  yawn  dash1-FemaleNoGlasses-clip-0_part4  frame000040.jpg  0.079504   \n","100577  yawn  dash1-FemaleNoGlasses-clip-0_part4  frame000041.jpg  0.117223   \n","100578  yawn  dash1-FemaleNoGlasses-clip-0_part4  frame000042.jpg  0.119784   \n","100579  yawn  dash1-FemaleNoGlasses-clip-0_part4  frame000043.jpg  0.145414   \n","100580  yawn  dash1-FemaleNoGlasses-clip-0_part4  frame000044.jpg  0.207164   \n","100581  yawn  dash1-FemaleNoGlasses-clip-0_part4  frame000045.jpg  0.174667   \n","100582  yawn  dash1-FemaleNoGlasses-clip-0_part4  frame000046.jpg  0.174256   \n","100583  yawn  dash1-FemaleNoGlasses-clip-0_part4  frame000047.jpg  0.114514   \n","\n","             yaw   avg_EAR       MAR part                    video_clip  \n","100536 -0.052425  0.082428  0.154932    1  dash1-FemaleNoGlasses-clip-0  \n","100537  0.055042  0.110309  0.177095    1  dash1-FemaleNoGlasses-clip-0  \n","100538  0.074533  0.121624  0.094630    1  dash1-FemaleNoGlasses-clip-0  \n","100539  0.077358  0.127058  0.095005    1  dash1-FemaleNoGlasses-clip-0  \n","100540 -0.686779  0.073660  0.112214    1  dash1-FemaleNoGlasses-clip-0  \n","100541  0.047023  0.103866  0.132576    1  dash1-FemaleNoGlasses-clip-0  \n","100542  0.075790  0.120219  0.168983    1  dash1-FemaleNoGlasses-clip-0  \n","100543  0.074539  0.116315  0.321637    1  dash1-FemaleNoGlasses-clip-0  \n","100544  0.067975  0.116847  0.274347    1  dash1-FemaleNoGlasses-clip-0  \n","100545  0.085536  0.125931  0.414616    1  dash1-FemaleNoGlasses-clip-0  \n","100546  0.084691  0.127075  0.436047    1  dash1-FemaleNoGlasses-clip-0  \n","100547  0.075675  0.135683  0.403785    1  dash1-FemaleNoGlasses-clip-0  \n","100548  0.038845  0.132862  0.420984    2  dash1-FemaleNoGlasses-clip-0  \n","100549  0.004091  0.136925  0.377873    2  dash1-FemaleNoGlasses-clip-0  \n","100550  0.065693  0.124260  0.306252    2  dash1-FemaleNoGlasses-clip-0  \n","100551  0.059480  0.126764  0.428437    2  dash1-FemaleNoGlasses-clip-0  \n","100552  0.151441  0.128984  0.460847    2  dash1-FemaleNoGlasses-clip-0  \n","100553  0.063247  0.122150  0.513957    2  dash1-FemaleNoGlasses-clip-0  \n","100554  0.051422  0.128861  0.519844    2  dash1-FemaleNoGlasses-clip-0  \n","100555  0.062717  0.124526  0.495853    2  dash1-FemaleNoGlasses-clip-0  \n","100556  0.059016  0.126893  0.496448    2  dash1-FemaleNoGlasses-clip-0  \n","100557  0.015134  0.123190  0.472586    2  dash1-FemaleNoGlasses-clip-0  \n","100558  0.014179  0.121594  0.401355    2  dash1-FemaleNoGlasses-clip-0  \n","100559  0.019302  0.117289  0.335646    2  dash1-FemaleNoGlasses-clip-0  \n","100560  0.035703  0.112223  0.367625    3  dash1-FemaleNoGlasses-clip-0  \n","100561 -0.006594  0.114876  0.315151    3  dash1-FemaleNoGlasses-clip-0  \n","100562  0.027316  0.113332  0.383067    3  dash1-FemaleNoGlasses-clip-0  \n","100563  0.036256  0.111076  0.398567    3  dash1-FemaleNoGlasses-clip-0  \n","100564  0.056448  0.115795  0.459075    3  dash1-FemaleNoGlasses-clip-0  \n","100565  0.037492  0.116239  0.391374    3  dash1-FemaleNoGlasses-clip-0  \n","100566  0.021388  0.121349  0.437521    3  dash1-FemaleNoGlasses-clip-0  \n","100567  0.066655  0.120463  0.414877    3  dash1-FemaleNoGlasses-clip-0  \n","100568  0.069388  0.117670  0.357662    3  dash1-FemaleNoGlasses-clip-0  \n","100569  0.078432  0.113718  0.380916    3  dash1-FemaleNoGlasses-clip-0  \n","100570  0.056102  0.124375  0.361401    3  dash1-FemaleNoGlasses-clip-0  \n","100571  0.062644  0.119231  0.348454    3  dash1-FemaleNoGlasses-clip-0  \n","100572  0.076864  0.114600  0.250457    4  dash1-FemaleNoGlasses-clip-0  \n","100573  0.062928  0.115493  0.266036    4  dash1-FemaleNoGlasses-clip-0  \n","100574  0.056476  0.119286  0.284184    4  dash1-FemaleNoGlasses-clip-0  \n","100575  0.052351  0.122495  0.262527    4  dash1-FemaleNoGlasses-clip-0  \n","100576  0.068152  0.121457  0.245192    4  dash1-FemaleNoGlasses-clip-0  \n","100577  0.077264  0.121639  0.240339    4  dash1-FemaleNoGlasses-clip-0  \n","100578  0.067483  0.122236  0.240228    4  dash1-FemaleNoGlasses-clip-0  \n","100579  0.260309  0.117704  0.221359    4  dash1-FemaleNoGlasses-clip-0  \n","100580  0.194046  0.131115  0.220620    4  dash1-FemaleNoGlasses-clip-0  \n","100581  0.229569  0.130615  0.164906    4  dash1-FemaleNoGlasses-clip-0  \n","100582  0.137131  0.121637  0.204555    4  dash1-FemaleNoGlasses-clip-0  \n","100583  0.076950  0.116261  0.225040    4  dash1-FemaleNoGlasses-clip-0  "],"text/html":["\n","  <div id=\"df-c7ace449-3965-4668-a148-4a2c6500f65f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>video_name</th>\n","      <th>frame</th>\n","      <th>pitch</th>\n","      <th>yaw</th>\n","      <th>avg_EAR</th>\n","      <th>MAR</th>\n","      <th>part</th>\n","      <th>video_clip</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>100536</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part1</td>\n","      <td>frame000000.jpg</td>\n","      <td>0.134823</td>\n","      <td>-0.052425</td>\n","      <td>0.082428</td>\n","      <td>0.154932</td>\n","      <td>1</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100537</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part1</td>\n","      <td>frame000001.jpg</td>\n","      <td>0.054779</td>\n","      <td>0.055042</td>\n","      <td>0.110309</td>\n","      <td>0.177095</td>\n","      <td>1</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100538</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part1</td>\n","      <td>frame000002.jpg</td>\n","      <td>0.109565</td>\n","      <td>0.074533</td>\n","      <td>0.121624</td>\n","      <td>0.094630</td>\n","      <td>1</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100539</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part1</td>\n","      <td>frame000003.jpg</td>\n","      <td>0.070472</td>\n","      <td>0.077358</td>\n","      <td>0.127058</td>\n","      <td>0.095005</td>\n","      <td>1</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100540</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part1</td>\n","      <td>frame000004.jpg</td>\n","      <td>-0.076845</td>\n","      <td>-0.686779</td>\n","      <td>0.073660</td>\n","      <td>0.112214</td>\n","      <td>1</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100541</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part1</td>\n","      <td>frame000005.jpg</td>\n","      <td>0.070156</td>\n","      <td>0.047023</td>\n","      <td>0.103866</td>\n","      <td>0.132576</td>\n","      <td>1</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100542</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part1</td>\n","      <td>frame000006.jpg</td>\n","      <td>0.094667</td>\n","      <td>0.075790</td>\n","      <td>0.120219</td>\n","      <td>0.168983</td>\n","      <td>1</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100543</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part1</td>\n","      <td>frame000007.jpg</td>\n","      <td>0.070258</td>\n","      <td>0.074539</td>\n","      <td>0.116315</td>\n","      <td>0.321637</td>\n","      <td>1</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100544</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part1</td>\n","      <td>frame000008.jpg</td>\n","      <td>0.051623</td>\n","      <td>0.067975</td>\n","      <td>0.116847</td>\n","      <td>0.274347</td>\n","      <td>1</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100545</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part1</td>\n","      <td>frame000009.jpg</td>\n","      <td>0.068283</td>\n","      <td>0.085536</td>\n","      <td>0.125931</td>\n","      <td>0.414616</td>\n","      <td>1</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100546</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part1</td>\n","      <td>frame000010.jpg</td>\n","      <td>0.047540</td>\n","      <td>0.084691</td>\n","      <td>0.127075</td>\n","      <td>0.436047</td>\n","      <td>1</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100547</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part1</td>\n","      <td>frame000011.jpg</td>\n","      <td>0.033467</td>\n","      <td>0.075675</td>\n","      <td>0.135683</td>\n","      <td>0.403785</td>\n","      <td>1</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100548</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part2</td>\n","      <td>frame000012.jpg</td>\n","      <td>0.125895</td>\n","      <td>0.038845</td>\n","      <td>0.132862</td>\n","      <td>0.420984</td>\n","      <td>2</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100549</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part2</td>\n","      <td>frame000013.jpg</td>\n","      <td>0.122625</td>\n","      <td>0.004091</td>\n","      <td>0.136925</td>\n","      <td>0.377873</td>\n","      <td>2</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100550</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part2</td>\n","      <td>frame000014.jpg</td>\n","      <td>0.090376</td>\n","      <td>0.065693</td>\n","      <td>0.124260</td>\n","      <td>0.306252</td>\n","      <td>2</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100551</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part2</td>\n","      <td>frame000015.jpg</td>\n","      <td>0.159210</td>\n","      <td>0.059480</td>\n","      <td>0.126764</td>\n","      <td>0.428437</td>\n","      <td>2</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100552</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part2</td>\n","      <td>frame000016.jpg</td>\n","      <td>0.109687</td>\n","      <td>0.151441</td>\n","      <td>0.128984</td>\n","      <td>0.460847</td>\n","      <td>2</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100553</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part2</td>\n","      <td>frame000017.jpg</td>\n","      <td>0.022642</td>\n","      <td>0.063247</td>\n","      <td>0.122150</td>\n","      <td>0.513957</td>\n","      <td>2</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100554</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part2</td>\n","      <td>frame000018.jpg</td>\n","      <td>0.076166</td>\n","      <td>0.051422</td>\n","      <td>0.128861</td>\n","      <td>0.519844</td>\n","      <td>2</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100555</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part2</td>\n","      <td>frame000019.jpg</td>\n","      <td>0.028742</td>\n","      <td>0.062717</td>\n","      <td>0.124526</td>\n","      <td>0.495853</td>\n","      <td>2</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100556</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part2</td>\n","      <td>frame000020.jpg</td>\n","      <td>0.073192</td>\n","      <td>0.059016</td>\n","      <td>0.126893</td>\n","      <td>0.496448</td>\n","      <td>2</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100557</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part2</td>\n","      <td>frame000021.jpg</td>\n","      <td>0.085364</td>\n","      <td>0.015134</td>\n","      <td>0.123190</td>\n","      <td>0.472586</td>\n","      <td>2</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100558</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part2</td>\n","      <td>frame000022.jpg</td>\n","      <td>0.029147</td>\n","      <td>0.014179</td>\n","      <td>0.121594</td>\n","      <td>0.401355</td>\n","      <td>2</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100559</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part2</td>\n","      <td>frame000023.jpg</td>\n","      <td>0.057182</td>\n","      <td>0.019302</td>\n","      <td>0.117289</td>\n","      <td>0.335646</td>\n","      <td>2</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100560</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part3</td>\n","      <td>frame000024.jpg</td>\n","      <td>0.088216</td>\n","      <td>0.035703</td>\n","      <td>0.112223</td>\n","      <td>0.367625</td>\n","      <td>3</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100561</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part3</td>\n","      <td>frame000025.jpg</td>\n","      <td>0.012616</td>\n","      <td>-0.006594</td>\n","      <td>0.114876</td>\n","      <td>0.315151</td>\n","      <td>3</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100562</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part3</td>\n","      <td>frame000026.jpg</td>\n","      <td>0.021399</td>\n","      <td>0.027316</td>\n","      <td>0.113332</td>\n","      <td>0.383067</td>\n","      <td>3</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100563</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part3</td>\n","      <td>frame000027.jpg</td>\n","      <td>0.028876</td>\n","      <td>0.036256</td>\n","      <td>0.111076</td>\n","      <td>0.398567</td>\n","      <td>3</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100564</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part3</td>\n","      <td>frame000028.jpg</td>\n","      <td>-0.020379</td>\n","      <td>0.056448</td>\n","      <td>0.115795</td>\n","      <td>0.459075</td>\n","      <td>3</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100565</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part3</td>\n","      <td>frame000029.jpg</td>\n","      <td>0.056594</td>\n","      <td>0.037492</td>\n","      <td>0.116239</td>\n","      <td>0.391374</td>\n","      <td>3</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100566</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part3</td>\n","      <td>frame000030.jpg</td>\n","      <td>0.035849</td>\n","      <td>0.021388</td>\n","      <td>0.121349</td>\n","      <td>0.437521</td>\n","      <td>3</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100567</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part3</td>\n","      <td>frame000031.jpg</td>\n","      <td>0.058639</td>\n","      <td>0.066655</td>\n","      <td>0.120463</td>\n","      <td>0.414877</td>\n","      <td>3</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100568</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part3</td>\n","      <td>frame000032.jpg</td>\n","      <td>0.167112</td>\n","      <td>0.069388</td>\n","      <td>0.117670</td>\n","      <td>0.357662</td>\n","      <td>3</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100569</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part3</td>\n","      <td>frame000033.jpg</td>\n","      <td>0.072373</td>\n","      <td>0.078432</td>\n","      <td>0.113718</td>\n","      <td>0.380916</td>\n","      <td>3</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100570</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part3</td>\n","      <td>frame000034.jpg</td>\n","      <td>0.060895</td>\n","      <td>0.056102</td>\n","      <td>0.124375</td>\n","      <td>0.361401</td>\n","      <td>3</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100571</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part3</td>\n","      <td>frame000035.jpg</td>\n","      <td>0.057971</td>\n","      <td>0.062644</td>\n","      <td>0.119231</td>\n","      <td>0.348454</td>\n","      <td>3</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100572</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part4</td>\n","      <td>frame000036.jpg</td>\n","      <td>-0.006393</td>\n","      <td>0.076864</td>\n","      <td>0.114600</td>\n","      <td>0.250457</td>\n","      <td>4</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100573</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part4</td>\n","      <td>frame000037.jpg</td>\n","      <td>-0.013797</td>\n","      <td>0.062928</td>\n","      <td>0.115493</td>\n","      <td>0.266036</td>\n","      <td>4</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100574</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part4</td>\n","      <td>frame000038.jpg</td>\n","      <td>0.096164</td>\n","      <td>0.056476</td>\n","      <td>0.119286</td>\n","      <td>0.284184</td>\n","      <td>4</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100575</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part4</td>\n","      <td>frame000039.jpg</td>\n","      <td>0.072634</td>\n","      <td>0.052351</td>\n","      <td>0.122495</td>\n","      <td>0.262527</td>\n","      <td>4</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100576</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part4</td>\n","      <td>frame000040.jpg</td>\n","      <td>0.079504</td>\n","      <td>0.068152</td>\n","      <td>0.121457</td>\n","      <td>0.245192</td>\n","      <td>4</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100577</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part4</td>\n","      <td>frame000041.jpg</td>\n","      <td>0.117223</td>\n","      <td>0.077264</td>\n","      <td>0.121639</td>\n","      <td>0.240339</td>\n","      <td>4</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100578</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part4</td>\n","      <td>frame000042.jpg</td>\n","      <td>0.119784</td>\n","      <td>0.067483</td>\n","      <td>0.122236</td>\n","      <td>0.240228</td>\n","      <td>4</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100579</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part4</td>\n","      <td>frame000043.jpg</td>\n","      <td>0.145414</td>\n","      <td>0.260309</td>\n","      <td>0.117704</td>\n","      <td>0.221359</td>\n","      <td>4</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100580</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part4</td>\n","      <td>frame000044.jpg</td>\n","      <td>0.207164</td>\n","      <td>0.194046</td>\n","      <td>0.131115</td>\n","      <td>0.220620</td>\n","      <td>4</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100581</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part4</td>\n","      <td>frame000045.jpg</td>\n","      <td>0.174667</td>\n","      <td>0.229569</td>\n","      <td>0.130615</td>\n","      <td>0.164906</td>\n","      <td>4</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100582</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part4</td>\n","      <td>frame000046.jpg</td>\n","      <td>0.174256</td>\n","      <td>0.137131</td>\n","      <td>0.121637</td>\n","      <td>0.204555</td>\n","      <td>4</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","    <tr>\n","      <th>100583</th>\n","      <td>yawn</td>\n","      <td>dash1-FemaleNoGlasses-clip-0_part4</td>\n","      <td>frame000047.jpg</td>\n","      <td>0.114514</td>\n","      <td>0.076950</td>\n","      <td>0.116261</td>\n","      <td>0.225040</td>\n","      <td>4</td>\n","      <td>dash1-FemaleNoGlasses-clip-0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c7ace449-3965-4668-a148-4a2c6500f65f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c7ace449-3965-4668-a148-4a2c6500f65f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c7ace449-3965-4668-a148-4a2c6500f65f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-edffab12-ba9c-46a3-96f7-b363982ace24\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-edffab12-ba9c-46a3-96f7-b363982ace24')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-edffab12-ba9c-46a3-96f7-b363982ace24 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_75549736-995f-4b39-8ff4-ad6d1b6db90a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('group')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_75549736-995f-4b39-8ff4-ad6d1b6db90a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('group');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"group","summary":"{\n  \"name\": \"group\",\n  \"rows\": 48,\n  \"fields\": [\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"yawn\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"video_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"dash1-FemaleNoGlasses-clip-0_part2\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"frame\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 48,\n        \"samples\": [\n          \"frame000027.jpg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pitch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.05542373699422652,\n        \"min\": -0.07684498,\n        \"max\": 0.20716357,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          0.028875591\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"yaw\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1212216604298921,\n        \"min\": -0.68677896,\n        \"max\": 0.2603091,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          0.036255743\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"avg_EAR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.011015642603155143,\n        \"min\": 0.0736596996506823,\n        \"max\": 0.1369252259305419,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          0.111075699155721\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11855554942586136,\n        \"min\": 0.0946298111690681,\n        \"max\": 0.5198436929353886,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          0.3985668756596005\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"part\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"2\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"video_clip\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"dash1-FemaleNoGlasses-clip-0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":[],"metadata":{"id":"QwIJqh2ajW_t"},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"GPU","colab":{"gpuType":"T4","provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}