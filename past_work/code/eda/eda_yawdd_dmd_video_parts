{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive/')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4YYIE8qgUdlL","executionInfo":{"status":"ok","timestamp":1741148268965,"user_tz":-540,"elapsed":1498,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"fc2c6a6d-02a9-4d71-90d9-72c09a1c3f08"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive/; to attempt to forcibly remount, call drive.mount(\"/content/drive/\", force_remount=True).\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import os"],"metadata":{"id":"VQeKeHfhjgzA","executionInfo":{"status":"ok","timestamp":1741150699848,"user_tz":-540,"elapsed":16,"user":{"displayName":"somin shim","userId":"00972152430439357273"}}},"execution_count":71,"outputs":[]},{"cell_type":"markdown","source":["# YawDD 데이터 통계"],"metadata":{"id":"bI1vHefkQsl0"}},{"cell_type":"code","execution_count":54,"metadata":{"id":"p9Wzua2KQDPt","executionInfo":{"status":"ok","timestamp":1741150303261,"user_tz":-540,"elapsed":2,"user":{"displayName":"somin shim","userId":"00972152430439357273"}}},"outputs":[],"source":["yawdd_frames_path = '/content/drive/MyDrive/DMS/data/YawDD dataset/yawDD_frames_12x'"]},{"cell_type":"code","source":["def yawdd_scan_path(yawdd_frames_path, categories):\n","    labels = []\n","    camera_locations = []\n","    file_names = []\n","    part_num = []\n","\n","    # categories = os.listdir(yawdd_frames_path)\n","    for category in categories:\n","        category_path = os.path.join(yawdd_frames_path, category)\n","        clipped_folders = os.listdir(category_path)\n","        for folder_name in clipped_folders:\n","            splited = folder_name.split('_')\n","            part_num.append(splited[1][4:])\n","\n","            splited = splited[0].split('-')\n","            folder_name = splited[0] # dash1 or mirror47\n","            if folder_name[0] == 'd':\n","                camera_location = folder_name[:4] # dash\n","                person_id = folder_name[4:] # 1\n","            else:\n","                camera_location = folder_name[:6]\n","                person_id = folder_name[6:]\n","\n","            camera_locations.append(camera_location)\n","            file_name = person_id + '-' + '-'.join(splited[1:-2])\n","            file_names.append(file_name)\n","            labels.append(category)\n","\n","    df = pd.DataFrame({\n","        'label': labels,\n","        'camera_location': camera_locations,\n","        'file_name': file_names,\n","        'part_num': part_num\n","    })\n","\n","    return df"],"metadata":{"id":"Fjx5fNfiXdBQ","executionInfo":{"status":"ok","timestamp":1741150303643,"user_tz":-540,"elapsed":3,"user":{"displayName":"somin shim","userId":"00972152430439357273"}}},"execution_count":55,"outputs":[]},{"cell_type":"code","source":["yawDD_df = yawdd_scan_path(yawdd_frames_path, categories=os.listdir(yawdd_frames_path))"],"metadata":{"id":"FePUFh71aHQc","executionInfo":{"status":"ok","timestamp":1741150305364,"user_tz":-540,"elapsed":21,"user":{"displayName":"somin shim","userId":"00972152430439357273"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":["yawDD_df.groupby(\"label\").count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"jdmQBy__evR9","executionInfo":{"status":"ok","timestamp":1741150305823,"user_tz":-540,"elapsed":20,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"a4ba85c9-bdf3-421d-f942-ece61f7f3aa4"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         camera_location  file_name  part_num\n","label                                        \n","Normal               386        386       386\n","Yawning              346        346       346"],"text/html":["\n","  <div id=\"df-c277f23d-10d9-48af-b48c-c0aa5d9a9ed8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>camera_location</th>\n","      <th>file_name</th>\n","      <th>part_num</th>\n","    </tr>\n","    <tr>\n","      <th>label</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Normal</th>\n","      <td>386</td>\n","      <td>386</td>\n","      <td>386</td>\n","    </tr>\n","    <tr>\n","      <th>Yawning</th>\n","      <td>346</td>\n","      <td>346</td>\n","      <td>346</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c277f23d-10d9-48af-b48c-c0aa5d9a9ed8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c277f23d-10d9-48af-b48c-c0aa5d9a9ed8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c277f23d-10d9-48af-b48c-c0aa5d9a9ed8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0cb479ac-63dc-49c4-9c7c-073c264ee4b5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0cb479ac-63dc-49c4-9c7c-073c264ee4b5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0cb479ac-63dc-49c4-9c7c-073c264ee4b5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"yawDD_df\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yawning\",\n          \"Normal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"camera_location\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28,\n        \"min\": 346,\n        \"max\": 386,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          346,\n          386\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"file_name\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28,\n        \"min\": 346,\n        \"max\": 386,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          346,\n          386\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"part_num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28,\n        \"min\": 346,\n        \"max\": 386,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          346,\n          386\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["yawDD_part_cnt = yawDD_df.groupby([\"label\", \"camera_location\", \"file_name\"]).count().reset_index()\n","yawDD_part_cnt"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"aL97A8WrfHD1","executionInfo":{"status":"ok","timestamp":1741150307430,"user_tz":-540,"elapsed":26,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"b55ab90b-316f-4d9a-f8d5-919d9c30fb03"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       label camera_location                   file_name  part_num\n","0     Normal          mirror   1-FemaleNoGlasses-Yawning         3\n","1     Normal          mirror     1-MaleNoGlasses-Yawning         5\n","2     Normal          mirror    1-MaleSunGlasses-Yawning         2\n","3     Normal          mirror  10-FemaleNoGlasses-Yawning         2\n","4     Normal          mirror    10-MaleNoGlasses-Yawning         2\n","..       ...             ...                         ...       ...\n","226  Yawning          mirror       7-MaleGlasses-Yawning         4\n","227  Yawning          mirror     8-FemaleGlasses-Yawning         5\n","228  Yawning          mirror  8-MaleGlassesBeard-Yawning         1\n","229  Yawning          mirror   9-FemaleNoGlasses-Yawning         2\n","230  Yawning          mirror     9-MaleNoGlasses-Yawning         2\n","\n","[231 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-e449eac2-f146-44e1-8a33-9900dbf73ddb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>camera_location</th>\n","      <th>file_name</th>\n","      <th>part_num</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Normal</td>\n","      <td>mirror</td>\n","      <td>1-FemaleNoGlasses-Yawning</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Normal</td>\n","      <td>mirror</td>\n","      <td>1-MaleNoGlasses-Yawning</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Normal</td>\n","      <td>mirror</td>\n","      <td>1-MaleSunGlasses-Yawning</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Normal</td>\n","      <td>mirror</td>\n","      <td>10-FemaleNoGlasses-Yawning</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Normal</td>\n","      <td>mirror</td>\n","      <td>10-MaleNoGlasses-Yawning</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>226</th>\n","      <td>Yawning</td>\n","      <td>mirror</td>\n","      <td>7-MaleGlasses-Yawning</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>227</th>\n","      <td>Yawning</td>\n","      <td>mirror</td>\n","      <td>8-FemaleGlasses-Yawning</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>228</th>\n","      <td>Yawning</td>\n","      <td>mirror</td>\n","      <td>8-MaleGlassesBeard-Yawning</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>229</th>\n","      <td>Yawning</td>\n","      <td>mirror</td>\n","      <td>9-FemaleNoGlasses-Yawning</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>230</th>\n","      <td>Yawning</td>\n","      <td>mirror</td>\n","      <td>9-MaleNoGlasses-Yawning</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>231 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e449eac2-f146-44e1-8a33-9900dbf73ddb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e449eac2-f146-44e1-8a33-9900dbf73ddb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e449eac2-f146-44e1-8a33-9900dbf73ddb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-96227127-ee6c-477e-a97d-13cef835d405\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-96227127-ee6c-477e-a97d-13cef835d405')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-96227127-ee6c-477e-a97d-13cef835d405 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7056e6ba-067f-436e-ae24-39bf67b6c582\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('yawDD_part_cnt')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7056e6ba-067f-436e-ae24-39bf67b6c582 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('yawDD_part_cnt');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"yawDD_part_cnt","summary":"{\n  \"name\": \"yawDD_part_cnt\",\n  \"rows\": 231,\n  \"fields\": [\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yawning\",\n          \"Normal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"camera_location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"dash\",\n          \"mirror\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"file_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 137,\n        \"samples\": [\n          \"2-FemaleNoGlasses\",\n          \"16-MaleNoGlasses\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"part_num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 10,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          8,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["yawDD_part_cnt.groupby(\"part_num\").count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"W_8lgaEMiOlo","executionInfo":{"status":"ok","timestamp":1741150309131,"user_tz":-540,"elapsed":13,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"23a2007a-c552-452b-e980-5d298f7a313d"},"execution_count":59,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          label  camera_location  file_name\n","part_num                                   \n","1            32               32         32\n","2            80               80         80\n","3            38               38         38\n","4            32               32         32\n","5            22               22         22\n","6            13               13         13\n","7             7                7          7\n","8             4                4          4\n","9             1                1          1\n","10            2                2          2"],"text/html":["\n","  <div id=\"df-fcdf3897-9c52-4253-9e26-bc0cc6f7aaea\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>camera_location</th>\n","      <th>file_name</th>\n","    </tr>\n","    <tr>\n","      <th>part_num</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>32</td>\n","      <td>32</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>80</td>\n","      <td>80</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>38</td>\n","      <td>38</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32</td>\n","      <td>32</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>22</td>\n","      <td>22</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>13</td>\n","      <td>13</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fcdf3897-9c52-4253-9e26-bc0cc6f7aaea')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fcdf3897-9c52-4253-9e26-bc0cc6f7aaea button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fcdf3897-9c52-4253-9e26-bc0cc6f7aaea');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cf167ccc-99bf-4f50-a8fd-0ea22a50b9ea\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cf167ccc-99bf-4f50-a8fd-0ea22a50b9ea')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cf167ccc-99bf-4f50-a8fd-0ea22a50b9ea button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"yawDD_part_cnt\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"part_num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1,\n        \"max\": 10,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          9,\n          2,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24,\n        \"min\": 1,\n        \"max\": 80,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          1,\n          80,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"camera_location\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24,\n        \"min\": 1,\n        \"max\": 80,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          1,\n          80,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"file_name\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24,\n        \"min\": 1,\n        \"max\": 80,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          1,\n          80,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["def count_plot(data, col):\n","    plt.figure(figsize=(10, 5))\n","    sns.countplot(x=col, data=data)\n","    plt.xticks(np.arange(0, 11, 1))\n","    plt.yticks(np.arange(0, 81, 10))\n","    plt.title(\"Number of Parts per Clip\")\n","    plt.show()"],"metadata":{"id":"Ur0j4fW6no4x","executionInfo":{"status":"ok","timestamp":1741150827805,"user_tz":-540,"elapsed":3,"user":{"displayName":"somin shim","userId":"00972152430439357273"}}},"execution_count":92,"outputs":[]},{"cell_type":"code","source":["count_plot(yawDD_part_cnt, 'part_num')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":369},"id":"gSFmRPOuoa-z","executionInfo":{"status":"ok","timestamp":1741150828832,"user_tz":-540,"elapsed":434,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"0ddfc6ad-6696-4209-b5ac-1a1f6d4f789a"},"execution_count":93,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA0kAAAHWCAYAAACi1sL/AAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAO4pJREFUeJzt3X98j/Xi//Hne5vN7BcT+5GN+ZEhP2o0wydiJfk4iiRxEOUcTX6sxDr5VbRRIfIj0kimoi8nCWmHqQ7DSnHqIBYLG3VsY9pou75/nJv353qHvM22620e99vtut12va7r/Xo/d0239tz1420zDMMQAAAAAECS5GZ1AAAAAABwJZQkAAAAADChJAEAAACACSUJAAAAAEwoSQAAAABgQkkCAAAAABNKEgAAAACYUJIAAAAAwISSBAAAAAAmlCQAuMls3bpVNptNq1evtjqKU3JycvTwww+rZs2astlsmj17ttWRIKlTp07q1KmTff3HH3+UzWbT0qVLLcsEAGWFkgQA5WDp0qWy2WyqWrWqjh07dsn2Tp066fbbb7cg2Y1nzJgx2rRpkxISErR8+XLdf//9V9zXZrPZFzc3N4WGhuq+++7T1q1byzRTSkpKpS1rOTk5evbZZxUZGalq1arJx8dHUVFRmjp1qnJzc62OBwAVwsPqAABQmRUVFSkpKUlz5861OsoN6x//+Id69uypZ5991qn97733Xg0cOFCGYSgzM1Pz589X586dtX79enXr1q1MMqWkpGjfvn0aPXp0mcznKnbt2qUHHnhAZ8+e1YABAxQVFSVJ2r17t5KSkrRt2zZ9+umnl31t3bp19euvv6pKlSoVGRkAygUlCQDKUatWrbR48WIlJCQoNDTU6jgVqqCgQD4+Ptc9z8mTJ1W9enWn97/ttts0YMAA+/pDDz2kFi1aaPbs2dddksrqe7LKH+XPzc3VQw89JHd3d3399deKjIx02D5t2jQtXrz4inNfPHMKAJUBl9sBQDl6/vnnVVxcrKSkpD/c74/u57DZbJo8ebJ9ffLkybLZbDpw4IAGDBiggIAA1apVSxMmTJBhGMrKylLPnj3l7++v4OBgvfbaa5d9z+LiYj3//PMKDg6Wj4+P/vSnPykrK+uS/dLT03X//fcrICBA1apVU8eOHfXll1867HMx03fffafHHntMNWrUUIcOHf7wez58+LD69OmjwMBAVatWTW3bttX69evt2y9esmgYhubNm2e/jO5aNW/eXLfccosyMzMlSZ9//rn69Omj8PBweXl5KSwsTGPGjNGvv/7q8LrBgwfL19dXhw4d0gMPPCA/Pz/1799fnTp10vr163XkyBF7pnr16tlfN3fuXDVr1kzVqlVTjRo11Lp1a6WkpPxhxov3ib3//vuW/UzefPNNHTt2TDNnzrykIElSUFCQXnjhhSu+/nL/hi8ew8OHD6tr167y8fFRaGioXnzxRRmG8YfHBACsxJkkAChHERERGjhwoBYvXqzx48eX6dmkvn37qkmTJkpKStL69es1depUBQYG6s0331Tnzp01ffp0rVixQs8++6zatGmju+++2+H106ZNk81m07hx43Ty5EnNnj1bsbGx2rNnj7y9vSX991K3bt26KSoqSpMmTZKbm5uSk5PVuXNnff7557rrrrsc5uzTp48aNWqkl19++Q9/Cc7JyVG7du107tw5jRw5UjVr1tSyZcv0pz/9SatXr9ZDDz2ku+++W8uXL9ef//xn+yV0pXH69GmdPn1aDRs2lCStWrVK586d0/Dhw1WzZk3t3LlTc+fO1U8//aRVq1Y5vPa3335T165d1aFDB7366quqVq2agoODlZeXp59++kmzZs2SJPn6+kqSFi9erJEjR+rhhx/WqFGjVFhYqG+//Vbp6el67LHHrprVyp/JRx99JG9vbz388MPOH1wnFBcX6/7771fbtm01Y8YMbdy4UZMmTdJvv/2mF198sUzfCwDKjAEAKHPJycmGJGPXrl3GoUOHDA8PD2PkyJH27R07djSaNWtmX8/MzDQkGcnJyZfMJcmYNGmSfX3SpEmGJGPYsGH2sd9++82oU6eOYbPZjKSkJPv46dOnDW9vb2PQoEH2sS1bthiSjFtvvdXIz8+3j3/wwQeGJOP11183DMMwSkpKjEaNGhldu3Y1SkpK7PudO3fOiIiIMO69995LMvXr18+p4zN69GhDkvH555/bx86cOWNEREQY9erVM4qLix2+/7i4OKfmlWQMHTrUOHXqlHHy5EkjPT3d6NKliyHJeO211+z5fy8xMdGw2WzGkSNH7GODBg0yJBnjx4+/ZP/u3bsbdevWvWS8Z8+eDj9XZ7nCz6RGjRpGy5Ytnc7csWNHo2PHjvb1y/0bvngMn376aftYSUmJ0b17d8PT09M4deqU0+8HABWJy+0AoJzVr19ff/7zn7Vo0SKdOHGizOZ94okn7F+7u7urdevWMgxDQ4cOtY9Xr15djRs31uHDhy95/cCBA+Xn52dff/jhhxUSEqJPPvlEkrRnzx4dPHhQjz32mH755Rf9/PPP+vnnn1VQUKAuXbpo27ZtKikpcZjzr3/9q1PZP/nkE911110Ol3/5+vpq2LBh+vHHH/Xdd985dxAuY8mSJapVq5Zq166t6Ohoffnll4qPj7c/ZOHiGRnpv/fo/Pzzz2rXrp0Mw9DXX399yXzDhw93+r2rV6+un376Sbt27SpVdit/Jvn5+Q7vXZZGjBhh/9pms2nEiBE6f/68Pvvss3J5PwC4XlxuBwAV4IUXXtDy5cuVlJSk119/vUzmDA8Pd1gPCAhQ1apVdcstt1wy/ssvv1zy+kaNGjms22w2NWzYUD/++KMk6eDBg5KkQYMGXTFDXl6eatSoYV+PiIhwKvuRI0cUHR19yXiTJk3s20v7iPSePXtqxIgRstls8vPzU7NmzRweVnD06FFNnDhRH330kU6fPu3w2ry8PId1Dw8P1alTx+n3HjdunD777DPdddddatiwoe677z499thjat++vVOvt/Jn4u/vrzNnzji177Vwc3NT/fr1HcZuu+02SbJ/XwDgaihJAFAB6tevrwEDBmjRokUaP378Jduv9ECC4uLiK87p7u7u1JikUt0kf/GMxCuvvKJWrVpddp+L9+JcZD5LY5U6deooNjb2stuKi4t177336j//+Y/GjRunyMhI+fj46NixYxo8ePAlZ2G8vLzk5ub8RRdNmjTR/v379fHHH2vjxo368MMPNX/+fE2cOFFTpky5ru9LKt+fSWRkpPbs2aPz58/L09PzunICwI2OkgQAFeSFF17Qu+++q+nTp1+y7eJf/n//YZ1HjhwptzwXz0pcZBiGfvjhB7Vo0UKS1KBBA0n/PcNwpdJRWnXr1tX+/fsvGf/3v/9t314e9u7dqwMHDmjZsmUOD4LYvHnzNc3zR0/Z8/HxUd++fdW3b1+dP39evXr10rRp05SQkHDVR2Rb+TPp0aOHtm/frg8//FD9+vUrs3lLSkp0+PBh+9kjSTpw4IAkOTwVEABcCfckAUAFadCggQYMGKA333xT2dnZDtv8/f11yy23aNu2bQ7j8+fPL7c877zzjsPlVatXr9aJEyfsnyUUFRWlBg0a6NVXX9XZs2cvef2pU6dK/d4PPPCAdu7cqe3bt9vHCgoKtGjRItWrV09NmzYt9dx/5OKZNvOZNcMwrvkSSB8fn0suzZN0yWWNnp6eatq0qQzD0IULF646r5U/k7/+9a8KCQnRM888Yy8xZidPntTUqVNLNfcbb7xh/9owDL3xxhuqUqWKunTpUuq8AFCeOJMEABXob3/7m5YvX679+/erWbNmDtueeOIJJSUl6YknnlDr1q21bdu2y/6yWlYCAwPVoUMHPf7448rJydHs2bPVsGFDPfnkk5L+ey/JW2+9pW7duqlZs2Z6/PHHdeutt+rYsWPasmWL/P39tW7dulK99/jx47Vy5Up169ZNI0eOVGBgoJYtW6bMzEx9+OGH13SJ27WIjIxUgwYN9Oyzz+rYsWPy9/fXhx9+eMm9SVcTFRWl999/X/Hx8WrTpo18fX3Vo0cP3XfffQoODlb79u0VFBSk77//Xm+88Ya6d+/u1EMRrPyZ1KhRQ2vWrNEDDzygVq1aacCAAYqKipIkffXVV1q5cqViYmKued6qVatq48aNGjRokKKjo7VhwwatX79ezz//vGrVqlWqrABQ3ihJAFCBGjZsqAEDBmjZsmWXbJs4caJOnTql1atX64MPPlC3bt20YcMG1a5du1yyPP/88/r222+VmJioM2fOqEuXLpo/f76qVatm36dTp07avn27XnrpJb3xxhs6e/asgoODFR0drb/85S+lfu+goCD985//1Lhx4zR37lwVFhaqRYsWWrdunbp3714W395lValSRevWrdPIkSOVmJioqlWr6qGHHtKIESPUsmVLp+d56qmntGfPHiUnJ2vWrFmqW7euevToob/85S9asWKFZs6cqbNnz6pOnToaOXLkH34Iq5mVPxNJio6O1r59+/TKK69o/fr1Wr58udzc3NSkSRONHz/e4Sl1znJ3d9fGjRs1fPhwjR07Vn5+fpo0aZImTpx4XVkBoDzZjNLczQsAAMrM1q1bdc8992jVqlVl/mGuVho8eLBWr1592UsDAcCVcU8SAAAAAJhQkgAAAADAhJIEAAAAACbckwQAAAAAJpxJAgAAAAATShIAAAAAmFT6z0kqKSnR8ePH5efnJ5vNZnUcAAAAABYxDENnzpxRaGjoH35weaUvScePH1dYWJjVMQAAAAC4iKysLNWp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Vb16dYfXrF27Vjabzb5+8QzW22+/rfDwcPn6+uqpp55ScXGxZsyYoeDgYNWuXVvTpk27vgMHAKhwlCQAQIVZtmyZPDw8tHPnTr3++uuaOXOm3nrrLUnShQsX9NJLL+mbb77R2rVr9eOPP2rw4MGXzDF+/HglJSXp+++/17333qtnnnlGzZo104kTJ3TixAn17dvXqSxTpkzRI488om+//VYPPPCA+vfvr//85z/X9P0cOnRIGzZs0MaNG7Vy5UotWbJE3bt3108//aS0tDRNnz5dL7zwgtLT069pXgCAtbjcDgBQYcLCwjRr1izZbDY1btxYe/fu1axZs/Tkk09qyJAh9v3q16+vOXPmqE2bNjp79qx8fX3t21588UXde++99nVfX195eHgoODj4mrIMHjxY/fr1kyS9/PLLmjNnjnbu3Kn777/f6TlKSkr09ttvy8/PT02bNtU999yj/fv365NPPpGbm5saN26s6dOna8uWLYqOjr6mfAAA63AmCQBQYdq2betwyVpMTIwOHjyo4uJiZWRkqEePHgoPD5efn586duwoSTp69KjDHK1bty6TLC1atLB/7ePjI39/f4fL+5xRr149+fn52deDgoLUtGlTubm5OYxd67wAAGtRkgAAlissLFTXrl3l7++vFStWaNeuXVqzZo0k6fz58w77+vj4lMl7VqlSxWHdZrOppKREkuTm5ma/V+qiCxcuODXHH80LALgxcLkdAKDC/P7enB07dqhRo0b697//rV9++UVJSUkKCwuTJO3evdupOT09Pcv8KXe1atXSmTNnVFBQYC9le/bsKdP3AAC4Ls4kAQAqzNGjRxUfH6/9+/dr5cqVmjt3rkaNGqXw8HB5enpq7ty5Onz4sD766CO99NJLTs1Zr149ZWZmas+ePfr5559VVFR03Tmjo6NVrVo1Pf/88zp06JBSUlKcemoeAKByoCQBACrMwIED9euvv+quu+5SXFycRo0apWHDhqlWrVpaunSpVq1apaZNmyopKUmvvvqqU3P27t1b999/v+655x7VqlVLK1euvO6cgYGBevfdd/XJJ5+oefPmWrlypSZPnnzd8wIAbgw24/cXXQMAUA46deqkVq1aafbs2VZHAQDgD3EmCQAAAABMKEkAgEplxYoV8vX1vezSrFkzq+MBAG4AXG4HAKhUzpw5o5ycnMtuq1KliurWrVvBiQAANxpKEgAAAACYcLkdAAAAAJhQkgAAAADAhJIEAAAAACaUJAAAAAAwoSQBAAAAgAklCQAAAABMKEkAAAAAYPL/AX5sHA3v5Vr5AAAAAElFTkSuQmCC\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### Train/Test"],"metadata":{"id":"28AV6E52kEFN"}},{"cell_type":"code","source":["train_path = \"/content/drive/MyDrive/DMS/data/train_test_split_dataset/train_dataset\"\n","test_path = \"/content/drive/MyDrive/DMS/data/train_test_split_dataset/test_dataset\""],"metadata":{"id":"wB0WwI5okpgD","executionInfo":{"status":"ok","timestamp":1741150833856,"user_tz":-540,"elapsed":5,"user":{"displayName":"somin shim","userId":"00972152430439357273"}}},"execution_count":94,"outputs":[]},{"cell_type":"code","source":["cat = ['normal_yawDD','yawn_yawDD']\n","train_yawDD = yawdd_scan_path(train_path, categories=cat)"],"metadata":{"id":"FpHngghXkD5S","executionInfo":{"status":"ok","timestamp":1741150834046,"user_tz":-540,"elapsed":17,"user":{"displayName":"somin shim","userId":"00972152430439357273"}}},"execution_count":95,"outputs":[]},{"cell_type":"code","source":["train_yawDD_part_cnt = train_yawDD.groupby([\"label\", \"camera_location\", \"file_name\"]).count().reset_index()\n","train_yawDD_part_cnt"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"FHev3uNrl1-W","executionInfo":{"status":"ok","timestamp":1741150834234,"user_tz":-540,"elapsed":25,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"20d435e1-f675-42d8-d573-54dd79dfda14"},"execution_count":96,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            label camera_location                    file_name  part_num\n","0    normal_yawDD          mirror   14-FemaleNoGlasses-Yawning         2\n","1    normal_yawDD          mirror     15-FemaleGlasses-Yawning         5\n","2    normal_yawDD          mirror  15-FemaleSunGlasses-Yawning         3\n","3    normal_yawDD          mirror     15-MaleNoGlasses-Yawning         2\n","4    normal_yawDD          mirror     16-FemaleGlasses-Yawning         4\n","..            ...             ...                          ...       ...\n","174    yawn_yawDD          mirror   43-FemaleNoGlasses-Yawning         1\n","175    yawn_yawDD          mirror     44-MaleNoGlasses-Yawning         3\n","176    yawn_yawDD          mirror     45-MaleNoGlasses-Yawning         2\n","177    yawn_yawDD          mirror       46-MaleGlasses-Yawning         2\n","178    yawn_yawDD          mirror     47-MaleNoGlasses-Yawning         1\n","\n","[179 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-e974c96c-888f-4e1e-92b5-02c3af322aa7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>camera_location</th>\n","      <th>file_name</th>\n","      <th>part_num</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>normal_yawDD</td>\n","      <td>mirror</td>\n","      <td>14-FemaleNoGlasses-Yawning</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>normal_yawDD</td>\n","      <td>mirror</td>\n","      <td>15-FemaleGlasses-Yawning</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>normal_yawDD</td>\n","      <td>mirror</td>\n","      <td>15-FemaleSunGlasses-Yawning</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>normal_yawDD</td>\n","      <td>mirror</td>\n","      <td>15-MaleNoGlasses-Yawning</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>normal_yawDD</td>\n","      <td>mirror</td>\n","      <td>16-FemaleGlasses-Yawning</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>174</th>\n","      <td>yawn_yawDD</td>\n","      <td>mirror</td>\n","      <td>43-FemaleNoGlasses-Yawning</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>175</th>\n","      <td>yawn_yawDD</td>\n","      <td>mirror</td>\n","      <td>44-MaleNoGlasses-Yawning</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>176</th>\n","      <td>yawn_yawDD</td>\n","      <td>mirror</td>\n","      <td>45-MaleNoGlasses-Yawning</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>177</th>\n","      <td>yawn_yawDD</td>\n","      <td>mirror</td>\n","      <td>46-MaleGlasses-Yawning</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>178</th>\n","      <td>yawn_yawDD</td>\n","      <td>mirror</td>\n","      <td>47-MaleNoGlasses-Yawning</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>179 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e974c96c-888f-4e1e-92b5-02c3af322aa7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e974c96c-888f-4e1e-92b5-02c3af322aa7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e974c96c-888f-4e1e-92b5-02c3af322aa7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-875bf596-478f-4187-b5a0-53f74555bc3f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-875bf596-478f-4187-b5a0-53f74555bc3f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-875bf596-478f-4187-b5a0-53f74555bc3f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_67f8d326-c05c-49d8-8941-9b6b72156b8a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('train_yawDD_part_cnt')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_67f8d326-c05c-49d8-8941-9b6b72156b8a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('train_yawDD_part_cnt');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_yawDD_part_cnt","summary":"{\n  \"name\": \"train_yawDD_part_cnt\",\n  \"rows\": 179,\n  \"fields\": [\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"yawn_yawDD\",\n          \"normal_yawDD\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"camera_location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"dash\",\n          \"mirror\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"file_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 109,\n        \"samples\": [\n          \"14-MaleNoGlasses\",\n          \"19-FemaleNoGlasses-Yawning\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"part_num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 10,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          8,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":96}]},{"cell_type":"code","source":["train_yawDD_part_cnt.groupby(\"part_num\").count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"QWuAgYeMnBq2","executionInfo":{"status":"ok","timestamp":1741150834369,"user_tz":-540,"elapsed":18,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"086a2738-111d-4b24-a0a9-736aea512f1f"},"execution_count":97,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          label  camera_location  file_name\n","part_num                                   \n","1            26               26         26\n","2            59               59         59\n","3            30               30         30\n","4            25               25         25\n","5            16               16         16\n","6            10               10         10\n","7             6                6          6\n","8             4                4          4\n","9             1                1          1\n","10            2                2          2"],"text/html":["\n","  <div id=\"df-197b626f-f356-4ada-a9b5-01f2f4c142ad\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>camera_location</th>\n","      <th>file_name</th>\n","    </tr>\n","    <tr>\n","      <th>part_num</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>26</td>\n","      <td>26</td>\n","      <td>26</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>59</td>\n","      <td>59</td>\n","      <td>59</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>30</td>\n","      <td>30</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>16</td>\n","      <td>16</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-197b626f-f356-4ada-a9b5-01f2f4c142ad')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-197b626f-f356-4ada-a9b5-01f2f4c142ad button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-197b626f-f356-4ada-a9b5-01f2f4c142ad');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e1944ff1-37d2-406d-a43c-1035eda68798\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e1944ff1-37d2-406d-a43c-1035eda68798')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e1944ff1-37d2-406d-a43c-1035eda68798 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"train_yawDD_part_cnt\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"part_num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1,\n        \"max\": 10,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          9,\n          2,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17,\n        \"min\": 1,\n        \"max\": 59,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          1,\n          59,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"camera_location\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17,\n        \"min\": 1,\n        \"max\": 59,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          1,\n          59,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"file_name\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17,\n        \"min\": 1,\n        \"max\": 59,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          1,\n          59,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["train_yawDD_part_cnt.groupby('label').count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"imwxMTUunBoS","executionInfo":{"status":"ok","timestamp":1741150834580,"user_tz":-540,"elapsed":45,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"9cd83284-ab32-4e4d-bb4c-01f45d8641fe"},"execution_count":98,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              camera_location  file_name  part_num\n","label                                             \n","normal_yawDD               71         71        71\n","yawn_yawDD                108        108       108"],"text/html":["\n","  <div id=\"df-e7155584-ae70-4f3c-bf5e-1b022db697d0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>camera_location</th>\n","      <th>file_name</th>\n","      <th>part_num</th>\n","    </tr>\n","    <tr>\n","      <th>label</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>normal_yawDD</th>\n","      <td>71</td>\n","      <td>71</td>\n","      <td>71</td>\n","    </tr>\n","    <tr>\n","      <th>yawn_yawDD</th>\n","      <td>108</td>\n","      <td>108</td>\n","      <td>108</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e7155584-ae70-4f3c-bf5e-1b022db697d0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e7155584-ae70-4f3c-bf5e-1b022db697d0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e7155584-ae70-4f3c-bf5e-1b022db697d0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d25d5565-f255-4114-aa48-079800aa9643\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d25d5565-f255-4114-aa48-079800aa9643')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d25d5565-f255-4114-aa48-079800aa9643 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"train_yawDD_part_cnt\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"label\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"yawn_yawDD\",\n          \"normal_yawDD\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"camera_location\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26,\n        \"min\": 71,\n        \"max\": 108,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          108,\n          71\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"file_name\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26,\n        \"min\": 71,\n        \"max\": 108,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          108,\n          71\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"part_num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26,\n        \"min\": 71,\n        \"max\": 108,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          108,\n          71\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":98}]},{"cell_type":"code","source":["count_plot(train_yawDD_part_cnt, 'part_num')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":369},"id":"OMeYMAqJptI3","executionInfo":{"status":"ok","timestamp":1741150834947,"user_tz":-540,"elapsed":206,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"e6aabed2-5651-43a1-ea27-92bb53d7f3f7"},"execution_count":99,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["test_yawDD = yawdd_scan_path(test_path, categories=cat)"],"metadata":{"id":"rlOtLdE4mSwP","executionInfo":{"status":"ok","timestamp":1741150837802,"user_tz":-540,"elapsed":5,"user":{"displayName":"somin shim","userId":"00972152430439357273"}}},"execution_count":100,"outputs":[]},{"cell_type":"code","source":["test_yawDD_part_cnt = test_yawDD.groupby([\"label\", \"camera_location\", \"file_name\"]).count().reset_index()\n","count_plot(test_yawDD_part_cnt, 'part_num')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":369},"id":"KIRM_sXCmUUG","executionInfo":{"status":"ok","timestamp":1741150838331,"user_tz":-540,"elapsed":213,"user":{"displayName":"somin shim","userId":"00972152430439357273"}},"outputId":"c67938d6-4942-4f79-8dc8-5a0ba414d6ac"},"execution_count":101,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# DMD 데이터 통계"],"metadata":{"id":"MjGG_6OIUeqT"}},{"cell_type":"code","source":["dmd_data_path = \"/content/drive/MyDrive/DMS/data/DMD/dmd-clip\""],"metadata":{"id":"eErPg9PsUh7g","executionInfo":{"status":"ok","timestamp":1741150842218,"user_tz":-540,"elapsed":1,"user":{"displayName":"somin shim","userId":"00972152430439357273"}}},"execution_count":104,"outputs":[]},{"cell_type":"code","source":["labels_ = []\n","genders_ = []\n","filenames_ = []\n","durations_ = []\n","\n","subject_dirs = os.listdir(dmd_data_path)\n","for subject in subject_dirs:\n","    subject_path = os.path.join(dmd_data_path, subject)\n","\n","    sessions = os.listdir(subject_path)\n","    for session in sessions:\n","        session_path = os.path.join(subject_path, session, 'driver_actions')\n","\n","        labels = os.listdir(session_path)\n","        for label in labels:\n","            label_path = os.path.join(session_path, label)\n","\n","            for dirpath, _, filenames in os.walk(label_path):\n","                for filename in filenames:\n","                    if filename.lower().endswith((\".mp4\", \".avi\", \".mkv\", \".mov\")) and filename.lower().startswith(\"face\"):\n","                        video_path = os.path.join(dirpath, filename)\n","                        duration = get_video_duration(video_path)\n","\n","                        labels_.append(label)\n","                        filenames_.append(filename)\n","                        durations_.append(duration)"],"metadata":{"id":"52r6DaKSUt7O"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","dmd_df = pd.DataFrame({\n","    \"Label\": labels_,\n","    \"Filename\": filenames_,\n","    \"Duration\": durations_\n","})\n","\n","dmd_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"8yBpgmxzcYwL","executionInfo":{"status":"ok","timestamp":1740878512210,"user_tz":-540,"elapsed":35,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}},"outputId":"267c2306-f54c-4755-ab30-253f25ac32dc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                Label                           Filename   Duration\n","0          safe_drive   face_2019-03-14-14;31;08_1_0.avi   2.486559\n","1          safe_drive   face_2019-03-14-14;31;08_1_1.avi  18.481183\n","2          safe_drive   face_2019-03-14-14;31;08_1_2.avi  11.256720\n","3     phonecall_right   face_2019-03-08-09;21;03_1_0.avi  36.895161\n","4     phonecall_right   face_2019-03-08-09;21;03_1_1.avi  42.842742\n","...               ...                                ...        ...\n","3082       safe_drive  face_2019-03-11-10;11;14_25_2.avi   7.056452\n","3083       safe_drive  face_2019-03-14-14;42;40_25_0.avi   3.024194\n","3084       safe_drive  face_2019-03-14-14;42;40_25_1.avi  19.892473\n","3085       safe_drive  face_2019-03-14-14;42;40_25_2.avi  11.424731\n","3086       safe_drive  face_2019-03-14-14;42;40_25_3.avi   9.576613\n","\n","[3087 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-2078c4d5-4aad-40c1-acb6-ebd243bb9a28\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Label</th>\n","      <th>Filename</th>\n","      <th>Duration</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>safe_drive</td>\n","      <td>face_2019-03-14-14;31;08_1_0.avi</td>\n","      <td>2.486559</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>safe_drive</td>\n","      <td>face_2019-03-14-14;31;08_1_1.avi</td>\n","      <td>18.481183</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>safe_drive</td>\n","      <td>face_2019-03-14-14;31;08_1_2.avi</td>\n","      <td>11.256720</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>phonecall_right</td>\n","      <td>face_2019-03-08-09;21;03_1_0.avi</td>\n","      <td>36.895161</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>phonecall_right</td>\n","      <td>face_2019-03-08-09;21;03_1_1.avi</td>\n","      <td>42.842742</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3082</th>\n","      <td>safe_drive</td>\n","      <td>face_2019-03-11-10;11;14_25_2.avi</td>\n","      <td>7.056452</td>\n","    </tr>\n","    <tr>\n","      <th>3083</th>\n","      <td>safe_drive</td>\n","      <td>face_2019-03-14-14;42;40_25_0.avi</td>\n","      <td>3.024194</td>\n","    </tr>\n","    <tr>\n","      <th>3084</th>\n","      <td>safe_drive</td>\n","      <td>face_2019-03-14-14;42;40_25_1.avi</td>\n","      <td>19.892473</td>\n","    </tr>\n","    <tr>\n","      <th>3085</th>\n","      <td>safe_drive</td>\n","      <td>face_2019-03-14-14;42;40_25_2.avi</td>\n","      <td>11.424731</td>\n","    </tr>\n","    <tr>\n","      <th>3086</th>\n","      <td>safe_drive</td>\n","      <td>face_2019-03-14-14;42;40_25_3.avi</td>\n","      <td>9.576613</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3087 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2078c4d5-4aad-40c1-acb6-ebd243bb9a28')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2078c4d5-4aad-40c1-acb6-ebd243bb9a28 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2078c4d5-4aad-40c1-acb6-ebd243bb9a28');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-96b86219-2f19-4489-bf61-a045b5e58cd6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-96b86219-2f19-4489-bf61-a045b5e58cd6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-96b86219-2f19-4489-bf61-a045b5e58cd6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_28f5e62e-8bac-493f-9526-eb2c2be8b0f4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dmd_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_28f5e62e-8bac-493f-9526-eb2c2be8b0f4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dmd_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dmd_df","summary":"{\n  \"name\": \"dmd_df\",\n  \"rows\": 3087,\n  \"fields\": [\n    {\n      \"column\": \"Label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"phonecall_right\",\n          \"texting_right\",\n          \"phonecall_left\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Filename\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2357,\n        \"samples\": [\n          \"face_2019-04-08-16;18;54_33_15.avi\",\n          \"face_2019-03-21-10;19;50_28_22.avi\",\n          \"face_2019-04-08-10;08;19_33_5.avi\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.735733835461545,\n        \"min\": 0.033602150537634407,\n        \"max\": 238.2056451612903,\n        \"num_unique_values\": 834,\n        \"samples\": [\n          10.584677419354838,\n          20.73252688172043,\n          8.904569892473118\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["dmd_df.groupby(\"Label\")[\"Duration\"].sum()"],"metadata":{"id":"AZBBYnxncg5o","executionInfo":{"status":"ok","timestamp":1740878526666,"user_tz":-540,"elapsed":6,"user":{"displayName":"Sol Lee","userId":"04508513172834796855"}},"outputId":"c99be214-8ba0-4925-a518-3282c517c06a","colab":{"base_uri":"https://localhost:8080/","height":272}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Label\n","phonecall_left      5269.422043\n","phonecall_right     4860.282258\n","safe_drive         14712.231183\n","texting_left        2038.676075\n","texting_right       2060.147849\n","Name: Duration, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Duration</th>\n","    </tr>\n","    <tr>\n","      <th>Label</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>phonecall_left</th>\n","      <td>5269.422043</td>\n","    </tr>\n","    <tr>\n","      <th>phonecall_right</th>\n","      <td>4860.282258</td>\n","    </tr>\n","    <tr>\n","      <th>safe_drive</th>\n","      <td>14712.231183</td>\n","    </tr>\n","    <tr>\n","      <th>texting_left</th>\n","      <td>2038.676075</td>\n","    </tr>\n","    <tr>\n","      <th>texting_right</th>\n","      <td>2060.147849</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":21}]}]}