{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":20217,"status":"ok","timestamp":1750302214187,"user":{"displayName":"정현봉","userId":"00800786436397366756"},"user_tz":-540},"id":"J68SdBzNjphV","colab":{"base_uri":"https://localhost:8080/"},"outputId":"41e72399-db27-4460-e32a-42ba7d4e24a2"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive/\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive/')"]},{"cell_type":"markdown","metadata":{"id":"wUDOtyCzmZth"},"source":["## **학습 & 테스트 프로세스 요약**\n","| 단계 | 학습 (Train) | 테스트 (Test) |\n","|------|------------|-------------|\n","| **1. 데이터 입력** | CSV 파일 (이미 추출된 특징값) | 동영상 |\n","| **2. 특징 추출** | CSV에서 불러오기 | 동영상 → 프레임 추출 → 12개 묶음 → 특징 추출 |\n","| **3. 데이터 변환** | `(배치, 12, 5)` 형태로 변환 | `(1, 12, 5)` 형태로 변환 |\n","| **4. 모델 학습/예측** | LSTM 모델 학습 | LSTM 모델을 이용해 예측 |\n","| **5. 결과 저장** | `.pth` 파일로 저장 | 예측값 출력 |\n"]},{"cell_type":"markdown","metadata":{"id":"Fk84YrSckNTx"},"source":["# 1. 학습"]},{"cell_type":"markdown","metadata":{"id":"QJKfO0xhkSSz"},"source":["1. 추출된 feature 로드\n","2. LSTM Input 형식으로 변환\n","3. LSTM 학습"]},{"cell_type":"markdown","metadata":{"id":"FJuBF9S3WK2y"},"source":["## 라이브러리 임포트"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qtMzGHiCkMEO"},"outputs":[],"source":["import os\n","import datetime\n","from tqdm import tqdm\n","import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import confusion_matrix, classification_report\n","from collections import Counter\n","import random\n","\n","import torch\n","import torch.nn as nn\n","import torch.nn.functional as F\n","import torchvision.models as models\n","import torchvision.transforms as transforms\n","from torch.utils.data import DataLoader, TensorDataset\n","import torch.utils.data as data\n","import torch.optim as optim\n","import torchvision\n","from torch.autograd import Variable\n","\n","from sklearn.metrics import accuracy_score\n","\n","import matplotlib.pyplot as plt\n","import cv2\n","from IPython.display import display\n","from PIL import Image\n","\n","from dataclasses import dataclass, field\n","from typing import Tuple, List\n","\n","import warnings\n","warnings.filterwarnings('ignore')\n","\n","from enum import Enum\n","import glob\n","\n","class ModelType(Enum):\n","  BEST = \"best\"\n","  LAST = \"last\"\n","\n","class DataType(Enum):\n","  TRAIN = \"train\"\n","  VAL = \"val\"\n","  TEST = \"test\"\n","\n","base_dir = \"/content/drive/MyDrive/DMS\"\n"]},{"cell_type":"markdown","metadata":{"id":"1Srd-RY9pcZE"},"source":["## 1-2. LSTM Input 형식으로 변환"]},{"cell_type":"markdown","metadata":{"id":"JwkJmAOOFgDF"},"source":["### Config 설정"]},{"cell_type":"code","source":["from dataclasses import dataclass\n","\n","@dataclass\n","class Config:\n","    case_name: str = \"bi-lstm_attention_ensemble_24f_yaw_flip_1.5\" # 바꿔야하는 부분\n","\n","    # 모델 구조\n","    lstm_num_layers: int = 3\n","    lstm_hidden_size: int = 512\n","    fc_hidden_size: int = 256\n","    dropout_rate: float = 0.2 # input-to-hidden (between layers)\n","    bidirectional: bool = True\n","\n","    # 학습 설정\n","    batch_size: int = 32\n","    epochs: int = 100\n","    learning_rate: float = 3e-4\n","    optimizer: str = \"adam\" # or \"sgd\", \"adamw\"\n","\n","    # 입력 데이터\n","    sequence_length: int = 24\n","    sliding_window_step: int = 24 # sliding window 사용 x -> seuqnce_length와 같은 값으로 설정\n","    features: list = field(default_factory=lambda: [\"mar\", \"ear\", \"yaw\", \"pitch\", \"phone_detected\"])\n","    labels: list = field(default_factory=lambda: [\"normal\", \"phonecall\", \"text\", \"yawn\"])\n","\n","    apply_yaw_inversion: bool = False\n","    apply_noise_jittering: bool = False\n","\n","    # 학습 제어 - 조기 종료 / 러닝레이트 스케줄러\n","    use_early_stopping: bool = True  # 조기 종료 사용 여부\n","    use_lr_scheduler: bool = False    # 학습률 스케줄러 사용 여부\n","    early_stopping_patience: int = 20 # early stopping 기준 epoch\n","    reduce_lr_factor: float = 0.5 # learning rate 감소 비율\n","    reduce_lr_patience: int = 7 # learning rate 감소 기준 epoch\n","\n","    # 랜덤시드 설정\n","    random_seed: int = 24\n","\n","    def __post_init__(self):\n","      self.results_save_path = f\"{base_dir}/runs/{self.case_name}\"\n","      self.model_save_path = f\"{self.results_save_path}/weights\"\n","\n","      os.makedirs(self.results_save_path, exist_ok=True)\n","      os.makedirs(self.model_save_path, exist_ok=True)\n","\n","      if self.sequence_length == 12:\n","        df_path = f'{base_dir}/data/splits/12frame_windows'\n","        self.group_col = 'groups_12'\n","      elif self.sequence_length == 24:\n","        df_path = f'{base_dir}/data/splits/24frame_windows'\n","        self.group_col = 'groups_24'\n","\n","      self.train = pd.read_csv(os.path.join(df_path, \"final_train.csv\"))\n","      self.validation = pd.read_csv(os.path.join(df_path, \"final_val.csv\"))\n","      self.test = pd.read_csv(os.path.join(df_path, \"final_test.csv\"))\n","\n","      # label_mapping\n","      self.label_encoding = {}\n","      self.label_decoding = {}\n","      for i, label in enumerate(self.labels): # [\"normal\", \"phonecall\", \"text\", \"yawn\"] 순서로 라벨 인코딩\n","          self.label_encoding[label] = i\n","          self.label_decoding[i] = label\n","\n","      # 디바이스 설정\n","      self.use_cuda = torch.cuda.is_available()\n","      self.device = torch.device(\"cuda\" if self.use_cuda else \"cpu\")\n","\n","cfg = Config()\n","# print(cfg.case_name) # 사용 예시"],"metadata":{"id":"5hKlc4kUp4l9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def set_random_seed(seed):\n","    torch.manual_seed(seed)  # PyTorch CPU 연산에 대한 시드 설정\n","    torch.cuda.manual_seed(seed)  # CUDA 연산에 대한 시드 설정 (GPU 사용 시)\n","    torch.cuda.manual_seed_all(seed)  # 여러 GPU를 사용하는 경우 모든 GPU에 동일한 시드 설정\n","    np.random.seed(seed)  # NumPy 연산에 대한 시드 설정\n","    random.seed(seed)  # Python 기본 random 모듈의 시드 설정\n","    torch.backends.cudnn.deterministic = True  # CuDNN 연산의 결정론적 동작 보장\n","    torch.backends.cudnn.benchmark = False  # 성능 최적화 비활성화 (재현성 보장)\n","\n","set_random_seed(cfg.random_seed)"],"metadata":{"id":"nnUAKflRWPoq"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"pRHMOaLpW7Y2"},"source":["### 데이터 로드"]},{"cell_type":"markdown","source":["### train, val, test 데이터셋 로드"],"metadata":{"id":"R1vpZJH9TRky"}},{"cell_type":"code","source":["train_df = cfg.train.copy()\n","val_df = cfg.validation.copy()\n","test_df = cfg.test.copy()"],"metadata":{"id":"LaskMuLUQ89h"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# train normal undersampling\n","train_df = train_df[((train_df['label'] == 'normal') &\n","                    (train_df[cfg.group_col].isin([0, 1]))) |\n","                    (train_df['label'] != 'normal')]"],"metadata":{"id":"eHUoDw4U9kQR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"OdLSCKeSrZAE"},"source":["### generate_sequence_dataset"]},{"cell_type":"code","source":["def generate_sequence_dataset(\n","    df: pd.DataFrame\n",") -> Tuple[np.ndarray, np.ndarray, List[Tuple]]:\n","    sequences, labels, metadata = [], [], []\n","\n","    for (label, clip_id), clip_df in df.groupby(['label', 'clip_id']):\n","        clip_df = clip_df.sort_values('frame_no')\n","        frame_values = clip_df[cfg.features].values\n","\n","        if len(frame_values) < cfg.sequence_length:\n","            continue\n","\n","        for i in range(0, len(frame_values) - cfg.sequence_length + 1, cfg.sliding_window_step):\n","            seq = frame_values[i:i + cfg.sequence_length]\n","            if seq.shape[0] == cfg.sequence_length:\n","                sequences.append(seq)\n","                labels.append(cfg.label_encoding[label])\n","                # 학습 후 오분류 데이터 확인을 위한 시작 프레임 번호 저장\n","                metadata.append((label, clip_id, clip_df.iloc[i]['frame_no']))\n","\n","    return TensorDataset(torch.tensor(sequences, dtype=torch.float32), torch.tensor(labels, dtype=torch.long)), metadata"],"metadata":{"id":"SbY5UTS4T39f"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"iGaRQUVjFDPA"},"source":["### DataLoader params"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"safri8zEE8Qs"},"outputs":[],"source":["train_params = {\n","    \"batch_size\": cfg.batch_size,\n","    \"shuffle\": True,\n","    \"num_workers\": 4,\n","    \"pin_memory\": cfg.use_cuda,\n","    \"persistent_workers\": cfg.use_cuda,\n","    \"prefetch_factor\": 2 if cfg.use_cuda else None,\n","    \"drop_last\": True,\n","}\n","\n","test_params = {\n","    \"batch_size\": cfg.batch_size,\n","    \"shuffle\": False,\n","    \"num_workers\": 0,\n","    \"pin_memory\": cfg.use_cuda\n","}"]},{"cell_type":"code","source":["def flip_yaw_sequence(seq: np.ndarray, yaw_index: int) -> np.ndarray:\n","    \"\"\"시퀀스의 yaw 값을 좌우 반전\"\"\"\n","    seq_flipped = seq.copy()\n","    seq_flipped[:, yaw_index] = -seq[:, yaw_index]\n","    return seq_flipped"],"metadata":{"id":"x2V13C-IUbk5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["'''\n","# DataLoader 생성 (배치 단위로 데이터를 나누기 위해 사용)\n","train_dataset, train_metadata = generate_sequence_dataset(train_df)\n","\n","# 기존 시퀀스 및 라벨 불러오기\n","X_seq = train_dataset.tensors[0].numpy()\n","y_seq = train_dataset.tensors[1].numpy()\n","\n","# 증강 대상 클래스\n","target_classes = [2, 3]  # 2: text, 3: yawn\n","yaw_index = cfg.features.index('yaw')\n","flip_multiplier = 1.5\n","\n","aug_seqs = []\n","aug_labels = []\n","\n","for cls in target_classes:\n","    class_seqs = [x for x, y in zip(X_seq, y_seq) if y == cls]\n","    current_count = len(class_seqs)\n","    target_count = int(current_count * flip_multiplier)\n","    need = target_count - current_count\n","\n","    print(f\"[Yaw Flip] Class {cls} 증강: {current_count} → {target_count} (추가 {need})\")\n","\n","    sampled = np.random.choice(len(class_seqs), size=need, replace=True)\n","    for i in sampled:\n","        flipped = flip_yaw_sequence(class_seqs[i], yaw_index)\n","        aug_seqs.append(flipped)\n","        aug_labels.append(cls)\n","\n","# numpy 형태로 변환\n","X_aug = np.stack(aug_seqs)\n","y_aug = np.array(aug_labels)\n","\n","# 원본 + 증강 합치기\n","X_total = np.concatenate([X_seq, X_aug], axis=0)\n","y_total = np.concatenate([y_seq, y_aug], axis=0)\n","\n","# PyTorch Dataset & DataLoader 생성\n","train_dataset_yaw_flip = TensorDataset(torch.tensor(X_total, dtype=torch.float32),\n","                                       torch.tensor(y_total, dtype=torch.long))\n","train_loader = DataLoader(train_dataset_yaw_flip, **train_params)\n","'''"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":203},"id":"HnQq6pVJUN1J","executionInfo":{"status":"ok","timestamp":1750302245990,"user_tz":-540,"elapsed":88,"user":{"displayName":"정현봉","userId":"00800786436397366756"}},"outputId":"04ca4eb7-bfb4-415d-e6d1-b28bd2eee401"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n# DataLoader 생성 (배치 단위로 데이터를 나누기 위해 사용)\\ntrain_dataset, train_metadata = generate_sequence_dataset(train_df)\\n\\n# 기존 시퀀스 및 라벨 불러오기\\nX_seq = train_dataset.tensors[0].numpy()\\ny_seq = train_dataset.tensors[1].numpy()\\n\\n# 증강 대상 클래스\\ntarget_classes = [2, 3]  # 2: text, 3: yawn\\nyaw_index = cfg.features.index(\\'yaw\\')\\nflip_multiplier = 1.5\\n\\naug_seqs = []\\naug_labels = []\\n\\nfor cls in target_classes:\\n    class_seqs = [x for x, y in zip(X_seq, y_seq) if y == cls]\\n    current_count = len(class_seqs)\\n    target_count = int(current_count * flip_multiplier)\\n    need = target_count - current_count\\n\\n    print(f\"[Yaw Flip] Class {cls} 증강: {current_count} → {target_count} (추가 {need})\")\\n\\n    sampled = np.random.choice(len(class_seqs), size=need, replace=True)\\n    for i in sampled:\\n        flipped = flip_yaw_sequence(class_seqs[i], yaw_index)\\n        aug_seqs.append(flipped)\\n        aug_labels.append(cls)\\n\\n# numpy 형태로 변환\\nX_aug = np.stack(aug_seqs)\\ny_aug = np.array(aug_labels)\\n\\n# 원본 + 증강 합치기\\nX_total = np.concatenate([X_seq, X_aug], axis=0)\\ny_total = np.concatenate([y_seq, y_aug], axis=0)\\n\\n# PyTorch Dataset & DataLoader 생성\\ntrain_dataset_yaw_flip = TensorDataset(torch.tensor(X_total, dtype=torch.float32),\\n                                       torch.tensor(y_total, dtype=torch.long))\\ntrain_loader = DataLoader(train_dataset_yaw_flip, **train_params)\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["### 트레인 데이터셋 증강 함수"],"metadata":{"id":"5vJqWqdZyQvM"}},{"cell_type":"code","source":["def get_augmented_train_loader(train_fold_df, cfg, train_params, flip_multiplier=1.5, target_classes=[2, 3]):\n","    \"\"\"\n","    yaw 좌우 반전을 이용한 데이터 증강 및 DataLoader 생성\n","    \"\"\"\n","    # 1. 기존 시퀀스 및 라벨 불러오기\n","    train_dataset, _ = generate_sequence_dataset(train_fold_df)\n","    X_seq = train_dataset.tensors[0].numpy()\n","    y_seq = train_dataset.tensors[1].numpy()\n","\n","    yaw_index = cfg.features.index('yaw')  # yaw의 인덱스\n","\n","    aug_seqs = []\n","    aug_labels = []\n","\n","    for cls in target_classes:\n","        class_seqs = [x for x, y in zip(X_seq, y_seq) if y == cls]\n","        current_count = len(class_seqs)\n","        target_count = int(current_count * flip_multiplier)\n","        need = target_count - current_count\n","\n","        print(f\"[Yaw Flip] Class {cls} 증강: {current_count} → {target_count} (추가 {need})\")\n","\n","        sampled = np.random.choice(len(class_seqs), size=need, replace=True)\n","        for i in sampled:\n","            flipped = flip_yaw_sequence(class_seqs[i], yaw_index)\n","            aug_seqs.append(flipped)\n","            aug_labels.append(cls)\n","\n","    # 2. 증강 데이터 결합\n","    if aug_seqs:  # 증강이 수행된 경우만\n","        X_aug = np.stack(aug_seqs)\n","        y_aug = np.array(aug_labels)\n","\n","        X_total = np.concatenate([X_seq, X_aug], axis=0)\n","        y_total = np.concatenate([y_seq, y_aug], axis=0)\n","    else:\n","        X_total = X_seq\n","        y_total = y_seq\n","\n","    # 3. PyTorch TensorDataset 및 DataLoader 생성\n","    dataset = TensorDataset(torch.tensor(X_total, dtype=torch.float32),\n","                            torch.tensor(y_total, dtype=torch.long))\n","    train_loader = DataLoader(dataset, **train_params)\n","\n","    return train_loader\n"],"metadata":{"id":"N3x6wgMjt5mx"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"fROYd8X1zYa7"},"source":["## 1-3. LSTM 학습 설정"]},{"cell_type":"markdown","source":["### 모델 정의"],"metadata":{"id":"KnLIHJVEBYwV"}},{"cell_type":"code","source":["# Attention 모듈 정의\n","class Attention(nn.Module):\n","    def __init__(self, hidden_dim):\n","        super(Attention, self).__init__()\n","        self.attn = nn.Linear(hidden_dim, hidden_dim)\n","        self.context = nn.Linear(hidden_dim, 1, bias=False)\n","\n","    def forward(self, lstm_output):\n","        # lstm_output: [B, T, H]\n","        score = torch.tanh(self.attn(lstm_output))         # [B, T, H]\n","        attn_weights = torch.softmax(self.context(score), dim=1)  # [B, T, 1]\n","        attended_output = torch.sum(attn_weights * lstm_output, dim=1)  # [B, H]\n","        return attended_output, attn_weights  # context vector, weights"],"metadata":{"id":"LGtL2qsUnhI0"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AOK3mN2xHwtt"},"outputs":[],"source":["# LSTM 모델 정의\n","class DecoderRNN(nn.Module):\n","    def __init__(self):\n","        super(DecoderRNN, self).__init__()\n","\n","        self.RNN_input_size = len(cfg.features)\n","        self.h_RNN_layers = cfg.lstm_num_layers\n","        self.h_RNN = cfg.lstm_hidden_size\n","        self.h_FC_dim = cfg.fc_hidden_size\n","        self.drop_p = cfg.dropout_rate\n","        self.num_classes = len(cfg.labels)\n","        self.bidirectional = cfg.bidirectional\n","\n","        self.LSTM = nn.LSTM(\n","            input_size=self.RNN_input_size,\n","            hidden_size=self.h_RNN,\n","            num_layers=self.h_RNN_layers,\n","            batch_first=True,\n","            bidirectional=self.bidirectional\n","        )\n","\n","        lstm_output_dim = self.h_RNN * (2 if self.bidirectional else 1)\n","\n","        self.attention = Attention(lstm_output_dim) # Attention 추가\n","        self.fc1 = nn.Linear(lstm_output_dim, self.h_FC_dim)\n","        self.bn1 = nn.BatchNorm1d(self.h_FC_dim)  # Batch Normalization 추가\n","        self.fc2 = nn.Linear(self.h_FC_dim, self.num_classes)\n","        self.dropout = nn.Dropout(p=self.drop_p)\n","\n","    def forward(self, x_RNN):\n","        self.LSTM.flatten_parameters()\n","        out, _ = self.LSTM(x_RNN)  # (batch, seq_len, hidden*2)\n","\n","        attn_out, attn_weights = self.attention(out)  # attn_out: [B, H]\n","\n","        # FC layers\n","        x = self.fc1(attn_out)\n","        x = self.bn1(x)\n","        x = F.relu(x)\n","        x = self.dropout(x)\n","        x = self.fc2(x)\n","\n","        return x, attn_weights  # CrossEntropyLoss 사용 (Softmax 없음), attn_weights 함께 반환"]},{"cell_type":"markdown","metadata":{"id":"RXocvVKtkOMG"},"source":["### optimizer"]},{"cell_type":"markdown","source":["- 모델 구조 비교: Adam 고정\n","- 정규화/튜닝 단계: Adam, AdamW, SGD 비교\n","- 최종 성능 극대화: weight decay, scheduler, mixed precision 등과 조합 실험"],"metadata":{"id":"JX_Y9TybhXI6"}},{"cell_type":"code","source":["def get_optimizer(model):\n","    if cfg.optimizer.lower() == \"adam\":\n","        return optim.Adam(model.parameters(), lr=cfg.learning_rate)\n","    elif cfg.optimizer.lower() == \"sgd\":\n","        return optim.SGD(model.parameters(), lr=cfg.learning_rate, momentum=0.9)\n","    elif cfg.optimizer.lower() == \"adamw\":\n","        return optim.AdamW(model.parameters(), lr=cfg.learning_rate)\n","    else:\n","        raise ValueError(f\"Unsupported optimizer: {cfg.optimizer}\")\n","\n","def get_criterion():\n","  return nn.CrossEntropyLoss()"],"metadata":{"id":"3gHz7kiLhVVh"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 학습 스케줄러 설정"],"metadata":{"id":"HjZoYJFvffDM"}},{"cell_type":"code","source":["def get_scheduler(optimizer):\n","    return optim.lr_scheduler.ReduceLROnPlateau(\n","        optimizer,\n","        mode=\"min\",  # 'min' for loss, 'max' for accuracy/f1\n","        factor=cfg.reduce_lr_factor,\n","        patience=cfg.reduce_lr_patience,\n",")"],"metadata":{"id":"svwn6KqlfiK_"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ne6SnCpE5sMd"},"source":["### Early Stopping 설정"]},{"cell_type":"code","source":["class EarlyStopping:\n","    def __init__(self, mode: str = \"min\"):\n","        self.patience = cfg.early_stopping_patience\n","        self.mode = mode\n","        self.best_score = np.inf if mode == \"min\" else -np.inf\n","        self.counter = 0\n","        self.early_stop = False\n","\n","    def step(self, current_score: float) -> bool:\n","        \"\"\"\n","        평가 점수(current_score)를 받아 early stopping 여부를 업데이트함.\n","        Returns:\n","            True if training should stop\n","        \"\"\"\n","        if self.mode == \"min\":\n","            is_improvement = current_score < self.best_score\n","        else:  # \"max\"\n","            is_improvement = current_score > self.best_score\n","\n","        if is_improvement:\n","            self.best_score = current_score\n","            self.counter = 0\n","        else:\n","            self.counter += 1\n","            if self.counter >= self.patience:\n","                self.early_stop = True\n","\n","        return self.early_stop"],"metadata":{"id":"cOHa2ZkNgW2U"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"0XTNDoMjMh0Q"},"source":["## 1-4 학습 진행"]},{"cell_type":"markdown","metadata":{"id":"uX8o8vwQMlXU"},"source":["-  Gradient Clipping 추가 (torch.nn.utils.clip_grad_norm_()) → 폭발적인 기울기(Gradient Explosion) 방지\n","- 모델 저장 기능 추가 (torch.save()) → Best Loss 갱신 시 자동 저장"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0R88mx_dea0I"},"outputs":[],"source":["def save_model(model, optimizer, epoch, loss, fold, model_type): # model_type: \"best\", \"last\"\n","    model_filename = f\"{cfg.model_save_path}/{model_type}_model_{fold}.pth\"  # 저장 파일명\n","\n","    torch.save({\n","        'epoch': epoch,\n","        'model_state_dict': model.state_dict(),\n","        'optimizer_state_dict': optimizer.state_dict(),\n","        'loss': loss\n","    }, model_filename)\n","\n","    print(f\"💾 Model Updated! Saved at {model_filename} (Loss: {loss:.4f})\")\n","\n","def save_training_results(\n","        train_losses,\n","        train_scores,\n","        val_losses,\n","        val_scores,\n","        fold\n","        ):\n","    \"\"\"\n","    학습 과정의 손실(loss)과 정확도(score)를 저장하는 함수\n","    \"\"\"\n","    results_df = pd.DataFrame({\n","        \"epoch\": list(range(1, len(train_losses) + 1)),\n","        \"train_loss\": train_losses,\n","        \"train_accuracy\": train_scores,\n","        \"val_loss\": val_losses,\n","        \"val_accuracy\": val_scores\n","    })\n","\n","    results_df.to_csv(f\"{cfg.results_save_path}/training_results_{fold}.csv\", index=False)\n","    print(f\"💾 Training results saved at {cfg.results_save_path}/training_results_{fold}.csv\")"]},{"cell_type":"markdown","metadata":{"id":"B3TL3Dy7bxnt"},"source":["### epoch마다 validation data로 성능평가\n","- 다음 기술을 적용하는 기준: Validation data Loss\n","    - validation data 기준으로 best model 선정\n","    - 모델 저장 (Best Loss 갱신 시)"]},{"cell_type":"markdown","source":["### train & validate"],"metadata":{"id":"ve-1oy5X7SVB"}},{"cell_type":"code","source":["def train(model, device, train_loader, optimizer, criterion, epoch):\n","    model.train()\n","    losses, scores = [], []\n","\n","    for X, y in tqdm(train_loader, desc=f\"Epoch {epoch+1} [Train]\"):\n","        X, y = X.to(device), y.to(device).long()\n","\n","        optimizer.zero_grad()\n","        output = model(X)\n","\n","        # 튜플 처리\n","        if isinstance(output, tuple):\n","            output = output[0]\n","\n","        loss = criterion(output, y)\n","        loss.backward() # 역전파\n","\n","        torch.nn.utils.clip_grad_norm_(model.parameters(), max_norm=1.0)  #  Gradient Clipping\n","        optimizer.step()\n","\n","        losses.append(loss.item())\n","\n","        # 정확도 계산\n","        y_pred = torch.argmax(output, dim=1)\n","        acc = accuracy_score(y.cpu().numpy(), y_pred.cpu().numpy())\n","        scores.append(acc)\n","\n","    avg_loss = sum(losses) / len(losses)\n","    avg_acc = sum(scores) / len(scores) * 100\n","\n","    print(f\"✅ Train Epoch {epoch+1} Finished - Avg Loss: {avg_loss:.4f}, Avg Acc: {avg_acc:.2f}%\")\n","\n","    return avg_loss, avg_acc  # 학습 Loss 및 Accuracy 반환\n","\n","def validate(model, device, criterion, val_loader):\n","    model.eval()\n","    losses, scores = [], []\n","\n","    with torch.no_grad():\n","        for X, y in val_loader:\n","            X, y = X.to(device), y.to(device).long()\n","            output = model(X)\n","\n","            # 튜플 처리\n","            if isinstance(output, tuple):\n","                output = output[0]\n","            loss = criterion(output, y)\n","\n","            losses.append(loss.item())\n","\n","            y_pred = torch.argmax(output, dim=1)\n","            acc = accuracy_score(y.cpu().numpy(), y_pred.cpu().numpy())\n","            scores.append(acc)\n","\n","    avg_loss = sum(losses) / len(losses)\n","    avg_acc = sum(scores) / len(scores) * 100\n","\n","    print(f\"✅ Validation Finished - Avg Loss: {avg_loss:.4f}, Avg Acc: {avg_acc:.2f}%\")\n","\n","    return avg_loss, avg_acc  # 검증 Loss 및 Accuracy 반환"],"metadata":{"id":"cb6g45rd7Td3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 전체 학습 실행 코드\n","def train_and_validate(model, train_loader, val_loader, optimizer, criterion, fold, scheduler=None):\n","    best_loss = np.inf\n","\n","    train_losses, train_scores = [], []\n","    val_losses, val_scores = [], []\n","\n","    for epoch in range(cfg.epochs):\n","        # 학습 단계\n","        train_loss, train_score = train(\n","            model=model,\n","            device=cfg.device,\n","            train_loader=train_loader,\n","            optimizer=optimizer,\n","            criterion=criterion,\n","            epoch=epoch\n","        )\n","\n","        val_loss, val_score = validate(\n","            model=model,\n","            device=cfg.device,\n","            criterion=criterion,\n","            val_loader=val_loader\n","        )\n","\n","        train_losses.append(train_loss)\n","        train_scores.append(train_score)\n","        val_losses.append(val_loss)\n","        val_scores.append(val_score)\n","\n","        # 학습률 감소 적용\n","        if cfg.use_lr_scheduler:\n","          pass\n","\n","        # Best model 저장\n","        if val_loss < best_loss:\n","            best_loss = val_loss\n","            patience_counter = 0\n","\n","            save_model(\n","                model=model,\n","                optimizer=optimizer,\n","                epoch=epoch,\n","                loss=best_loss,\n","                fold=fold,\n","                model_type=\"best\"\n","            )\n","\n","            print(f\"Best Loss Updated! : {best_loss}\")\n","\n","        # Early Stopping 체크\n","        if cfg.use_early_stopping:\n","          pass\n","\n","    # 마지막 모델 저장\n","    save_model(\n","      model=model,\n","      optimizer=optimizer,\n","      epoch=epoch,\n","      loss=val_loss,\n","      fold=fold,\n","      model_type=\"last\"\n","    )\n","\n","    # 학습 결과 저장\n","    save_training_results(\n","      train_losses,\n","      train_scores,\n","      val_losses,\n","      val_scores,\n","      fold=fold\n","    )\n","\n","    return train_losses, train_scores, val_losses, val_scores"],"metadata":{"id":"IWnfoFlV9LHG"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 학습 진행"],"metadata":{"id":"Ydtr1Fk9NxD4"}},{"cell_type":"code","source":["all_train_losses, all_train_scores, all_val_losses, all_val_scores = [], [], [], []\n","\n","for fold in range(5):\n","    print(f\"\\n===== Fold {fold} =====\")\n","\n","    model = DecoderRNN()\n","    model.to(cfg.device)\n","\n","    optimizer = get_optimizer(model)\n","    criterion = get_criterion()\n","\n","    scheduler = get_scheduler(optimizer, cfg) if cfg.use_lr_scheduler else None\n","\n","    # 1. Fold 나누기\n","    train_fold_df = train_df[train_df['fold'] != fold]\n","    val_fold_df = train_df[train_df['fold'] == fold]\n","\n","    # 2, 3. 시퀀스 데이터 생성, DataLoader 생성\n","    train_loader = get_augmented_train_loader(train_fold_df, cfg, train_params)\n","\n","    val_dataset, _ = generate_sequence_dataset(val_fold_df)\n","    val_loader = DataLoader(val_dataset, **test_params)\n","\n","    # 4. 모델 및 학습 객체 초기화\n","    model.to(cfg.device)\n","\n","    # 5. 학습 및 검증 실행\n","    train_losses, train_scores, val_losses, val_scores = train_and_validate(\n","        model, train_loader, val_loader, optimizer, criterion, fold, scheduler\n","    )\n","\n","    all_train_losses.append(train_losses)\n","    all_train_scores.append(train_scores)\n","    all_val_losses.append(val_losses)\n","    all_val_scores.append(val_scores)\n"],"metadata":{"id":"dgg3e6fPLpl4","executionInfo":{"status":"ok","timestamp":1750302246177,"user_tz":-540,"elapsed":52,"user":{"displayName":"정현봉","userId":"00800786436397366756"}},"colab":{"base_uri":"https://localhost:8080/","height":203},"outputId":"81c694a5-03fe-4a1e-e016-c93f7f418da9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\nall_train_losses, all_train_scores, all_val_losses, all_val_scores = [], [], [], []\\n\\nfor fold in range(5):\\n    print(f\"\\n===== Fold {fold} =====\")\\n\\n    model = DecoderRNN()\\n    model.to(cfg.device)\\n\\n    optimizer = get_optimizer(model)\\n    criterion = get_criterion()\\n\\n    scheduler = get_scheduler(optimizer, cfg) if cfg.use_lr_scheduler else None\\n\\n    # 1. Fold 나누기\\n    train_fold_df = train_df[train_df[\\'fold\\'] != fold]\\n    val_fold_df = train_df[train_df[\\'fold\\'] == fold]\\n\\n    # 2, 3. 시퀀스 데이터 생성, DataLoader 생성\\n    train_loader = get_augmented_train_loader(train_fold_df, cfg, train_params)\\n\\n    val_dataset, _ = generate_sequence_dataset(val_fold_df)\\n    val_loader = DataLoader(val_dataset, **test_params)\\n\\n    # 4. 모델 및 학습 객체 초기화\\n    model.to(cfg.device)\\n\\n    # 5. 학습 및 검증 실행\\n    train_losses, train_scores, val_losses, val_scores = train_and_validate(\\n        model, train_loader, val_loader, optimizer, criterion, fold, scheduler\\n    )\\n\\n    all_train_losses.append(train_losses)\\n    all_train_scores.append(train_scores)\\n    all_val_losses.append(val_losses)\\n    all_val_scores.append(val_scores)\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["# fold 4에서 에러(배치 크기가 1이라 통계 계산이 불가능한 샘플 존재)\n","# DataLoader에서 drop_last=True 로 설정 후 fold 4만 따로 학습\n","# 다른 실험할 때는 이 코드 셀 삭제해야 함\n","\n","\n","# print(f\"\\n===== Fold {4} =====\")\n","\n","# model = DecoderRNN()\n","# model.to(cfg.device)\n","\n","# optimizer = get_optimizer(model)\n","# criterion = get_criterion()\n","\n","# scheduler = get_scheduler(optimizer, cfg) if cfg.use_lr_scheduler else None\n","\n","# # 1. Fold 나누기\n","# train_fold_df = train_df[train_df['fold'] != 4]\n","# val_fold_df = train_df[train_df['fold'] == 4]\n","\n","# # 2. 시퀀스 데이터 생성\n","# train_dataset, _ = generate_sequence_dataset(train_fold_df)\n","# val_dataset, _ = generate_sequence_dataset(val_fold_df)\n","\n","# # 3. DataLoader 생성\n","# train_loader = DataLoader(train_dataset, **train_params)\n","# val_loader = DataLoader(val_dataset, **test_params)\n","\n","# # 4. 모델 및 학습 객체 초기화\n","# model.to(cfg.device)\n","\n","# # 5. 학습 및 검증 실행\n","# train_losses, train_scores, val_losses, val_scores = train_and_validate(\n","#     model, train_loader, val_loader, optimizer, criterion, fold, scheduler\n","# )\n","\n","# all_train_losses.append(train_losses)\n","# all_train_scores.append(train_scores)\n","# all_val_losses.append(val_losses)\n","# all_val_scores.append(val_scores)"],"metadata":{"id":"BkqtVmOfnZca"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"HGuUoHMge_Ln"},"source":["# 2. 결과 시각화"]},{"cell_type":"markdown","source":["## loss, accuracy 시각화"],"metadata":{"id":"RolazQpE-q0S"}},{"cell_type":"code","source":["def plot_train_val_results_per_fold(\n","    all_train_losses,\n","    all_train_scores,\n","    all_val_losses,\n","    all_val_scores\n","):\n","    \"\"\"\n","    Fold별로 개별 학습 결과(Loss, Score)를 시각화하는 함수\n","    - 각 fold를 한 행에 표현 (5행)\n","    \"\"\"\n","    import numpy as np\n","    import matplotlib.pyplot as plt\n","\n","    num_folds = len(all_train_losses)\n","    epochs = np.arange(1, len(all_train_losses[0]) + 1)\n","\n","    fig, axes = plt.subplots(nrows=num_folds, ncols=2, figsize=(12, 4 * num_folds))\n","\n","    for fold in range(num_folds):\n","        # Loss\n","        axes[fold][0].plot(epochs, all_train_losses[fold], label='Train Loss', marker='o')\n","        axes[fold][0].plot(epochs, all_val_losses[fold], label='Val Loss', marker='s', linestyle='--')\n","        axes[fold][0].set_title(f'Fold {fold} - Loss')\n","        axes[fold][0].set_xlabel('Epoch')\n","        axes[fold][0].set_ylabel('Loss')\n","        axes[fold][0].legend()\n","        axes[fold][0].grid(True)\n","\n","        # Score\n","        axes[fold][1].plot(epochs, all_train_scores[fold], label='Train Score', marker='o')\n","        axes[fold][1].plot(epochs, all_val_scores[fold], label='Val Score', marker='s', linestyle='--')\n","        axes[fold][1].set_title(f'Fold {fold} - Score')\n","        axes[fold][1].set_xlabel('Epoch')\n","        axes[fold][1].set_ylabel('Score')\n","        axes[fold][1].legend()\n","        axes[fold][1].grid(True)\n","\n","    plt.tight_layout()\n","    plot_path = os.path.join(cfg.results_save_path, f\"trainval_curve.png\")\n","    plt.savefig(plot_path, dpi=300)\n","    plt.show()\n","\n","    print(f\"📊 Fold별 학습 결과 시각화 저장 완료: {plot_path}\")\n","'''\n","plot_train_val_results_per_fold(\n","    all_train_losses,\n","    all_train_scores,\n","    all_val_losses,\n","    all_val_scores\n",")\n","'''"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":54},"id":"llgQuP59NYOQ","executionInfo":{"status":"ok","timestamp":1750302246185,"user_tz":-540,"elapsed":12,"user":{"displayName":"정현봉","userId":"00800786436397366756"}},"outputId":"76283597-fb0d-4154-ab0d-3188e462957e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\nplot_train_val_results_per_fold(\\n    all_train_losses,\\n    all_train_scores,\\n    all_val_losses,\\n    all_val_scores\\n)\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","metadata":{"id":"RvogPajT106l"},"source":["## confusion matrix, classification_report 시각화"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PgKzQHFH84m0"},"outputs":[],"source":["def load_all_best_models(model_class, device) -> List[torch.nn.Module]:\n","    \"\"\"폴더 내 모든 best_model_*.pth 파일을 불러와 모델 리스트 반환\"\"\"\n","    model_list = []\n","    pattern = os.path.join(cfg.model_save_path, \"best_model_*.pth\")\n","    model_paths = sorted(glob.glob(pattern))\n","\n","    for path in model_paths:\n","        model = model_class().to(device)\n","        checkpoint = torch.load(path, map_location=device)\n","        model.load_state_dict(checkpoint[\"model_state_dict\"])\n","        model.eval()\n","        model_list.append(model)\n","        print(f\"✅ Loaded: {os.path.basename(path)}\")\n","\n","    return model_list\n","\n","# Confusion Matrix 시각화 함수\n","def plot_confusion_matrix_and_report(\n","    y_true,\n","    y_pred,\n","    data_type,\n","    model_type=ModelType.BEST\n","    ):\n","    \"\"\"\n","    Confusion Matrix를 그리는 함수\n","    \"\"\"\n","    # == confusion matrix ==\n","    cm = confusion_matrix(y_true, y_pred)\n","    plt.figure(figsize=(6, 6))\n","    sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=cfg.labels, yticklabels=cfg.labels)\n","    plt.xlabel(\"Predicted Label\")\n","    plt.ylabel(\"True Label\")\n","    plt.title(\"Confusion Matrix\")\n","\n","    file_prefix = f\"{model_type.value}_{data_type.value}\"\n","    cm_path = os.path.join(cfg.results_save_path, f\"{file_prefix}_confusion_matrix.png\")\n","    plt.savefig(cm_path, dpi=300)  # 이미지 저장\n","    plt.show()\n","    plt.close()\n","    print(f\"✅ Confusion Matrix saved at: {cm_path}\")\n","\n","    # == classification report ==\n","    report = classification_report(y_true, y_pred, target_names=cfg.labels, output_dict=True)\n","    report_df = pd.DataFrame(report).transpose()\n","\n","    # 시각화\n","    fig, ax = plt.subplots(figsize=(10, len(report_df) * 0.6))\n","    ax.axis('off')\n","\n","    table = ax.table(\n","        cellText=report_df.round(3).values,\n","        colLabels=report_df.columns,\n","        rowLabels=report_df.index,\n","        loc='center',\n","        cellLoc='center'\n","    )\n","\n","    # 헤더 설정\n","    for j in range(len(report_df.columns)):\n","        cell = table[0, j]\n","        cell.set_facecolor('#d0d0d0')\n","        cell.set_fontsize(13)\n","        cell.set_text_props(weight='bold')\n","\n","    # 셀 스타일 조정\n","    for i in range(len(report_df)):\n","        for j in range(len(report_df.columns)):\n","            cell = table[i + 1, j]\n","            cell.set_fontsize(12)\n","            cell.set_height(0.09)\n","            cell.set_facecolor('#a9a9a9' if i % 2 == 0 else '#ffffff')\n","\n","    # 행 라벨 스타일 조정\n","    for i in range(len(report_df)):\n","        row_label = table[i + 1, -1] if (i + 1, -1) in table._cells else table[i + 1, 0]\n","        row_label.set_fontsize(12)\n","        row_label.set_text_props(weight='bold')\n","        row_label.set_height(0.09)\n","\n","    cr_path = os.path.join(cfg.results_save_path, f\"{file_prefix}_classification_report.png\")\n","    plt.savefig(cr_path, dpi=300, bbox_inches='tight')\n","    plt.show()\n","    plt.close()\n","    print(f\"📋 Classification Report table saved at: {cr_path}\")\n","\n","\n","def evaluate_models(models: List[torch.nn.Module], device, data_loader, data_type, model_type=ModelType.BEST):\n","    \"\"\"\n","    여러 모델의 softmax 확률을 평균 내어 예측하는 앙상블 평가 함수\n","    \"\"\"\n","    for model in models:\n","        model.eval()\n","\n","    all_preds = []\n","    all_labels = []\n","    all_probs = []\n","\n","    with torch.no_grad():\n","        for x_batch, y_batch in data_loader:\n","            x_batch, y_batch = x_batch.to(device), y_batch.to(device)\n","\n","            # 모델별 확률 예측값 저장\n","            ensemble_probs = []\n","\n","            for model in models:\n","                logits = model(x_batch)\n","                if isinstance(logits, tuple):\n","                    logits = logits[0]\n","                probs = F.softmax(logits, dim=1)\n","                ensemble_probs.append(probs)\n","\n","            # 확률 평균 (batch_size, num_classes)\n","            avg_probs = torch.stack(ensemble_probs).mean(dim=0)\n","\n","            y_pred_classes = torch.argmax(avg_probs, dim=1)\n","\n","            all_preds.extend(y_pred_classes.cpu().numpy())\n","            all_labels.extend(y_batch.cpu().numpy())\n","            all_probs.extend(avg_probs.cpu().numpy())\n","\n","    # Confusion Matrix 및 Classification Report\n","    plot_confusion_matrix_and_report(all_labels, all_preds, data_type, model_type)\n","\n","    return all_labels, all_preds, np.array(all_probs)"]},{"cell_type":"code","source":["models = load_all_best_models(DecoderRNN, cfg.device) # best model load"],"metadata":{"id":"x70cCjt985w2","executionInfo":{"status":"ok","timestamp":1750302277068,"user_tz":-540,"elapsed":30858,"user":{"displayName":"정현봉","userId":"00800786436397366756"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"d7bc0228-b9fc-429e-b30b-c8f703926772"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["✅ Loaded: best_model_0.pth\n","✅ Loaded: best_model_1.pth\n","✅ Loaded: best_model_2.pth\n","✅ Loaded: best_model_3.pth\n","✅ Loaded: best_model_4.pth\n"]}]},{"cell_type":"code","source":["eval_params = train_params.copy()\n","\n","# 평가용은 drop_last = False로 설정\n","eval_params['drop_last'] = False"],"metadata":{"id":"JFWq7dK0Hrf1"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":947},"id":"5A0UX6Guuf14","outputId":"992a9beb-6194-436f-8e75-81b284a99834","executionInfo":{"status":"ok","timestamp":1750302598340,"user_tz":-540,"elapsed":321262,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["[Yaw Flip] Class 2 증강: 334 → 501 (추가 167)\n","[Yaw Flip] Class 3 증강: 135 → 202 (추가 67)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 2 Axes>"],"image/png":"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\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["✅ Confusion Matrix saved at: /content/drive/MyDrive/DMS/runs/bi-lstm_attention_ensemble_24f_yaw_flip_1.5/best_train_confusion_matrix.png\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x420 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["📋 Classification Report table saved at: /content/drive/MyDrive/DMS/runs/bi-lstm_attention_ensemble_24f_yaw_flip_1.5/best_train_classification_report.png\n"]}],"source":["# DataLoader 생성 (배치 단위로 데이터를 나누기 위해 사용)\n","train_loader = get_augmented_train_loader(train_df, cfg, eval_params)\n","val_dataset, val_metadata = generate_sequence_dataset(val_df)\n","test_dataset, test_metadata = generate_sequence_dataset(test_df)\n","\n","val_loader = DataLoader(val_dataset, **test_params)\n","test_loader = DataLoader(test_dataset, **test_params)\n","\n","train_labels, train_preds, train_probs = evaluate_models(models, cfg.device, train_loader, DataType.TRAIN)"]},{"cell_type":"code","source":["val_labels, val_preds, val_probs = evaluate_models(models, cfg.device, val_loader, DataType.VAL)"],"metadata":{"id":"9HvP8lJo-W60","executionInfo":{"status":"ok","timestamp":1750302662482,"user_tz":-540,"elapsed":64135,"user":{"displayName":"정현봉","userId":"00800786436397366756"}},"colab":{"base_uri":"https://localhost:8080/","height":910},"outputId":"cdd83797-8b84-43dd-85be-0ec200783346"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["✅ Confusion Matrix saved at: /content/drive/MyDrive/DMS/runs/bi-lstm_attention_ensemble_24f_yaw_flip_1.5/best_val_confusion_matrix.png\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x420 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA7MAAAFXCAYAAABwVBnSAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAlYhJREFUeJzs3XlcT9n/B/BX+yIttEdZCtGIQoXCWLMOk53szFjGMpgxGNuYaTAYu8HIyJYYRJYsUclW2XeVyJJSKu197u+Pfp/77aN9n/R6Ph4eU+eee+65zX1/Pvd977nnygmCIICIiIiIiIioCpGv7A4QERERERERFReTWSIiIiIiIqpymMwSERERERFRlcNkloiIiIiIiKocJrNERERERERU5TCZJSIiIiIioiqHySwRERERERFVOUxmiYiIiIiIqMphMktERERERERVDpNZIiIiIiIiqnKYzBIREREREVGVw2SWiIiIiIiIqhwms0RERERERFTlMJklIiIiIiKiKofJLBEREREREVU5TGaJiIiIiIioymEyS0RERERERFUOk1kiIiIiIiKqcpjMEhERERERUZXDZJaIiIiIiIiqHCazREREREREVOUwmSUiIiIiIqIqh8ksERERERERVTlMZomIiIiIiKjKYTJLREREREREVQ6TWSIiIiIiIqpymMwSERERERFRlcNkloiIiIiIiKocJrNERERERERU5TCZJSIiIiIioiqHySwRERERERFVOUxmiYiIiIiIqMphMktERERERERVDpNZIiIiIiIiqnKYzBIREREREVGVw2SWiIiIiIiIqhwms0RERERERFTlMJklIiIiIiKiKofJLBEREREREVU5TGaJiIiIiIioymEyS0RERERERFUOk1kiIiIiIiKqcpjMEhERERERUZXDZJaIiIiIiIiqHCazREREREREVOUwmSUiIiIiIqIqh8ksERERERERVTlMZomIiIiIiKjKYTJLREREREREVQ6TWSIiIiIiIqpymMwSERERERFRlcNkloiIiIiIiKocJrNERERERERU5TCZJSIiIiIioiqHySwRERERERFVOUxmiYiIiIiIqMphMktERERERERVDpNZIiIiIiIiqnKYzBIREREREVGVo1jZHSACgMjISMTExFR2N4gqVVpaGlRUVCq7G0SVinFAxDgg0tXVhampaaH1mMxS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\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["📋 Classification Report table saved at: /content/drive/MyDrive/DMS/runs/bi-lstm_attention_ensemble_24f_yaw_flip_1.5/best_val_classification_report.png\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PHssvdxb9X9f","executionInfo":{"status":"ok","timestamp":1750302764752,"user_tz":-540,"elapsed":102268,"user":{"displayName":"정현봉","userId":"00800786436397366756"}},"colab":{"base_uri":"https://localhost:8080/","height":910},"outputId":"525b5db4-7c8a-445a-b1e8-ec6d64808fba"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["✅ Confusion Matrix saved at: /content/drive/MyDrive/DMS/runs/bi-lstm_attention_ensemble_24f_yaw_flip_1.5/best_test_confusion_matrix.png\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x420 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["📋 Classification Report table saved at: /content/drive/MyDrive/DMS/runs/bi-lstm_attention_ensemble_24f_yaw_flip_1.5/best_test_classification_report.png\n"]}],"source":["test_labels, test_preds, test_probs = evaluate_models(models, cfg.device, test_loader, DataType.TEST)"]},{"cell_type":"markdown","source":["## 오분류 데이터 확인하기"],"metadata":{"id":"VgHCkPUE6S7o"}},{"cell_type":"markdown","source":["#### 클래스별 확신 높은 오분류 top-10 인덱스 추출"],"metadata":{"id":"DqyTjLKD_0ML"}},{"cell_type":"code","source":["def get_top_wrong_by_class(y_true, y_pred, y_prob, top_k=10, label_decoding=cfg.label_decoding):\n","    \"\"\"\n","    각 클래스에서 확신(confidence)이 높은 오분류 top-k 샘플 인덱스를 반환\n","\n","    Returns:\n","        result_dict: {class_name: [index1, index2, ...]} 형태\n","    \"\"\"\n","    num_classes = len(label_decoding)\n","    wrong_by_class = {label_decoding[c]: [] for c in range(num_classes)}\n","\n","    for i, (t, p) in enumerate(zip(y_true, y_pred)):\n","        if t != p:\n","            pred_confidence = y_prob[i][p]\n","            pred_class_name = label_decoding[p]\n","            wrong_by_class[pred_class_name].append((i, pred_confidence))\n","\n","    # 각 클래스별 confidence 높은 순으로 정렬 후 top-k만 추출\n","    result_dict = {}\n","    for class_name, wrong_list in wrong_by_class.items():\n","        top_k_sorted = sorted(wrong_list, key=lambda x: x[1], reverse=True)[:top_k]\n","        result_dict[class_name] = [idx for idx, _ in top_k_sorted]\n","\n","    return result_dict"],"metadata":{"id":"kgX9mmWY_3nM"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 오분류 데이터 프레임 시각화"],"metadata":{"id":"xxSgk8b8Sl51"}},{"cell_type":"code","source":["def show_misclassified_sequence(y_true, y_pred, metadata, data_df, index):\n","    \"\"\"\n","    잘못 분류된 샘플 중 하나의 시퀀스를 시각화하는 함수\n","\n","    Args:\n","        y_true (list): 실제 정답 라벨들\n","        y_pred (list): 모델이 예측한 라벨들\n","        metadata (list of tuples): (label, clip_id, start_frame_index)\n","        data_df (pd.DataFrame): 전체 프레임 데이터프레임 (frame_path 포함)\n","        index (int): 보고 싶은 틀린 샘플의 인덱스 (0부터 시작)\n","    \"\"\"\n","    true_label = y_true[index]\n","    pred_label = y_pred[index]\n","    label, clip_id, start_frame = metadata[index]\n","\n","    true_label = cfg.label_decoding[true_label]\n","    pred_label = cfg.label_decoding[pred_label]\n","\n","    print(f\"\\n🔍 오분류 예시 #{index}\")\n","    print(f\"Clip ID: {clip_id}, Start Frame: {start_frame}\")\n","    print(f\"True Label: {true_label}, Predicted: {pred_label}\")\n","\n","    # 해당 시퀀스 프레임 추출\n","    frame_range = list(range(start_frame, start_frame + cfg.sequence_length))\n","    clip_df = data_df[(data_df[\"label\"] == true_label) &\n","                      (data_df[\"clip_id\"] == clip_id) &\n","                      (data_df[\"frame_no\"].isin(frame_range))].sort_values(\"frame_no\")\n","    frame_paths = clip_df[\"frame_path\"].tolist()\n","    print(f\"첫번째 프레임의 frame_path: \", frame_paths[0])\n","\n","    # 시각화\n","    n = len(frame_paths)\n","    fig, axes = plt.subplots(1, n, figsize=(n * 2, 2.5))\n","    if n == 1:\n","        axes = [axes]\n","\n","    for i, (ax, path) in enumerate(zip(axes, frame_paths)):\n","        try:\n","            img = Image.open(path)\n","            ax.imshow(img)\n","            ax.set_title(f\"#{i + start_frame}\")\n","            ax.axis('off')\n","        except Exception:\n","            ax.text(0.5, 0.5, 'Image Load Fail', ha='center', va='center')\n","            ax.axis('off')\n","\n","    plt.suptitle(f\"Wrong Prediction\\nTrue: {true_label} / Pred: {pred_label}\", fontsize=14)\n","    plt.tight_layout()\n","    plt.show()"],"metadata":{"id":"3IeTfW1Z4KeM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["get_top_wrong_by_class(train_labels, train_preds, train_probs)"],"metadata":{"id":"KFWZP2OTAWGh","executionInfo":{"status":"ok","timestamp":1750302764787,"user_tz":-540,"elapsed":8,"user":{"displayName":"정현봉","userId":"00800786436397366756"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"71e5f9c6-c29e-4fc6-b186-6989b78a5470"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'normal': [554, 1265, 1821, 3046, 1579, 346, 1284, 1443, 1285, 1405],\n"," 'phonecall': [],\n"," 'text': [2873, 3134, 975, 3047, 2788, 397, 1037, 1705, 1619, 769],\n"," 'yawn': [2203]}"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["# 예를 들어 7490번째 틀린 예측을 보고 싶을 때\n","'''\n","show_misclassified_sequence(\n","    y_true=train_labels,\n","    y_pred=train_preds,\n","    metadata=train_metadata,\n","    data_df=train_df,\n","    index=299\n",")\n","'''"],"metadata":{"id":"W1x4bk6C7GFM","executionInfo":{"status":"ok","timestamp":1750302764794,"user_tz":-540,"elapsed":4,"user":{"displayName":"정현봉","userId":"00800786436397366756"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"baa29b83-e31e-4c30-9eb8-4d73373437ee"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\nshow_misclassified_sequence(\\n    y_true=train_labels,\\n    y_pred=train_preds,\\n    metadata=train_metadata,\\n    data_df=train_df,\\n    index=299\\n)\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["## Attention 시각화 함수"],"metadata":{"id":"U0ZewTZssfjX"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","import torch\n","import math\n","import os\n","\n","def visualize_attention_by_class(model, dataset, class_indices: dict, feature_names=None, max_samples_per_class=1):\n","    \"\"\"\n","    여러 클래스의 attention 분포를 비교 시각화합니다.\n","\n","    Args:\n","        model: 학습된 LSTM+Attention 모델\n","        dataset: TensorDataset\n","        class_indices: {label_name(str): [indices]} - 클래스별 시각화할 인덱스 리스트\n","        feature_names: feature 이름 리스트\n","        max_samples_per_class: 각 클래스에서 시각화할 최대 샘플 수\n","    \"\"\"\n","\n","    model.eval()\n","    num_classes = len(class_indices)\n","    feature_names = feature_names or [f'F{i}' for i in range(len(cfg.features))]\n","\n","    fig, axes = plt.subplots(2, num_classes, figsize=(4 * num_classes, 6))  # 2 rows, N cols\n","\n","    if num_classes == 1:\n","        axes = np.expand_dims(axes, axis=1)  # (2,1) 모양으로 강제 reshape\n","\n","    for i, (label_name, indices) in enumerate(class_indices.items()):\n","        sample_idx = indices[0]\n","        x_seq, label = dataset[sample_idx]\n","        x_seq = x_seq.unsqueeze(0).to(cfg.device)\n","\n","        with torch.no_grad():\n","            output, attn_weights = model(x_seq)\n","\n","        attn_weights = attn_weights.squeeze().cpu().numpy()  # [T]\n","        x_np = x_seq.squeeze().cpu().numpy()                 # [T, F]\n","        time_steps = list(range(len(attn_weights)))\n","\n","        # Feature Heatmap\n","        ax1 = axes[0][i]\n","        sns.heatmap(x_np.T, cmap='viridis', cbar=True, xticklabels=time_steps,\n","                    yticklabels=feature_names, ax=ax1)\n","        ax1.set_title(f\"[{label_name}] Input Features\")\n","        ax1.set_xlabel(\"Time Step\")\n","        ax1.set_ylabel(\"Feature\")\n","\n","        # Attention Barplot\n","        ax2 = axes[1][i]\n","        sns.barplot(x=time_steps, y=attn_weights, ax=ax2)\n","        ax2.set_title(f\"[{label_name}] Attention Weights\")\n","        ax2.set_xlabel(\"Time Step\")\n","        ax2.set_ylabel(\"Weight\")\n","\n","    plt.tight_layout()\n","    save_path = os.path.join(cfg.results_save_path, \"attention_comparison_2x4.png\")\n","    plt.savefig(save_path, dpi=300)\n","    plt.show()\n","    plt.close()\n","    print(f\"✅ Attention comparison saved at: {save_path}\")\n"],"metadata":{"id":"k9xqo9Oat5yC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from collections import defaultdict\n","\n","def get_class_indices(dataset, label_decoding):\n","    class_indices = defaultdict(list)\n","\n","    for idx in range(len(dataset)):\n","        _, label_idx = dataset[idx]\n","        label_name = label_decoding[label_idx.item()]\n","        class_indices[label_name].append(idx)\n","\n","    return class_indices\n"],"metadata":{"id":"IwYO3muxKYtF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class_indices = get_class_indices(val_dataset, cfg.label_decoding)\n","selected_indices = {cls: [idxs[0]] for cls, idxs in class_indices.items()}\n","\n","visualize_attention_by_class(model, val_dataset, selected_indices, feature_names=['mar', 'ear', 'yaw', 'pitch', 'phone_detected'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":205},"id":"Iqboi7N0mfjY","executionInfo":{"status":"error","timestamp":1750302764816,"user_tz":-540,"elapsed":8,"user":{"displayName":"정현봉","userId":"00800786436397366756"}},"outputId":"209547fe-f928-4ebf-ba33-3da7838020eb"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'model' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-35-1786524662.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mselected_indices\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0mcls\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0midxs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mcls\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0midxs\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mclass_indices\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mvisualize_attention_by_class\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mval_dataset\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mselected_indices\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeature_names\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'mar'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'ear'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'yaw'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'pitch'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'phone_detected'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'model' is not defined"]}]},{"cell_type":"code","source":[],"metadata":{"id":"juleS1JS_FtZ"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[{"file_id":"1QlKJaZfYWA2CVEPRJgWJCb5pX6rnvq-x","timestamp":1750136940665}],"toc_visible":true},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}