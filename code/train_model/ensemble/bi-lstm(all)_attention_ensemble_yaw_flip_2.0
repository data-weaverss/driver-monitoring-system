{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"executionInfo":{"elapsed":23042,"status":"ok","timestamp":1750311198366,"user":{"displayName":"정현봉","userId":"00800786436397366756"},"user_tz":-540},"id":"J68SdBzNjphV","colab":{"base_uri":"https://localhost:8080/"},"outputId":"92ef7656-2aad-4aab-b53f-7f3d38817601"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive/\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive/')"]},{"cell_type":"markdown","metadata":{"id":"wUDOtyCzmZth"},"source":["## **학습 & 테스트 프로세스 요약**\n","| 단계 | 학습 (Train) | 테스트 (Test) |\n","|------|------------|-------------|\n","| **1. 데이터 입력** | CSV 파일 (이미 추출된 특징값) | 동영상 |\n","| **2. 특징 추출** | CSV에서 불러오기 | 동영상 → 프레임 추출 → 12개 묶음 → 특징 추출 |\n","| **3. 데이터 변환** | `(배치, 12, 5)` 형태로 변환 | `(1, 12, 5)` 형태로 변환 |\n","| **4. 모델 학습/예측** | LSTM 모델 학습 | LSTM 모델을 이용해 예측 |\n","| **5. 결과 저장** | `.pth` 파일로 저장 | 예측값 출력 |\n"]},{"cell_type":"markdown","metadata":{"id":"Fk84YrSckNTx"},"source":["# 1. 학습"]},{"cell_type":"markdown","metadata":{"id":"QJKfO0xhkSSz"},"source":["1. 추출된 feature 로드\n","2. LSTM Input 형식으로 변환\n","3. LSTM 학습"]},{"cell_type":"markdown","metadata":{"id":"FJuBF9S3WK2y"},"source":["## 라이브러리 임포트"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"qtMzGHiCkMEO","executionInfo":{"status":"ok","timestamp":1750311214036,"user_tz":-540,"elapsed":15671,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"outputs":[],"source":["import os\n","import datetime\n","from tqdm import tqdm\n","import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import confusion_matrix, classification_report\n","from collections import Counter\n","import random\n","\n","import torch\n","import torch.nn as nn\n","import torch.nn.functional as F\n","import torchvision.models as models\n","import torchvision.transforms as transforms\n","from torch.utils.data import DataLoader, TensorDataset\n","import torch.utils.data as data\n","import torch.optim as optim\n","import torchvision\n","from torch.autograd import Variable\n","\n","from sklearn.metrics import accuracy_score\n","\n","import matplotlib.pyplot as plt\n","import cv2\n","from IPython.display import display\n","from PIL import Image\n","\n","from dataclasses import dataclass, field\n","from typing import Tuple, List\n","\n","import warnings\n","warnings.filterwarnings('ignore')\n","\n","from enum import Enum\n","import glob\n","\n","class ModelType(Enum):\n","  BEST = \"best\"\n","  LAST = \"last\"\n","\n","class DataType(Enum):\n","  TRAIN = \"train\"\n","  VAL = \"val\"\n","  TEST = \"test\"\n","\n","base_dir = \"/content/drive/MyDrive/DMS\"\n"]},{"cell_type":"markdown","metadata":{"id":"1Srd-RY9pcZE"},"source":["## 1-2. LSTM Input 형식으로 변환"]},{"cell_type":"markdown","metadata":{"id":"JwkJmAOOFgDF"},"source":["### Config 설정"]},{"cell_type":"code","source":["from dataclasses import dataclass\n","\n","@dataclass\n","class Config:\n","    case_name: str = \"bi-lstm_attention_ensemble_24f_yaw_flip_2.0\" # 바꿔야하는 부분\n","\n","    # 모델 구조\n","    lstm_num_layers: int = 3\n","    lstm_hidden_size: int = 512\n","    fc_hidden_size: int = 256\n","    dropout_rate: float = 0.2 # input-to-hidden (between layers)\n","    bidirectional: bool = True\n","\n","    # 학습 설정\n","    batch_size: int = 32\n","    epochs: int = 100\n","    learning_rate: float = 3e-4\n","    optimizer: str = \"adam\" # or \"sgd\", \"adamw\"\n","\n","    # 입력 데이터\n","    sequence_length: int = 24\n","    sliding_window_step: int = 24 # sliding window 사용 x -> seuqnce_length와 같은 값으로 설정\n","    features: list = field(default_factory=lambda: [\"mar\", \"ear\", \"yaw\", \"pitch\", \"phone_detected\"])\n","    labels: list = field(default_factory=lambda: [\"normal\", \"phonecall\", \"text\", \"yawn\"])\n","\n","    apply_yaw_inversion: bool = False\n","    apply_noise_jittering: bool = False\n","\n","    # 학습 제어 - 조기 종료 / 러닝레이트 스케줄러\n","    use_early_stopping: bool = False  # 조기 종료 사용 여부\n","    use_lr_scheduler: bool = False    # 학습률 스케줄러 사용 여부\n","    early_stopping_patience: int = 20 # early stopping 기준 epoch\n","    reduce_lr_factor: float = 0.5 # learning rate 감소 비율\n","    reduce_lr_patience: int = 7 # learning rate 감소 기준 epoch\n","\n","    # 랜덤시드 설정\n","    random_seed: int = 24\n","\n","    def __post_init__(self):\n","      self.results_save_path = f\"{base_dir}/runs/{self.case_name}\"\n","      self.model_save_path = f\"{self.results_save_path}/weights\"\n","\n","      os.makedirs(self.results_save_path, exist_ok=True)\n","      os.makedirs(self.model_save_path, exist_ok=True)\n","\n","      if self.sequence_length == 12:\n","        df_path = f'{base_dir}/data/splits/12frame_windows'\n","        self.group_col = 'groups_12'\n","      elif self.sequence_length == 24:\n","        df_path = f'{base_dir}/data/splits/24frame_windows'\n","        self.group_col = 'groups_24'\n","\n","      self.train = pd.read_csv(os.path.join(df_path, \"final_train.csv\"))\n","      self.validation = pd.read_csv(os.path.join(df_path, \"final_val.csv\"))\n","      self.test = pd.read_csv(os.path.join(df_path, \"final_test.csv\"))\n","\n","      # label_mapping\n","      self.label_encoding = {}\n","      self.label_decoding = {}\n","      for i, label in enumerate(self.labels): # [\"normal\", \"phonecall\", \"text\", \"yawn\"] 순서로 라벨 인코딩\n","          self.label_encoding[label] = i\n","          self.label_decoding[i] = label\n","\n","      # 디바이스 설정\n","      self.use_cuda = torch.cuda.is_available()\n","      self.device = torch.device(\"cuda\" if self.use_cuda else \"cpu\")\n","\n","cfg = Config()\n","# print(cfg.case_name) # 사용 예시"],"metadata":{"id":"5hKlc4kUp4l9","executionInfo":{"status":"ok","timestamp":1750311221975,"user_tz":-540,"elapsed":7935,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["def set_random_seed(seed):\n","    torch.manual_seed(seed)  # PyTorch CPU 연산에 대한 시드 설정\n","    torch.cuda.manual_seed(seed)  # CUDA 연산에 대한 시드 설정 (GPU 사용 시)\n","    torch.cuda.manual_seed_all(seed)  # 여러 GPU를 사용하는 경우 모든 GPU에 동일한 시드 설정\n","    np.random.seed(seed)  # NumPy 연산에 대한 시드 설정\n","    random.seed(seed)  # Python 기본 random 모듈의 시드 설정\n","    torch.backends.cudnn.deterministic = True  # CuDNN 연산의 결정론적 동작 보장\n","    torch.backends.cudnn.benchmark = False  # 성능 최적화 비활성화 (재현성 보장)\n","\n","set_random_seed(cfg.random_seed)"],"metadata":{"id":"nnUAKflRWPoq","executionInfo":{"status":"ok","timestamp":1750311222010,"user_tz":-540,"elapsed":16,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":4,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"pRHMOaLpW7Y2"},"source":["### 데이터 로드"]},{"cell_type":"markdown","source":["### train, val, test 데이터셋 로드"],"metadata":{"id":"R1vpZJH9TRky"}},{"cell_type":"code","source":["train_df = cfg.train.copy()\n","val_df = cfg.validation.copy()\n","test_df = cfg.test.copy()"],"metadata":{"id":"LaskMuLUQ89h","executionInfo":{"status":"ok","timestamp":1750311222073,"user_tz":-540,"elapsed":47,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["# train normal undersampling\n","train_df = train_df[((train_df['label'] == 'normal') &\n","                    (train_df[cfg.group_col].isin([0, 1]))) |\n","                    (train_df['label'] != 'normal')]"],"metadata":{"id":"eHUoDw4U9kQR","executionInfo":{"status":"ok","timestamp":1750311222237,"user_tz":-540,"elapsed":162,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":6,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"OdLSCKeSrZAE"},"source":["### generate_sequence_dataset"]},{"cell_type":"code","source":["def generate_sequence_dataset(\n","    df: pd.DataFrame\n",") -> Tuple[np.ndarray, np.ndarray, List[Tuple]]:\n","    sequences, labels, metadata = [], [], []\n","\n","    for (label, clip_id), clip_df in df.groupby(['label', 'clip_id']):\n","        clip_df = clip_df.sort_values('frame_no')\n","        frame_values = clip_df[cfg.features].values\n","\n","        if len(frame_values) < cfg.sequence_length:\n","            continue\n","\n","        for i in range(0, len(frame_values) - cfg.sequence_length + 1, cfg.sliding_window_step):\n","            seq = frame_values[i:i + cfg.sequence_length]\n","            if seq.shape[0] == cfg.sequence_length:\n","                sequences.append(seq)\n","                labels.append(cfg.label_encoding[label])\n","                # 학습 후 오분류 데이터 확인을 위한 시작 프레임 번호 저장\n","                metadata.append((label, clip_id, clip_df.iloc[i]['frame_no']))\n","\n","    return TensorDataset(torch.tensor(sequences, dtype=torch.float32), torch.tensor(labels, dtype=torch.long)), metadata"],"metadata":{"id":"SbY5UTS4T39f","executionInfo":{"status":"ok","timestamp":1750311222320,"user_tz":-540,"elapsed":81,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"iGaRQUVjFDPA"},"source":["### DataLoader params"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"safri8zEE8Qs","executionInfo":{"status":"ok","timestamp":1750311222324,"user_tz":-540,"elapsed":2,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"outputs":[],"source":["train_params = {\n","    \"batch_size\": cfg.batch_size,\n","    \"shuffle\": True,\n","    \"num_workers\": 4,\n","    \"pin_memory\": cfg.use_cuda,\n","    \"persistent_workers\": cfg.use_cuda,\n","    \"prefetch_factor\": 2 if cfg.use_cuda else None,\n","    \"drop_last\": True,\n","}\n","\n","test_params = {\n","    \"batch_size\": cfg.batch_size,\n","    \"shuffle\": False,\n","    \"num_workers\": 0,\n","    \"pin_memory\": cfg.use_cuda\n","}"]},{"cell_type":"code","source":["def flip_yaw_sequence(seq: np.ndarray, yaw_index: int) -> np.ndarray:\n","    \"\"\"시퀀스의 yaw 값을 좌우 반전\"\"\"\n","    seq_flipped = seq.copy()\n","    seq_flipped[:, yaw_index] = -seq[:, yaw_index]\n","    return seq_flipped"],"metadata":{"id":"x2V13C-IUbk5","executionInfo":{"status":"ok","timestamp":1750311222328,"user_tz":-540,"elapsed":2,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["'''\n","# DataLoader 생성 (배치 단위로 데이터를 나누기 위해 사용)\n","train_dataset, train_metadata = generate_sequence_dataset(train_df)\n","\n","# 기존 시퀀스 및 라벨 불러오기\n","X_seq = train_dataset.tensors[0].numpy()\n","y_seq = train_dataset.tensors[1].numpy()\n","\n","# 증강 대상 클래스\n","target_classes = [2, 3]  # 2: text, 3: yawn\n","yaw_index = cfg.features.index('yaw')\n","flip_multiplier = 1.5\n","\n","aug_seqs = []\n","aug_labels = []\n","\n","for cls in target_classes:\n","    class_seqs = [x for x, y in zip(X_seq, y_seq) if y == cls]\n","    current_count = len(class_seqs)\n","    target_count = int(current_count * flip_multiplier)\n","    need = target_count - current_count\n","\n","    print(f\"[Yaw Flip] Class {cls} 증강: {current_count} → {target_count} (추가 {need})\")\n","\n","    sampled = np.random.choice(len(class_seqs), size=need, replace=True)\n","    for i in sampled:\n","        flipped = flip_yaw_sequence(class_seqs[i], yaw_index)\n","        aug_seqs.append(flipped)\n","        aug_labels.append(cls)\n","\n","# numpy 형태로 변환\n","X_aug = np.stack(aug_seqs)\n","y_aug = np.array(aug_labels)\n","\n","# 원본 + 증강 합치기\n","X_total = np.concatenate([X_seq, X_aug], axis=0)\n","y_total = np.concatenate([y_seq, y_aug], axis=0)\n","\n","# PyTorch Dataset & DataLoader 생성\n","train_dataset_yaw_flip = TensorDataset(torch.tensor(X_total, dtype=torch.float32),\n","                                       torch.tensor(y_total, dtype=torch.long))\n","train_loader = DataLoader(train_dataset_yaw_flip, **train_params)\n","'''"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":203},"id":"HnQq6pVJUN1J","executionInfo":{"status":"ok","timestamp":1750311222336,"user_tz":-540,"elapsed":5,"user":{"displayName":"정현봉","userId":"00800786436397366756"}},"outputId":"83890980-e40e-4eeb-b751-c3b8f10d7780"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n# DataLoader 생성 (배치 단위로 데이터를 나누기 위해 사용)\\ntrain_dataset, train_metadata = generate_sequence_dataset(train_df)\\n\\n# 기존 시퀀스 및 라벨 불러오기\\nX_seq = train_dataset.tensors[0].numpy()\\ny_seq = train_dataset.tensors[1].numpy()\\n\\n# 증강 대상 클래스\\ntarget_classes = [2, 3]  # 2: text, 3: yawn\\nyaw_index = cfg.features.index(\\'yaw\\')\\nflip_multiplier = 1.5\\n\\naug_seqs = []\\naug_labels = []\\n\\nfor cls in target_classes:\\n    class_seqs = [x for x, y in zip(X_seq, y_seq) if y == cls]\\n    current_count = len(class_seqs)\\n    target_count = int(current_count * flip_multiplier)\\n    need = target_count - current_count\\n\\n    print(f\"[Yaw Flip] Class {cls} 증강: {current_count} → {target_count} (추가 {need})\")\\n\\n    sampled = np.random.choice(len(class_seqs), size=need, replace=True)\\n    for i in sampled:\\n        flipped = flip_yaw_sequence(class_seqs[i], yaw_index)\\n        aug_seqs.append(flipped)\\n        aug_labels.append(cls)\\n\\n# numpy 형태로 변환\\nX_aug = np.stack(aug_seqs)\\ny_aug = np.array(aug_labels)\\n\\n# 원본 + 증강 합치기\\nX_total = np.concatenate([X_seq, X_aug], axis=0)\\ny_total = np.concatenate([y_seq, y_aug], axis=0)\\n\\n# PyTorch Dataset & DataLoader 생성\\ntrain_dataset_yaw_flip = TensorDataset(torch.tensor(X_total, dtype=torch.float32),\\n                                       torch.tensor(y_total, dtype=torch.long))\\ntrain_loader = DataLoader(train_dataset_yaw_flip, **train_params)\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["### 트레인 데이터셋 증강 함수"],"metadata":{"id":"5vJqWqdZyQvM"}},{"cell_type":"code","source":["def get_augmented_train_loader(train_fold_df, cfg, train_params, flip_multiplier=1.5, target_classes=[2, 3]):\n","    \"\"\"\n","    yaw 좌우 반전을 이용한 데이터 증강 및 DataLoader 생성\n","    \"\"\"\n","    # 1. 기존 시퀀스 및 라벨 불러오기\n","    train_dataset, _ = generate_sequence_dataset(train_fold_df)\n","    X_seq = train_dataset.tensors[0].numpy()\n","    y_seq = train_dataset.tensors[1].numpy()\n","\n","    yaw_index = cfg.features.index('yaw')  # yaw의 인덱스\n","\n","    aug_seqs = []\n","    aug_labels = []\n","\n","    for cls in target_classes:\n","        class_seqs = [x for x, y in zip(X_seq, y_seq) if y == cls]\n","        current_count = len(class_seqs)\n","        target_count = int(current_count * flip_multiplier)\n","        need = target_count - current_count\n","\n","        print(f\"[Yaw Flip] Class {cls} 증강: {current_count} → {target_count} (추가 {need})\")\n","\n","        sampled = np.random.choice(len(class_seqs), size=need, replace=True)\n","        for i in sampled:\n","            flipped = flip_yaw_sequence(class_seqs[i], yaw_index)\n","            aug_seqs.append(flipped)\n","            aug_labels.append(cls)\n","\n","    # 2. 증강 데이터 결합\n","    if aug_seqs:  # 증강이 수행된 경우만\n","        X_aug = np.stack(aug_seqs)\n","        y_aug = np.array(aug_labels)\n","\n","        X_total = np.concatenate([X_seq, X_aug], axis=0)\n","        y_total = np.concatenate([y_seq, y_aug], axis=0)\n","    else:\n","        X_total = X_seq\n","        y_total = y_seq\n","\n","    # 3. PyTorch TensorDataset 및 DataLoader 생성\n","    dataset = TensorDataset(torch.tensor(X_total, dtype=torch.float32),\n","                            torch.tensor(y_total, dtype=torch.long))\n","    train_loader = DataLoader(dataset, **train_params)\n","\n","    return train_loader\n"],"metadata":{"id":"N3x6wgMjt5mx","executionInfo":{"status":"ok","timestamp":1750311222342,"user_tz":-540,"elapsed":4,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":11,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"fROYd8X1zYa7"},"source":["## 1-3. LSTM 학습 설정"]},{"cell_type":"markdown","source":["### 모델 정의"],"metadata":{"id":"KnLIHJVEBYwV"}},{"cell_type":"code","source":["# Attention 모듈 정의\n","class Attention(nn.Module):\n","    def __init__(self, hidden_dim):\n","        super(Attention, self).__init__()\n","        self.attn = nn.Linear(hidden_dim, hidden_dim)\n","        self.context = nn.Linear(hidden_dim, 1, bias=False)\n","\n","    def forward(self, lstm_output):\n","        # lstm_output: [B, T, H]\n","        score = torch.tanh(self.attn(lstm_output))         # [B, T, H]\n","        attn_weights = torch.softmax(self.context(score), dim=1)  # [B, T, 1]\n","        attended_output = torch.sum(attn_weights * lstm_output, dim=1)  # [B, H]\n","        return attended_output, attn_weights  # context vector, weights"],"metadata":{"id":"LGtL2qsUnhI0","executionInfo":{"status":"ok","timestamp":1750311222348,"user_tz":-540,"elapsed":3,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","execution_count":13,"metadata":{"id":"AOK3mN2xHwtt","executionInfo":{"status":"ok","timestamp":1750311222405,"user_tz":-540,"elapsed":55,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"outputs":[],"source":["# LSTM 모델 정의\n","class DecoderRNN(nn.Module):\n","    def __init__(self):\n","        super(DecoderRNN, self).__init__()\n","\n","        self.RNN_input_size = len(cfg.features)\n","        self.h_RNN_layers = cfg.lstm_num_layers\n","        self.h_RNN = cfg.lstm_hidden_size\n","        self.h_FC_dim = cfg.fc_hidden_size\n","        self.drop_p = cfg.dropout_rate\n","        self.num_classes = len(cfg.labels)\n","        self.bidirectional = cfg.bidirectional\n","\n","        self.LSTM = nn.LSTM(\n","            input_size=self.RNN_input_size,\n","            hidden_size=self.h_RNN,\n","            num_layers=self.h_RNN_layers,\n","            batch_first=True,\n","            bidirectional=self.bidirectional\n","        )\n","\n","        lstm_output_dim = self.h_RNN * (2 if self.bidirectional else 1)\n","\n","        self.attention = Attention(lstm_output_dim) # Attention 추가\n","        self.fc1 = nn.Linear(lstm_output_dim, self.h_FC_dim)\n","        self.bn1 = nn.BatchNorm1d(self.h_FC_dim)  # Batch Normalization 추가\n","        self.fc2 = nn.Linear(self.h_FC_dim, self.num_classes)\n","        self.dropout = nn.Dropout(p=self.drop_p)\n","\n","    def forward(self, x_RNN):\n","        self.LSTM.flatten_parameters()\n","        out, _ = self.LSTM(x_RNN)  # (batch, seq_len, hidden*2)\n","\n","        attn_out, attn_weights = self.attention(out)  # attn_out: [B, H]\n","\n","        # FC layers\n","        x = self.fc1(attn_out)\n","        x = self.bn1(x)\n","        x = F.relu(x)\n","        x = self.dropout(x)\n","        x = self.fc2(x)\n","\n","        return x, attn_weights  # CrossEntropyLoss 사용 (Softmax 없음), attn_weights 함께 반환"]},{"cell_type":"markdown","metadata":{"id":"RXocvVKtkOMG"},"source":["### optimizer"]},{"cell_type":"markdown","source":["- 모델 구조 비교: Adam 고정\n","- 정규화/튜닝 단계: Adam, AdamW, SGD 비교\n","- 최종 성능 극대화: weight decay, scheduler, mixed precision 등과 조합 실험"],"metadata":{"id":"JX_Y9TybhXI6"}},{"cell_type":"code","source":["def get_optimizer(model):\n","    if cfg.optimizer.lower() == \"adam\":\n","        return optim.Adam(model.parameters(), lr=cfg.learning_rate)\n","    elif cfg.optimizer.lower() == \"sgd\":\n","        return optim.SGD(model.parameters(), lr=cfg.learning_rate, momentum=0.9)\n","    elif cfg.optimizer.lower() == \"adamw\":\n","        return optim.AdamW(model.parameters(), lr=cfg.learning_rate)\n","    else:\n","        raise ValueError(f\"Unsupported optimizer: {cfg.optimizer}\")\n","\n","def get_criterion():\n","  return nn.CrossEntropyLoss()"],"metadata":{"id":"3gHz7kiLhVVh","executionInfo":{"status":"ok","timestamp":1750311222406,"user_tz":-540,"elapsed":29,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":14,"outputs":[]},{"cell_type":"markdown","source":["### 학습 스케줄러 설정"],"metadata":{"id":"HjZoYJFvffDM"}},{"cell_type":"code","source":["def get_scheduler(optimizer):\n","    return optim.lr_scheduler.ReduceLROnPlateau(\n","        optimizer,\n","        mode=\"min\",  # 'min' for loss, 'max' for accuracy/f1\n","        factor=cfg.reduce_lr_factor,\n","        patience=cfg.reduce_lr_patience,\n",")"],"metadata":{"id":"svwn6KqlfiK_","executionInfo":{"status":"ok","timestamp":1750311222407,"user_tz":-540,"elapsed":28,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":15,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ne6SnCpE5sMd"},"source":["### Early Stopping 설정"]},{"cell_type":"code","source":["class EarlyStopping:\n","    def __init__(self, mode: str = \"min\"):\n","        self.patience = cfg.early_stopping_patience\n","        self.mode = mode\n","        self.best_score = np.inf if mode == \"min\" else -np.inf\n","        self.counter = 0\n","        self.early_stop = False\n","\n","    def step(self, current_score: float) -> bool:\n","        \"\"\"\n","        평가 점수(current_score)를 받아 early stopping 여부를 업데이트함.\n","        Returns:\n","            True if training should stop\n","        \"\"\"\n","        if self.mode == \"min\":\n","            is_improvement = current_score < self.best_score\n","        else:  # \"max\"\n","            is_improvement = current_score > self.best_score\n","\n","        if is_improvement:\n","            self.best_score = current_score\n","            self.counter = 0\n","        else:\n","            self.counter += 1\n","            if self.counter >= self.patience:\n","                self.early_stop = True\n","\n","        return self.early_stop"],"metadata":{"id":"cOHa2ZkNgW2U","executionInfo":{"status":"ok","timestamp":1750311222408,"user_tz":-540,"elapsed":26,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":16,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"0XTNDoMjMh0Q"},"source":["## 1-4 학습 진행"]},{"cell_type":"markdown","metadata":{"id":"uX8o8vwQMlXU"},"source":["-  Gradient Clipping 추가 (torch.nn.utils.clip_grad_norm_()) → 폭발적인 기울기(Gradient Explosion) 방지\n","- 모델 저장 기능 추가 (torch.save()) → Best Loss 갱신 시 자동 저장"]},{"cell_type":"code","execution_count":17,"metadata":{"id":"0R88mx_dea0I","executionInfo":{"status":"ok","timestamp":1750311222409,"user_tz":-540,"elapsed":8,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"outputs":[],"source":["def save_model(model, optimizer, epoch, loss, fold, model_type): # model_type: \"best\", \"last\"\n","    model_filename = f\"{cfg.model_save_path}/{model_type}_model_{fold}.pth\"  # 저장 파일명\n","\n","    torch.save({\n","        'epoch': epoch,\n","        'model_state_dict': model.state_dict(),\n","        'optimizer_state_dict': optimizer.state_dict(),\n","        'loss': loss\n","    }, model_filename)\n","\n","    print(f\"💾 Model Updated! Saved at {model_filename} (Loss: {loss:.4f})\")\n","\n","def save_training_results(\n","        train_losses,\n","        train_scores,\n","        val_losses,\n","        val_scores,\n","        fold\n","        ):\n","    \"\"\"\n","    학습 과정의 손실(loss)과 정확도(score)를 저장하는 함수\n","    \"\"\"\n","    results_df = pd.DataFrame({\n","        \"epoch\": list(range(1, len(train_losses) + 1)),\n","        \"train_loss\": train_losses,\n","        \"train_accuracy\": train_scores,\n","        \"val_loss\": val_losses,\n","        \"val_accuracy\": val_scores\n","    })\n","\n","    results_df.to_csv(f\"{cfg.results_save_path}/training_results_{fold}.csv\", index=False)\n","    print(f\"💾 Training results saved at {cfg.results_save_path}/training_results_{fold}.csv\")"]},{"cell_type":"markdown","metadata":{"id":"B3TL3Dy7bxnt"},"source":["### epoch마다 validation data로 성능평가\n","- 다음 기술을 적용하는 기준: Validation data Loss\n","    - validation data 기준으로 best model 선정\n","    - 모델 저장 (Best Loss 갱신 시)"]},{"cell_type":"markdown","source":["### train & validate"],"metadata":{"id":"ve-1oy5X7SVB"}},{"cell_type":"code","source":["def train(model, device, train_loader, optimizer, criterion, epoch):\n","    model.train()\n","    losses, scores = [], []\n","\n","    for X, y in tqdm(train_loader, desc=f\"Epoch {epoch+1} [Train]\"):\n","        X, y = X.to(device), y.to(device).long()\n","\n","        optimizer.zero_grad()\n","        output = model(X)\n","\n","        # 튜플 처리\n","        if isinstance(output, tuple):\n","            output = output[0]\n","\n","        loss = criterion(output, y)\n","        loss.backward() # 역전파\n","\n","        torch.nn.utils.clip_grad_norm_(model.parameters(), max_norm=1.0)  #  Gradient Clipping\n","        optimizer.step()\n","\n","        losses.append(loss.item())\n","\n","        # 정확도 계산\n","        y_pred = torch.argmax(output, dim=1)\n","        acc = accuracy_score(y.cpu().numpy(), y_pred.cpu().numpy())\n","        scores.append(acc)\n","\n","    avg_loss = sum(losses) / len(losses)\n","    avg_acc = sum(scores) / len(scores) * 100\n","\n","    print(f\"✅ Train Epoch {epoch+1} Finished - Avg Loss: {avg_loss:.4f}, Avg Acc: {avg_acc:.2f}%\")\n","\n","    return avg_loss, avg_acc  # 학습 Loss 및 Accuracy 반환\n","\n","def validate(model, device, criterion, val_loader):\n","    model.eval()\n","    losses, scores = [], []\n","\n","    with torch.no_grad():\n","        for X, y in val_loader:\n","            X, y = X.to(device), y.to(device).long()\n","            output = model(X)\n","\n","            # 튜플 처리\n","            if isinstance(output, tuple):\n","                output = output[0]\n","            loss = criterion(output, y)\n","\n","            losses.append(loss.item())\n","\n","            y_pred = torch.argmax(output, dim=1)\n","            acc = accuracy_score(y.cpu().numpy(), y_pred.cpu().numpy())\n","            scores.append(acc)\n","\n","    avg_loss = sum(losses) / len(losses)\n","    avg_acc = sum(scores) / len(scores) * 100\n","\n","    print(f\"✅ Validation Finished - Avg Loss: {avg_loss:.4f}, Avg Acc: {avg_acc:.2f}%\")\n","\n","    return avg_loss, avg_acc  # 검증 Loss 및 Accuracy 반환"],"metadata":{"id":"cb6g45rd7Td3","executionInfo":{"status":"ok","timestamp":1750311222437,"user_tz":-540,"elapsed":27,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# 전체 학습 실행 코드\n","def train_and_validate(model, train_loader, val_loader, optimizer, criterion, fold, scheduler=None):\n","    best_loss = np.inf\n","\n","    train_losses, train_scores = [], []\n","    val_losses, val_scores = [], []\n","\n","    for epoch in range(cfg.epochs):\n","        # 학습 단계\n","        train_loss, train_score = train(\n","            model=model,\n","            device=cfg.device,\n","            train_loader=train_loader,\n","            optimizer=optimizer,\n","            criterion=criterion,\n","            epoch=epoch\n","        )\n","\n","        val_loss, val_score = validate(\n","            model=model,\n","            device=cfg.device,\n","            criterion=criterion,\n","            val_loader=val_loader\n","        )\n","\n","        train_losses.append(train_loss)\n","        train_scores.append(train_score)\n","        val_losses.append(val_loss)\n","        val_scores.append(val_score)\n","\n","        # 학습률 감소 적용\n","        if cfg.use_lr_scheduler:\n","          pass\n","\n","        # Best model 저장\n","        if val_loss < best_loss:\n","            best_loss = val_loss\n","            patience_counter = 0\n","\n","            save_model(\n","                model=model,\n","                optimizer=optimizer,\n","                epoch=epoch,\n","                loss=best_loss,\n","                fold=fold,\n","                model_type=\"best\"\n","            )\n","\n","            print(f\"Best Loss Updated! : {best_loss}\")\n","\n","        # Early Stopping 체크\n","        if cfg.use_early_stopping:\n","          pass\n","\n","    # 마지막 모델 저장\n","    save_model(\n","      model=model,\n","      optimizer=optimizer,\n","      epoch=epoch,\n","      loss=val_loss,\n","      fold=fold,\n","      model_type=\"last\"\n","    )\n","\n","    # 학습 결과 저장\n","    save_training_results(\n","      train_losses,\n","      train_scores,\n","      val_losses,\n","      val_scores,\n","      fold=fold\n","    )\n","\n","    return train_losses, train_scores, val_losses, val_scores"],"metadata":{"id":"IWnfoFlV9LHG","executionInfo":{"status":"ok","timestamp":1750311222439,"user_tz":-540,"elapsed":4,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["'''\n","all_train_losses, all_train_scores, all_val_losses, all_val_scores = [], [], [], []\n","\n","for fold in range(5):\n","    print(f\"\\n===== Fold {fold} =====\")\n","\n","    model = DecoderRNN()\n","    model.to(cfg.device)\n","\n","    optimizer = get_optimizer(model)\n","    criterion = get_criterion()\n","\n","    scheduler = get_scheduler(optimizer, cfg) if cfg.use_lr_scheduler else None\n","\n","    # 1. Fold 나누기\n","    train_fold_df = train_df[train_df['fold'] != fold]\n","    val_fold_df = train_df[train_df['fold'] == fold]\n","\n","    # 2, 3. 시퀀스 데이터 생성, DataLoader 생성\n","    train_loader = get_augmented_train_loader(train_fold_df, cfg, train_params,\n","                                              flip_multiplier=2.0)\n","\n","    val_dataset, _ = generate_sequence_dataset(val_fold_df)\n","    val_loader = DataLoader(val_dataset, **test_params)\n","\n","    # 4. 모델 및 학습 객체 초기화\n","    model.to(cfg.device)\n","\n","    # 5. 학습 및 검증 실행\n","    train_losses, train_scores, val_losses, val_scores = train_and_validate(\n","        model, train_loader, val_loader, optimizer, criterion, fold, scheduler\n","    )\n","\n","    all_train_losses.append(train_losses)\n","    all_train_scores.append(train_scores)\n","    all_val_losses.append(val_losses)\n","    all_val_scores.append(val_scores)\n","'''"],"metadata":{"id":"dgg3e6fPLpl4","executionInfo":{"status":"ok","timestamp":1750311222478,"user_tz":-540,"elapsed":34,"user":{"displayName":"정현봉","userId":"00800786436397366756"}},"colab":{"base_uri":"https://localhost:8080/","height":203},"outputId":"51e586de-64d6-4c15-bfbf-b244bc070819"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\nall_train_losses, all_train_scores, all_val_losses, all_val_scores = [], [], [], []\\n\\nfor fold in range(5):\\n    print(f\"\\n===== Fold {fold} =====\")\\n\\n    model = DecoderRNN()\\n    model.to(cfg.device)\\n\\n    optimizer = get_optimizer(model)\\n    criterion = get_criterion()\\n\\n    scheduler = get_scheduler(optimizer, cfg) if cfg.use_lr_scheduler else None\\n\\n    # 1. Fold 나누기\\n    train_fold_df = train_df[train_df[\\'fold\\'] != fold]\\n    val_fold_df = train_df[train_df[\\'fold\\'] == fold]\\n\\n    # 2, 3. 시퀀스 데이터 생성, DataLoader 생성\\n    train_loader = get_augmented_train_loader(train_fold_df, cfg, train_params,\\n                                              flip_multiplier=2.0)\\n\\n    val_dataset, _ = generate_sequence_dataset(val_fold_df)\\n    val_loader = DataLoader(val_dataset, **test_params)\\n\\n    # 4. 모델 및 학습 객체 초기화\\n    model.to(cfg.device)\\n\\n    # 5. 학습 및 검증 실행\\n    train_losses, train_scores, val_losses, val_scores = train_and_validate(\\n        model, train_loader, val_loader, optimizer, criterion, fold, scheduler\\n    )\\n\\n    all_train_losses.append(train_losses)\\n    all_train_scores.append(train_scores)\\n    all_val_losses.append(val_losses)\\n    all_val_scores.append(val_scores)\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["# fold 4에서 에러(배치 크기가 1이라 통계 계산이 불가능한 샘플 존재)\n","# DataLoader에서 drop_last=True 로 설정 후 fold 4만 따로 학습\n","# 다른 실험할 때는 이 코드 셀 삭제해야 함\n","\n","\n","# print(f\"\\n===== Fold {4} =====\")\n","\n","# model = DecoderRNN()\n","# model.to(cfg.device)\n","\n","# optimizer = get_optimizer(model)\n","# criterion = get_criterion()\n","\n","# scheduler = get_scheduler(optimizer, cfg) if cfg.use_lr_scheduler else None\n","\n","# # 1. Fold 나누기\n","# train_fold_df = train_df[train_df['fold'] != 4]\n","# val_fold_df = train_df[train_df['fold'] == 4]\n","\n","# # 2. 시퀀스 데이터 생성\n","# train_dataset, _ = generate_sequence_dataset(train_fold_df)\n","# val_dataset, _ = generate_sequence_dataset(val_fold_df)\n","\n","# # 3. DataLoader 생성\n","# train_loader = DataLoader(train_dataset, **train_params)\n","# val_loader = DataLoader(val_dataset, **test_params)\n","\n","# # 4. 모델 및 학습 객체 초기화\n","# model.to(cfg.device)\n","\n","# # 5. 학습 및 검증 실행\n","# train_losses, train_scores, val_losses, val_scores = train_and_validate(\n","#     model, train_loader, val_loader, optimizer, criterion, fold, scheduler\n","# )\n","\n","# all_train_losses.append(train_losses)\n","# all_train_scores.append(train_scores)\n","# all_val_losses.append(val_losses)\n","# all_val_scores.append(val_scores)"],"metadata":{"id":"BkqtVmOfnZca","executionInfo":{"status":"ok","timestamp":1750311222480,"user_tz":-540,"elapsed":4,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":21,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"HGuUoHMge_Ln"},"source":["# 2. 결과 시각화"]},{"cell_type":"markdown","source":["## loss, accuracy 시각화"],"metadata":{"id":"RolazQpE-q0S"}},{"cell_type":"code","source":["def plot_train_val_results_per_fold(\n","    all_train_losses,\n","    all_train_scores,\n","    all_val_losses,\n","    all_val_scores\n","):\n","    \"\"\"\n","    Fold별로 개별 학습 결과(Loss, Score)를 시각화하는 함수\n","    - 각 fold를 한 행에 표현 (5행)\n","    \"\"\"\n","    import numpy as np\n","    import matplotlib.pyplot as plt\n","\n","    num_folds = len(all_train_losses)\n","    epochs = np.arange(1, len(all_train_losses[0]) + 1)\n","\n","    fig, axes = plt.subplots(nrows=num_folds, ncols=2, figsize=(12, 4 * num_folds))\n","\n","    for fold in range(num_folds):\n","        # Loss\n","        axes[fold][0].plot(epochs, all_train_losses[fold], label='Train Loss', marker='o')\n","        axes[fold][0].plot(epochs, all_val_losses[fold], label='Val Loss', marker='s', linestyle='--')\n","        axes[fold][0].set_title(f'Fold {fold} - Loss')\n","        axes[fold][0].set_xlabel('Epoch')\n","        axes[fold][0].set_ylabel('Loss')\n","        axes[fold][0].legend()\n","        axes[fold][0].grid(True)\n","\n","        # Score\n","        axes[fold][1].plot(epochs, all_train_scores[fold], label='Train Score', marker='o')\n","        axes[fold][1].plot(epochs, all_val_scores[fold], label='Val Score', marker='s', linestyle='--')\n","        axes[fold][1].set_title(f'Fold {fold} - Score')\n","        axes[fold][1].set_xlabel('Epoch')\n","        axes[fold][1].set_ylabel('Score')\n","        axes[fold][1].legend()\n","        axes[fold][1].grid(True)\n","\n","    plt.tight_layout()\n","    plot_path = os.path.join(cfg.results_save_path, f\"trainval_curve.png\")\n","    plt.savefig(plot_path, dpi=300)\n","    plt.show()\n","\n","    print(f\"📊 Fold별 학습 결과 시각화 저장 완료: {plot_path}\")\n","\n","'''\n","plot_train_val_results_per_fold(\n","    all_train_losses,\n","    all_train_scores,\n","    all_val_losses,\n","    all_val_scores\n",")\n","'''"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":54},"id":"llgQuP59NYOQ","executionInfo":{"status":"ok","timestamp":1750311222576,"user_tz":-540,"elapsed":20,"user":{"displayName":"정현봉","userId":"00800786436397366756"}},"outputId":"48856262-2740-4829-d72d-4e4173988eca"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\nplot_train_val_results_per_fold(\\n    all_train_losses,\\n    all_train_scores,\\n    all_val_losses,\\n    all_val_scores\\n)\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","metadata":{"id":"RvogPajT106l"},"source":["## confusion matrix, classification_report 시각화"]},{"cell_type":"code","execution_count":23,"metadata":{"id":"PgKzQHFH84m0","executionInfo":{"status":"ok","timestamp":1750311222606,"user_tz":-540,"elapsed":26,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"outputs":[],"source":["'''\n","def load_all_best_models(model_class, device) -> List[torch.nn.Module]:\n","    \"\"\"폴더 내 모든 best_model_*.pth 파일을 불러와 모델 리스트 반환\"\"\"\n","    model_list = []\n","    pattern = os.path.join(cfg.model_save_path, \"best_model_*.pth\")\n","    model_paths = sorted(glob.glob(pattern))\n","\n","    for path in model_paths:\n","        model = model_class().to(device)\n","        checkpoint = torch.load(path, map_location=device)\n","        model.load_state_dict(checkpoint[\"model_state_dict\"])\n","        model.eval()\n","        model_list.append(model)\n","        print(f\"✅ Loaded: {os.path.basename(path)}\")\n","\n","    return model_list\n","'''\n","def load_all_best_models(model_class, device) -> List[torch.nn.Module]:\n","    \"\"\"best_model_{i}.pth 파일을 우선 불러오고, 없으면 last_model_{i}.pth 파일을 불러온다\"\"\"\n","    model_list = []\n","\n","    for i in range(5):\n","        best_model_path = os.path.join(cfg.model_save_path, f\"best_model_{i}.pth\")\n","        last_model_path = os.path.join(cfg.model_save_path, f\"last_model_{i}.pth\")\n","\n","        if os.path.exists(best_model_path):\n","            model_path = best_model_path\n","            print(f\"✅ Fold {i}: Loaded BEST model -> {os.path.basename(model_path)}\")\n","        elif os.path.exists(last_model_path):\n","            model_path = last_model_path\n","            print(f\"⚠️ Fold {i}: BEST model missing, loaded LAST model -> {os.path.basename(model_path)}\")\n","        else:\n","            print(f\"❌ Fold {i}: No model file found.\")\n","            continue  # 이 폴드에서는 아무 모델도 없으므로 스킵\n","\n","        model = model_class().to(device)\n","        checkpoint = torch.load(model_path, map_location=device)\n","        model.load_state_dict(checkpoint[\"model_state_dict\"])\n","        model.eval()\n","        model_list.append(model)\n","\n","    return model_list\n","\n","# Confusion Matrix 시각화 함수\n","def plot_confusion_matrix_and_report(\n","    y_true,\n","    y_pred,\n","    data_type,\n","    model_type=ModelType.BEST\n","    ):\n","    \"\"\"\n","    Confusion Matrix를 그리는 함수\n","    \"\"\"\n","    # == confusion matrix ==\n","    cm = confusion_matrix(y_true, y_pred)\n","    plt.figure(figsize=(6, 6))\n","    sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=cfg.labels, yticklabels=cfg.labels)\n","    plt.xlabel(\"Predicted Label\")\n","    plt.ylabel(\"True Label\")\n","    plt.title(\"Confusion Matrix\")\n","\n","    file_prefix = f\"{model_type.value}_{data_type.value}\"\n","    cm_path = os.path.join(cfg.results_save_path, f\"{file_prefix}_confusion_matrix.png\")\n","    plt.savefig(cm_path, dpi=300)  # 이미지 저장\n","    plt.show()\n","    plt.close()\n","    print(f\"✅ Confusion Matrix saved at: {cm_path}\")\n","\n","    # == classification report ==\n","    report = classification_report(y_true, y_pred, target_names=cfg.labels, output_dict=True)\n","    report_df = pd.DataFrame(report).transpose()\n","\n","    # 시각화\n","    fig, ax = plt.subplots(figsize=(10, len(report_df) * 0.6))\n","    ax.axis('off')\n","\n","    table = ax.table(\n","        cellText=report_df.round(3).values,\n","        colLabels=report_df.columns,\n","        rowLabels=report_df.index,\n","        loc='center',\n","        cellLoc='center'\n","    )\n","\n","    # 헤더 설정\n","    for j in range(len(report_df.columns)):\n","        cell = table[0, j]\n","        cell.set_facecolor('#d0d0d0')\n","        cell.set_fontsize(13)\n","        cell.set_text_props(weight='bold')\n","\n","    # 셀 스타일 조정\n","    for i in range(len(report_df)):\n","        for j in range(len(report_df.columns)):\n","            cell = table[i + 1, j]\n","            cell.set_fontsize(12)\n","            cell.set_height(0.09)\n","            cell.set_facecolor('#a9a9a9' if i % 2 == 0 else '#ffffff')\n","\n","    # 행 라벨 스타일 조정\n","    for i in range(len(report_df)):\n","        row_label = table[i + 1, -1] if (i + 1, -1) in table._cells else table[i + 1, 0]\n","        row_label.set_fontsize(12)\n","        row_label.set_text_props(weight='bold')\n","        row_label.set_height(0.09)\n","\n","    cr_path = os.path.join(cfg.results_save_path, f\"{file_prefix}_classification_report.png\")\n","    plt.savefig(cr_path, dpi=300, bbox_inches='tight')\n","    plt.show()\n","    plt.close()\n","    print(f\"📋 Classification Report table saved at: {cr_path}\")\n","\n","\n","def evaluate_models(models: List[torch.nn.Module], device, data_loader, data_type, model_type=ModelType.BEST):\n","    \"\"\"\n","    여러 모델의 softmax 확률을 평균 내어 예측하는 앙상블 평가 함수\n","    \"\"\"\n","    for model in models:\n","        model.eval()\n","\n","    all_preds = []\n","    all_labels = []\n","    all_probs = []\n","\n","    with torch.no_grad():\n","        for x_batch, y_batch in data_loader:\n","            x_batch, y_batch = x_batch.to(device), y_batch.to(device)\n","\n","            # 모델별 확률 예측값 저장\n","            ensemble_probs = []\n","\n","            for model in models:\n","                logits = model(x_batch)\n","                if isinstance(logits, tuple):\n","                    logits = logits[0]\n","                probs = F.softmax(logits, dim=1)\n","                ensemble_probs.append(probs)\n","\n","            # 확률 평균 (batch_size, num_classes)\n","            avg_probs = torch.stack(ensemble_probs).mean(dim=0)\n","\n","            y_pred_classes = torch.argmax(avg_probs, dim=1)\n","\n","            all_preds.extend(y_pred_classes.cpu().numpy())\n","            all_labels.extend(y_batch.cpu().numpy())\n","            all_probs.extend(avg_probs.cpu().numpy())\n","\n","    # Confusion Matrix 및 Classification Report\n","    plot_confusion_matrix_and_report(all_labels, all_preds, data_type, model_type)\n","\n","    return all_labels, all_preds, np.array(all_probs)"]},{"cell_type":"code","source":["models = load_all_best_models(DecoderRNN, cfg.device) # best model load"],"metadata":{"id":"x70cCjt985w2","executionInfo":{"status":"ok","timestamp":1750311257377,"user_tz":-540,"elapsed":34773,"user":{"displayName":"정현봉","userId":"00800786436397366756"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"1ba5b510-f1da-4482-9f94-715b5792c862"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["✅ Fold 0: Loaded BEST model -> best_model_0.pth\n","⚠️ Fold 1: BEST model missing, loaded LAST model -> last_model_1.pth\n","✅ Fold 2: Loaded BEST model -> best_model_2.pth\n","✅ Fold 3: Loaded BEST model -> best_model_3.pth\n","✅ Fold 4: Loaded BEST model -> best_model_4.pth\n"]}]},{"cell_type":"code","source":["eval_params = train_params.copy()\n","\n","# 평가용은 drop_last = False로 설정\n","eval_params['drop_last'] = False"],"metadata":{"id":"roxvGr6HIc_M","executionInfo":{"status":"ok","timestamp":1750311257380,"user_tz":-540,"elapsed":3,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","execution_count":26,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":947},"id":"5A0UX6Guuf14","outputId":"22ef89fa-8727-40e5-d48a-2d063ad055c3","executionInfo":{"status":"ok","timestamp":1750311268195,"user_tz":-540,"elapsed":10801,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["[Yaw Flip] Class 2 증강: 334 → 668 (추가 334)\n","[Yaw Flip] Class 3 증강: 135 → 270 (추가 135)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["✅ Confusion Matrix saved at: /content/drive/MyDrive/DMS/runs/bi-lstm_attention_ensemble_24f_yaw_flip_2.0/best_train_confusion_matrix.png\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x420 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["📋 Classification Report table saved at: /content/drive/MyDrive/DMS/runs/bi-lstm_attention_ensemble_24f_yaw_flip_2.0/best_train_classification_report.png\n"]}],"source":["# DataLoader 생성 (배치 단위로 데이터를 나누기 위해 사용)\n","train_loader = get_augmented_train_loader(train_df, cfg, eval_params,\n","                                          flip_multiplier=2.0)\n","val_dataset, val_metadata = generate_sequence_dataset(val_df)\n","test_dataset, test_metadata = generate_sequence_dataset(test_df)\n","\n","val_loader = DataLoader(val_dataset, **test_params)\n","test_loader = DataLoader(test_dataset, **test_params)\n","\n","train_labels, train_preds, train_probs = evaluate_models(models, cfg.device, train_loader, DataType.TRAIN)"]},{"cell_type":"code","source":["val_labels, val_preds, val_probs = evaluate_models(models, cfg.device, val_loader, DataType.VAL)"],"metadata":{"id":"9HvP8lJo-W60","executionInfo":{"status":"ok","timestamp":1750311270927,"user_tz":-540,"elapsed":2729,"user":{"displayName":"정현봉","userId":"00800786436397366756"}},"colab":{"base_uri":"https://localhost:8080/","height":910},"outputId":"1bc655b0-9764-41b8-ccbc-32884110869e"},"execution_count":27,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["✅ Confusion Matrix saved at: /content/drive/MyDrive/DMS/runs/bi-lstm_attention_ensemble_24f_yaw_flip_2.0/best_val_confusion_matrix.png\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x420 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["📋 Classification Report table saved at: /content/drive/MyDrive/DMS/runs/bi-lstm_attention_ensemble_24f_yaw_flip_2.0/best_val_classification_report.png\n"]}]},{"cell_type":"code","execution_count":28,"metadata":{"id":"PHssvdxb9X9f","executionInfo":{"status":"ok","timestamp":1750311274290,"user_tz":-540,"elapsed":3361,"user":{"displayName":"정현봉","userId":"00800786436397366756"}},"colab":{"base_uri":"https://localhost:8080/","height":910},"outputId":"42c4cfe7-1cf0-4068-90be-5469095a6ca5"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["✅ Confusion Matrix saved at: /content/drive/MyDrive/DMS/runs/bi-lstm_attention_ensemble_24f_yaw_flip_2.0/best_test_confusion_matrix.png\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x420 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["📋 Classification Report table saved at: /content/drive/MyDrive/DMS/runs/bi-lstm_attention_ensemble_24f_yaw_flip_2.0/best_test_classification_report.png\n"]}],"source":["test_labels, test_preds, test_probs = evaluate_models(models, cfg.device, test_loader, DataType.TEST)"]},{"cell_type":"markdown","source":["## 오분류 데이터 확인하기"],"metadata":{"id":"VgHCkPUE6S7o"}},{"cell_type":"markdown","source":["#### 클래스별 확신 높은 오분류 top-10 인덱스 추출"],"metadata":{"id":"DqyTjLKD_0ML"}},{"cell_type":"code","source":["def get_top_wrong_by_class(y_true, y_pred, y_prob, top_k=10, label_decoding=cfg.label_decoding):\n","    \"\"\"\n","    각 클래스에서 확신(confidence)이 높은 오분류 top-k 샘플 인덱스를 반환\n","\n","    Returns:\n","        result_dict: {class_name: [index1, index2, ...]} 형태\n","    \"\"\"\n","    num_classes = len(label_decoding)\n","    wrong_by_class = {label_decoding[c]: [] for c in range(num_classes)}\n","\n","    for i, (t, p) in enumerate(zip(y_true, y_pred)):\n","        if t != p:\n","            pred_confidence = y_prob[i][p]\n","            pred_class_name = label_decoding[p]\n","            wrong_by_class[pred_class_name].append((i, pred_confidence))\n","\n","    # 각 클래스별 confidence 높은 순으로 정렬 후 top-k만 추출\n","    result_dict = {}\n","    for class_name, wrong_list in wrong_by_class.items():\n","        top_k_sorted = sorted(wrong_list, key=lambda x: x[1], reverse=True)[:top_k]\n","        result_dict[class_name] = [idx for idx, _ in top_k_sorted]\n","\n","    return result_dict"],"metadata":{"id":"kgX9mmWY_3nM","executionInfo":{"status":"ok","timestamp":1750311274300,"user_tz":-540,"elapsed":8,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":29,"outputs":[]},{"cell_type":"markdown","source":["### 오분류 데이터 프레임 시각화"],"metadata":{"id":"xxSgk8b8Sl51"}},{"cell_type":"code","source":["def show_misclassified_sequence(y_true, y_pred, metadata, data_df, index):\n","    \"\"\"\n","    잘못 분류된 샘플 중 하나의 시퀀스를 시각화하는 함수\n","\n","    Args:\n","        y_true (list): 실제 정답 라벨들\n","        y_pred (list): 모델이 예측한 라벨들\n","        metadata (list of tuples): (label, clip_id, start_frame_index)\n","        data_df (pd.DataFrame): 전체 프레임 데이터프레임 (frame_path 포함)\n","        index (int): 보고 싶은 틀린 샘플의 인덱스 (0부터 시작)\n","    \"\"\"\n","    true_label = y_true[index]\n","    pred_label = y_pred[index]\n","    label, clip_id, start_frame = metadata[index]\n","\n","    true_label = cfg.label_decoding[true_label]\n","    pred_label = cfg.label_decoding[pred_label]\n","\n","    print(f\"\\n🔍 오분류 예시 #{index}\")\n","    print(f\"Clip ID: {clip_id}, Start Frame: {start_frame}\")\n","    print(f\"True Label: {true_label}, Predicted: {pred_label}\")\n","\n","    # 해당 시퀀스 프레임 추출\n","    frame_range = list(range(start_frame, start_frame + cfg.sequence_length))\n","    clip_df = data_df[(data_df[\"label\"] == true_label) &\n","                      (data_df[\"clip_id\"] == clip_id) &\n","                      (data_df[\"frame_no\"].isin(frame_range))].sort_values(\"frame_no\")\n","    frame_paths = clip_df[\"frame_path\"].tolist()\n","    print(f\"첫번째 프레임의 frame_path: \", frame_paths[0])\n","\n","    # 시각화\n","    n = len(frame_paths)\n","    fig, axes = plt.subplots(1, n, figsize=(n * 2, 2.5))\n","    if n == 1:\n","        axes = [axes]\n","\n","    for i, (ax, path) in enumerate(zip(axes, frame_paths)):\n","        try:\n","            img = Image.open(path)\n","            ax.imshow(img)\n","            ax.set_title(f\"#{i + start_frame}\")\n","            ax.axis('off')\n","        except Exception:\n","            ax.text(0.5, 0.5, 'Image Load Fail', ha='center', va='center')\n","            ax.axis('off')\n","\n","    plt.suptitle(f\"Wrong Prediction\\nTrue: {true_label} / Pred: {pred_label}\", fontsize=14)\n","    plt.tight_layout()\n","    plt.show()"],"metadata":{"id":"3IeTfW1Z4KeM","executionInfo":{"status":"ok","timestamp":1750311274310,"user_tz":-540,"elapsed":17,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["get_top_wrong_by_class(train_labels, train_preds, train_probs)"],"metadata":{"id":"KFWZP2OTAWGh","executionInfo":{"status":"ok","timestamp":1750311274383,"user_tz":-540,"elapsed":72,"user":{"displayName":"정현봉","userId":"00800786436397366756"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"26e27a73-f9e0-4afc-d573-363b2b243989"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'normal': [3110, 1402, 1664, 1352, 350, 1229, 2436, 40, 66, 928],\n"," 'phonecall': [],\n"," 'text': [708, 444, 618, 874, 546, 1020, 1064, 3126, 1015, 492],\n"," 'yawn': [560]}"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["# 예를 들어 7490번째 틀린 예측을 보고 싶을 때\n","'''\n","show_misclassified_sequence(\n","    y_true=train_labels,\n","    y_pred=train_preds,\n","    metadata=train_metadata,\n","    data_df=train_df,\n","    index=299\n",")\n","'''"],"metadata":{"id":"W1x4bk6C7GFM","executionInfo":{"status":"ok","timestamp":1750311274384,"user_tz":-540,"elapsed":62,"user":{"displayName":"정현봉","userId":"00800786436397366756"}},"colab":{"base_uri":"https://localhost:8080/","height":54},"outputId":"df241bc2-64a5-4672-8836-3541983c733e"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\nshow_misclassified_sequence(\\n    y_true=train_labels,\\n    y_pred=train_preds,\\n    metadata=train_metadata,\\n    data_df=train_df,\\n    index=299\\n)\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["## Attention 시각화 함수"],"metadata":{"id":"U0ZewTZssfjX"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","import torch\n","import math\n","import os\n","\n","def visualize_attention_by_class(model, dataset, class_indices: dict, feature_names=None, max_samples_per_class=1):\n","    \"\"\"\n","    여러 클래스의 attention 분포를 비교 시각화합니다.\n","\n","    Args:\n","        model: 학습된 LSTM+Attention 모델\n","        dataset: TensorDataset\n","        class_indices: {label_name(str): [indices]} - 클래스별 시각화할 인덱스 리스트\n","        feature_names: feature 이름 리스트\n","        max_samples_per_class: 각 클래스에서 시각화할 최대 샘플 수\n","    \"\"\"\n","\n","    model.eval()\n","    num_classes = len(class_indices)\n","    feature_names = feature_names or [f'F{i}' for i in range(len(cfg.features))]\n","\n","    fig, axes = plt.subplots(2, num_classes, figsize=(4 * num_classes, 6))  # 2 rows, N cols\n","\n","    if num_classes == 1:\n","        axes = np.expand_dims(axes, axis=1)  # (2,1) 모양으로 강제 reshape\n","\n","    for i, (label_name, indices) in enumerate(class_indices.items()):\n","        sample_idx = indices[0]\n","        x_seq, label = dataset[sample_idx]\n","        x_seq = x_seq.unsqueeze(0).to(cfg.device)\n","\n","        with torch.no_grad():\n","            output, attn_weights = model(x_seq)\n","\n","        attn_weights = attn_weights.squeeze().cpu().numpy()  # [T]\n","        x_np = x_seq.squeeze().cpu().numpy()                 # [T, F]\n","        time_steps = list(range(len(attn_weights)))\n","\n","        # Feature Heatmap\n","        ax1 = axes[0][i]\n","        sns.heatmap(x_np.T, cmap='viridis', cbar=True, xticklabels=time_steps,\n","                    yticklabels=feature_names, ax=ax1)\n","        ax1.set_title(f\"[{label_name}] Input Features\")\n","        ax1.set_xlabel(\"Time Step\")\n","        ax1.set_ylabel(\"Feature\")\n","\n","        # Attention Barplot\n","        ax2 = axes[1][i]\n","        sns.barplot(x=time_steps, y=attn_weights, ax=ax2)\n","        ax2.set_title(f\"[{label_name}] Attention Weights\")\n","        ax2.set_xlabel(\"Time Step\")\n","        ax2.set_ylabel(\"Weight\")\n","\n","    plt.tight_layout()\n","    save_path = os.path.join(cfg.results_save_path, \"attention_comparison_2x4.png\")\n","    plt.savefig(save_path, dpi=300)\n","    plt.show()\n","    plt.close()\n","    print(f\"✅ Attention comparison saved at: {save_path}\")\n"],"metadata":{"id":"k9xqo9Oat5yC","executionInfo":{"status":"ok","timestamp":1750311274385,"user_tz":-540,"elapsed":31,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["from collections import defaultdict\n","\n","def get_class_indices(dataset, label_decoding):\n","    class_indices = defaultdict(list)\n","\n","    for idx in range(len(dataset)):\n","        _, label_idx = dataset[idx]\n","        label_name = label_decoding[label_idx.item()]\n","        class_indices[label_name].append(idx)\n","\n","    return class_indices\n"],"metadata":{"id":"IwYO3muxKYtF","executionInfo":{"status":"ok","timestamp":1750311274387,"user_tz":-540,"elapsed":28,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["class_indices = get_class_indices(val_dataset, cfg.label_decoding)\n","selected_indices = {cls: [idxs[0]] for cls, idxs in class_indices.items()}\n","\n","visualize_attention_by_class(model, val_dataset, selected_indices, feature_names=['mar', 'ear', 'yaw', 'pitch', 'phone_detected'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":205},"id":"Iqboi7N0mfjY","executionInfo":{"status":"error","timestamp":1750311274412,"user_tz":-540,"elapsed":32,"user":{"displayName":"정현봉","userId":"00800786436397366756"}},"outputId":"fc3d612d-ee43-4f06-b743-83864a266a61"},"execution_count":35,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'model' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-35-1786524662.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mselected_indices\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0mcls\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0midxs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mcls\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0midxs\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mclass_indices\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mvisualize_attention_by_class\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mval_dataset\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mselected_indices\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeature_names\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'mar'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'ear'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'yaw'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'pitch'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'phone_detected'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'model' is not defined"]}]},{"cell_type":"code","source":[],"metadata":{"id":"juleS1JS_FtZ","executionInfo":{"status":"aborted","timestamp":1750311274416,"user_tz":-540,"elapsed":99158,"user":{"displayName":"정현봉","userId":"00800786436397366756"}}},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[{"file_id":"1ExyBOhUHwQaE84Sl5XhzMToswkmsHkZQ","timestamp":1750216336238},{"file_id":"1QlKJaZfYWA2CVEPRJgWJCb5pX6rnvq-x","timestamp":1750136940665}],"gpuType":"T4","toc_visible":true},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"accelerator":"GPU"},"nbformat":4,"nbformat_minor":0}